{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/sign-up/sign-up.component.ts","./src/app/authentication/sign-up/sign-up.component.html","./src/app/catch/gill-net-report/gill-net-report.component.ts","./src/app/catch/gill-net-report/gill-net-report.component.html","./src/app/catch/seine-report/seine-report.component.ts","./src/app/catch/seine-report/seine-report.component.html","./src/app/catch/troll-report/troll-report.component.ts","./src/app/catch/troll-report/troll-report.component.html","./src/app/data-models/catch-table-models/species-data.model.ts","./src/app/data-models/catch-table-models/table-rules.model.ts","./src/app/data-models/report-models/daily-catch-report.model.ts","./src/app/data-models/trip-models/gear-models/gear.model.ts","./src/app/data-models/trip-models/gear-models/net.model.ts","./src/app/data-models/trip-models/license-area.model.ts","./src/app/data-models/trip-models/trip.model.ts","./src/app/data-models/user-models/user-data.model.ts","./src/app/data-models/user-models/vessel-data.model.ts","./src/app/data-models/validator.model.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.html","./src/app/dialogs/add-species-dialog/add-species-dialog.component.ts","./src/app/dialogs/add-species-dialog/add-species-dialog.component.html","./src/app/dialogs/add-trip-dialog/add-trip-dialog.component.ts","./src/app/dialogs/add-trip-dialog/add-trip-dialog.component.html","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.ts","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.html","./src/app/home/active-trip-home/active-trip-home.component.ts","./src/app/home/active-trip-home/active-trip-home.component.html","./src/app/home/no-trip-home/no-trip-home.component.ts","./src/app/home/no-trip-home/no-trip-home.component.html","./src/app/home/offload-home/offload-home.component.ts","./src/app/home/offload-home/offload-home.component.html","./src/app/material/material.module.ts","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/reports/cancel-report/cancel-report.component.ts","./src/app/reports/cancel-report/cancel-report.component.html","./src/app/reports/end-report/end-report.component.ts","./src/app/reports/end-report/end-report.component.html","./src/app/reports/offload-report/offload-report.component.ts","./src/app/reports/offload-report/offload-report.component.html","./src/app/reports/pause-report/pause-report.component.ts","./src/app/reports/pause-report/pause-report.component.html","./src/app/reports/start-report/start-report.component.ts","./src/app/reports/start-report/start-report.component.html","./src/app/reports/submitted-report/submitted-report.component.ts","./src/app/reports/submitted-report/submitted-report.component.html","./src/app/services/local-storage.service.ts","./src/app/tel-input/tel-input.component.ts","./src/app/tel-input/tel-input.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\r\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'sign-up', component: SignUpComponent },\r\n  { path: 'start-report', component: StartReportComponent },\r\n  { path: 'end-report', component: EndReportComponent },\r\n  { path: 'pause-report', component: PauseReportComponent },\r\n  { path: 'cancel-report', component: CancelReportComponent },\r\n  { path: 'offload-report', component: OffloadReportComponent },\r\n  { path: 'submitted-report', component: SubmittedReportComponent },\r\n  { path: 'gill-net-report', component: GillNetReportComponent },\r\n  { path: 'seine-report', component: SeineReportComponent }, \r\n  { path: 'troll-report', component: TrollReportComponent },\r\n  { path: 'no-trip-home', component: NoTripHomeComponent },\r\n  { path: 'active-trip-home', component: ActiveTripHomeComponent },\r\n  { path: 'offload-home', component: OffloadHomeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bcsrif-elog';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from '@auth0/auth0-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { AddVesselDialogComponent } from './dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { NgbTimepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddTripDialogComponent } from './dialogs/add-trip-dialog/add-trip-dialog.component';\r\nimport { AddSpeciesDialogComponent } from './dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { OnlineStatusModule } from 'ngx-online-status';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { TelInputComponent } from './tel-input/tel-input.component';\r\nimport { environment as env } from '../environments/environment';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { AddNetDialogComponent } from './dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AddVesselDialogComponent,\r\n    AddTripDialogComponent,\r\n    AddSpeciesDialogComponent,\r\n    SignUpComponent,\r\n    TelInputComponent,\r\n    PauseReportComponent,\r\n    CancelReportComponent,\r\n    SubmittedReportComponent,\r\n    StartReportComponent,\r\n    EndReportComponent,\r\n    GillNetReportComponent,\r\n    AddNetDialogComponent,\r\n    SeineReportComponent,\r\n    TrollReportComponent,\r\n    NoTripHomeComponent,\r\n    MenuComponent,\r\n    ActiveTripHomeComponent,\r\n    OffloadHomeComponent,\r\n    OffloadReportComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MaterialModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OnlineStatusModule,\r\n    ToastrModule.forRoot(),\r\n    AppRoutingModule,\r\n    AuthModule.forRoot({\r\n      domain: env.auth0.domain,\r\n      clientId: env.auth0.clientId,\r\n      authorizationParams: {\r\n        redirect_uri: env.auth0.redirect_uri,\r\n        audience: env.auth0.audience\r\n      },\r\n      cacheLocation: 'localstorage'\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerImmediately'\r\n    }),\r\n    BrowserAnimationsModule,\r\n    NgbTimepickerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // check online status\r\n  isOnline: boolean = false;\r\n  onlineStatus: string = '';\r\n  loginButton: string = '';\r\n\r\n  // form validator error messages\r\n  emailError: string = 'Required';\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    email: new FormControl<string>('', [Validators.required, Validators.email])\r\n  });\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.isOnline = true;\r\n      this.onlineStatus = 'online';\r\n      this.loginButton = 'Login or Sign Up with Auth0';\r\n    }\r\n    else {\r\n      this.isOnline = false;\r\n      this.onlineStatus = 'offline';\r\n      this.loginButton = 'Login Offline';\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // email validation\r\n    this.form.get('email')?.valueChanges.subscribe(() => {\r\n      let emailErrors: ValidationErrors | null | undefined = this.form.get('email')?.errors;\r\n      if (emailErrors?.required) {\r\n        this.emailError = 'Required';\r\n      }\r\n      else if (emailErrors?.email) {\r\n        this.emailError = 'Invalid email format';\r\n      }\r\n      else {\r\n        this.emailError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  attemptLogin(): void {\r\n\r\n    // attempt to login with the entered credentials\r\n    // solution from https://community.auth0.com/t/isauthenticated-is-always-false/84794/3\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n\r\n      // if went offline while on page, reload app\r\n      if (!this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      this.auth.isAuthenticated$.subscribe((value: boolean) => {\r\n        if (!value) {\r\n          let query: string = window.location.search;\r\n          let shouldParseResult: boolean = query.includes(\"code=\") && query.includes(\"state=\");\r\n          if (shouldParseResult) {\r\n            try {\r\n              this.auth.handleRedirectCallback().subscribe((value) => {\r\n                console.log(\"Logged in!\", value);\r\n              });\r\n            } catch (err: unknown) {\r\n              console.log(\"Error parsing redirect:\", err);\r\n            }\r\n            window.history.replaceState({}, this.document.title, \"/\");\r\n          }\r\n          else {\r\n            this.auth.loginWithPopup().subscribe((value: void) => {\r\n              console.log(\"Logging in...\", value);\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            let id: string | undefined = user?.sub;\r\n\r\n            // check if user is new\r\n            if (id && this.isNewUser(id)) {\r\n              this.localStorageService.createNewUser(user);\r\n            }\r\n\r\n            this.router.navigate(['no-trip-home']);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // offline login\r\n    else {\r\n\r\n      // if went online while on page, reload app\r\n      if (this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      if (this.form.valid) {\r\n        let userIDs: string[] = this.localStorageService.getAllUserIDs();\r\n        for (let id of userIDs) {\r\n          let thisUser: UserData = this.localStorageService.getUserByID(id);\r\n          if (thisUser.userEmail === this.form.get('email')?.value) {\r\n            this.localStorageService.saveData('currID', id);\r\n            this.router.navigate(['no-trip-home']);\r\n            return;\r\n          }\r\n        }\r\n        this.toastr.error(\"User email does not exist\");\r\n      }\r\n    }\r\n  }\r\n\r\n  // check if user is a new user\r\n  isNewUser(id: string): boolean {\r\n\r\n    let ids: string[] = this.localStorageService.getAllUserIDs();\r\n    for (let existingID of ids) {\r\n      if (id === existingID) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container login-container\">\r\n\r\n  <div class=\"row\">\r\n    <h1 align=\"center\">\r\n      BC SRIF Login\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h2 align=\"center\">\r\n      You are currently {{onlineStatus}}\r\n    </h2>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\"\r\n        *ngIf=\"!isOnline\"\r\n        class=\"row\">\r\n\r\n    <h6 class=\"blue-heading\">\r\n      Email\r\n    </h6>\r\n\r\n    <mat-form-field appearance=\"outline\"\r\n                    class=\"form-field\">\r\n      <mat-label>\r\n        Email\r\n      </mat-label>\r\n      <input matInput\r\n             required\r\n             formControlName=\"email\">\r\n      <mat-error>\r\n        {{emailError}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </form>\r\n\r\n  <div class=\"row justify-content-center\">\r\n    <button mat-flat-button\r\n            class=\"login-button\"\r\n            type=\"submit\"\r\n            (click)=\"attemptLogin()\">\r\n      {{loginButton}}\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\nimport { FormControl, UntypedFormGroup, Validators, ValidationErrors } from '@angular/forms';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // show error message when field is invalid\r\n  finError: string = '';\r\n\r\n  // disable all buttons when authenticating\r\n  sending: boolean = false;\r\n\r\n  // regular expression for validation\r\n  regex: string = '^([a-zA-Z]|[0-9]|\\.|@)+$';\r\n\r\n  signupForm: UntypedFormGroup = new UntypedFormGroup({\r\n    firstName: new FormControl<string>('', [Validators.required]),\r\n    lastName: new FormControl<string>('', [Validators.required]),\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]),\r\n    fin: new FormControl<string>('', [Validators.minLength(5), Validators.maxLength(8), Validators.pattern(this.regex)])\r\n  });\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // license number validation\r\n    this.signupForm.get('fin')?.valueChanges.subscribe(() => {\r\n      let finErrors: ValidationErrors | null | undefined = this.signupForm.get('fin')?.errors;\r\n      if (finErrors?.minlength || finErrors?.maxlength) {\r\n        this.finError = '5 - 8 characters required';\r\n      }\r\n      else if (finErrors?.pattern) {\r\n        this.finError = 'Invalid characters detected, numbers and letters only';\r\n      }\r\n      else {\r\n        this.finError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // for testing\r\n  toHome(): void {\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n  // go back to the login screen\r\n  toLogin(): void {\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.toastr.error(\"Cannot log out while offline\", \"Logout failed\");\r\n      return;\r\n    }\r\n    this.auth.logout({\r\n      logoutParams: {\r\n        returnTo: this.document.location.origin\r\n      }\r\n    });\r\n  }\r\n\r\n  // attempt to sign up for an account\r\n  attemptSignUp(): void {\r\n\r\n    this.sending = true;\r\n\r\n    this.telInput.touched = true;\r\n    this.telInput.stateChanges.next();\r\n    this.signupForm.get('phoneNum')?.updateValueAndValidity();\r\n\r\n    // check username and password validity\r\n    if (this.signupForm.valid) {\r\n\r\n      if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n        this.toastr.error(\"Cannot sign up while offline\", \"Sign up failed\");\r\n        return;\r\n      }\r\n\r\n      // navigate to home screen\r\n      this.router.navigate(['home']);\r\n\r\n    }\r\n    else {\r\n      this.toastr.error(\"Missing credentials\", \"Sign up failed\");\r\n    }\r\n\r\n    this.sending = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container sign-up-container\">\r\n\r\n  <!-- Page title -->\r\n  <div class=\"row\">\r\n    <h1 align=\"center\">\r\n      BC SRIF Sign Up\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row justify-content-center center\">\r\n\r\n    <!-- Sign up form -->\r\n    <form class=\"form-sign-up\"\r\n          [formGroup]=\"signupForm\"\r\n          (ngSubmit)=\"attemptSignUp()\">\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-heading\">\r\n          Vessel Master First Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Vessel Master First Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"firstName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Vessel Master Last Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Vessel Master Last Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"lastName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          FIN (Fisher Identification Number)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Fisher Identification Number\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"fin\">\r\n          <mat-error>\r\n            {{finError}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Sign Up to continue account creation -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-orange\"\r\n                    type=\"submit\"\r\n                    aria-label=\"Sign Up\"\r\n                    [disabled]=\"sending\">\r\n              <span>\r\n                Sign Up\r\n                <mat-icon>\r\n                  arrow_forward\r\n                </mat-icon>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Back to log in screen -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-blue\"\r\n                    type=\"button\"\r\n                    [disabled]=\"sending\"\r\n                    (click)=\"toHome()\">\r\n              <span>\r\n                <mat-icon>\r\n                  arrow_back\r\n                </mat-icon>\r\n                Return to Home\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { Net } from 'src/app/data-models/trip-models/gear-models/net.model';\r\nimport { AddNetDialogComponent } from 'src/app/dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gill-net-report',\r\n  templateUrl: './gill-net-report.component.html',\r\n  styleUrls: ['./gill-net-report.component.css']\r\n})\r\nexport class GillNetReportComponent {\r\n\r\n  // for updating the table\r\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n  fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n\r\n  // data preambles\r\n  catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n  userNets: Net[] = [];\r\n  emptyNet: Net = new Net('', '', '', '', '', '', '', '', '');\r\n  gillNetTable: TableRules = new TableRules(); // used to filter table data\r\n\r\n  // values associated with each page\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n\r\n    net: new FormControl<Net>(this.emptyNet, [Validators.required]), //page 1\r\n    hoursFished: new FormControl<string>('', [Validators.required]), //page 2\r\n\r\n    //page 3\r\n    mgmtArea: new FormControl<string>('', [Validators.required]),\r\n    zoneArea: new FormControl<string>('', [Validators.required]),\r\n    numSets: new FormControl<string>('', [Validators.required]),\r\n\r\n    //page 5\r\n    comments: new FormControl<string>(''), // conditional validation\r\n    nonFish: new FormControl<string>('', [Validators.required]) \r\n  });\r\n\r\n  catchDate: Date = new Date(); //page 2 \r\n  displayedColumns: string[] = []; // page 4\r\n\r\n\r\n  // section to section\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.router.navigate(['login']);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.onNonFishChange();\r\n\r\n  }\r\n\r\n  onNonFishChange(): void {\r\n    this.form.get('nonFish')?.valueChanges.subscribe(value =>{\r\n      const commentControl = this.form.get('comments');\r\n\r\n      if(value === 'Yes'){\r\n        commentControl?.setValidators([Validators.required]);\r\n      }\r\n      else {\r\n        commentControl?.clearValidators();\r\n      }\r\n      commentControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    // get all required data\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n    this.userNets = this.userDetails.nets;\r\n    this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n    this.gillNetTable = this.localStorageService.getTableRules('Gill Net');\r\n\r\n    this.filterTableData(); // filters table data as well as species list accessible to the user\r\n    this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n    // fill catch page details\r\n    let pages: number = 5; \r\n    this.numPages = pages;\r\n    this.spinnerIncrement = 100 / pages;\r\n\r\n\r\n    this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n\r\n    // go to first screen\r\n    this.toNextPage();\r\n  }\r\n\r\n  populateReport(): void {\r\n\r\n    // initialize form with net data\r\n    let currNet: Net = this.getSelectedNet();\r\n    this.form.patchValue({\r\n      net: currNet\r\n    });\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.form.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  filterTableData(): void {  // filters table data as well as species list accessible to the user\r\n    for(let species of this.unfilteredFishList){\r\n      if(this.gillNetTable.containsSpecies.includes(species.speciesName)) {\r\n        this.fishListDetails.push(species);\r\n      }\r\n      if(!this.gillNetTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n    }\r\n  }\r\n\r\n  determineCellStyling(value: number, name: string = ''): string {\r\n\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } else if (this.isReleaseOnly(name)) { \r\n      return 'release-only-cell';\r\n    }\r\n\r\n    return 'faded-cell';\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.gillNetTable.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  // save current user data to local storage\r\n  saveUserDetails(): void {\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // get the currently selected net\r\n  getSelectedNet(): Net {\r\n    for (let net of this.userNets) {\r\n      if (net.isChecked) {\r\n        return net;\r\n      }\r\n    }\r\n    return this.userNets[0];\r\n  }\r\n\r\n  // set the radio buttons to the currently selected net in the catch report\r\n  setSelectedNet(currNet: Net): void {\r\n    for (let net of this.userNets) {\r\n      net.isChecked = (net.netName === currNet.netName);\r\n    }\r\n  }\r\n\r\n  // save the selected user nets for UI\r\n  saveUserNets(): void {\r\n    let currNet: Net = this.form.get('net')?.value;\r\n    this.setSelectedNet(currNet);\r\n    this.form.patchValue({\r\n      net: currNet\r\n    });\r\n    this.saveUserDetails();\r\n  }\r\n\r\n  // go to the next page\r\n  toNextPage(): void {\r\n\r\n    // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n      this.saveUserNets();\r\n      this.incrementPage();\r\n    }\r\n\r\n    // page is final page\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // go forward a page, changing the current page number and the spinner progress\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // go back to previous page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.saveUserNets();\r\n      this.toHome();\r\n    }\r\n    else {\r\n      this.currPage--;\r\n      this.spinnerProgress -= this.spinnerIncrement;\r\n    }\r\n\r\n  }\r\n\r\n  // add a new net\r\n  addNetDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddNetDialogComponent, any> = this.dialog.open(AddNetDialogComponent, {\r\n      width: '500px',\r\n      height: '550px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected net as new net added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let net of this.userNets) { // un-check other nets\r\n            net.isChecked = false;\r\n          }\r\n          let newNet: Net = new Net(result.netType, result.netName, result.netLength, result.netDepth, result.netUnits, \r\n            result.hangRatio, result.meshSize, result.meshUnits, result.numMeshes, result.numStrands, true); \r\n           this.form.patchValue({\r\n             net: newNet\r\n           });\r\n           this.userDetails.nets.push(newNet);\r\n           this.saveUserDetails(); //updating local storage\r\n           this.toNextPage();\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // update the specified species catch table\r\n  updateTable(): void {\r\n    this.table.renderRows();\r\n  }\r\n\r\n  calculateTotalFish(type: string): number {\r\n\r\n    let totalFish = 0;\r\n\r\n    if(type === 'kept'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].kept;\r\n      }\r\n    }else if(type === 'released'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].released;\r\n      }\r\n    }\r\n    return totalFish;\r\n  }\r\n\r\n  // get new species data from result\r\n  getNewSpecies(result: SpeciesData): SpeciesData {\r\n\r\n    let kept: number = result.kept ? +result.kept : 0;\r\n    let released: number = result.released ? +result.released : 0;\r\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n    newSpeciesData.kept = kept;\r\n    newSpeciesData.released = released;\r\n\r\n    return newSpeciesData;\r\n\r\n  }\r\n\r\n  // add new species to the catch\r\n  addSpecies(fishListDetails: SpeciesData[]): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // adding a species to the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails.push(this.getNewSpecies(result));\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // edit or delete a species from the catch\r\n  editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // editing a species in the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails[index] = this.getNewSpecies(result);\r\n        }\r\n\r\n        // delete a species in the catch\r\n        else {\r\n          fishListDetails.splice(index, 1);\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // add to, edit or delete from species catch list\r\n  addSpeciesDialog(index: number = -1): void {\r\n\r\n    // editing or deleting a species\r\n    if (index > -1) {\r\n          this.editSpecies(this.fishListDetails, index);\r\n      }\r\n\r\n    // adding a species\r\n    else {\r\n          this.addSpecies(this.fishListDetails);\r\n      }\r\n\r\n  }\r\n\r\n  // send catch to DFO\r\n  sendToDFO(): void {\r\n    if (this.form.valid) {\r\n      this.saveCatchReport();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n  }\r\n\r\n  // back to home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n   // forbid field from entering non-decimal values\r\n   forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  // get net value\r\n  netVal(): string {\r\n\r\n    let getNet: AbstractControl<any, any> | null = this.form.get('net');\r\n  \r\n    if (getNet?.errors?.required) {\r\n      return '[Required]';\r\n    }\r\n    return getNet?.value;\r\n  \r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them \r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept != 0 || fish.released !=0 ) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n  // saves all Daily Catch Report information pertinent to Gill Net\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.netUsed = this.form.get('net')?.value; \r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.form.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n    this.catchReport.comments = this.form.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport); \r\n\r\n    // save currTrip to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Gill Net Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1: Select or Add Net -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Which net did you use to fish?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <mat-radio-group class=\"radio\"\r\n                               aria-label=\"Select or add net\"\r\n                               formControlName=\"net\">\r\n                <mat-radio-button *ngFor=\"let net of userNets\"\r\n                                  [value]=\"net\"\r\n                                  [checked]=\"net.isChecked\">\r\n                  <h6 style=\"font-weight:bold\">\r\n                    <small class=\"text-muted text-small\">\r\n                      {{net}}\r\n                    </small>\r\n                  </h6>\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n  \r\n        <div class=\"row add-item\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <div class=\"row\">\r\n              <button mat-raised-button\r\n                      class=\"fishing-button-red\"\r\n                      type=\"button\"\r\n                      (click)=\"addNetDialog()\">\r\n                Add Net\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Q2 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 2\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q3: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 3\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include sub-area)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"mgmtArea\"\r\n                   placeholder=\"Management Area\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- may need to modify the data in sub area, or change the input to allow for multiple -->\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"zoneArea\"\r\n                   placeholder=\"Subarea(s)\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you cast?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n              <mat-error *ngIf=\"form.invalid\">\r\n                Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q4: Catch Table -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n              <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                  *matCellDef=\"let element\">\r\n              {{element.kept}}\r\n              </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q5: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 5\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n                  <b> Net Used: </b> \r\n                {{ netVal() }}  \r\n            </h6>\r\n          </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b> Hours Fished:</b>\r\n              <small *ngIf=\"!form.get('hoursFished')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n              <small *ngIf=\"form.get('hoursFished')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n              <small *ngIf=\"!form.get('zoneArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('zoneArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small *ngIf=\"!form.get('numSets')?.errors?.required\"\r\n                   class=\"blue-label\">\r\n              {{form.get('numSets')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('numSets')?.errors?.required\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-seine-report',\r\n  templateUrl: './seine-report.component.html',\r\n  styleUrls: ['./seine-report.component.css']\r\n})\r\nexport class SeineReportComponent {\r\n\r\n   // for updating the table\r\n   @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n   responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n \r\n   fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n \r\n   // data preambles\r\n   catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n   currTrip: Trip = new Trip();\r\n   userDetails: UserData = new UserData('', '');\r\n   unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n   fishList: SpeciesData[] = []; // filtered list of species data, will comprise the user's look-up list\r\n   seineTable: TableRules = new TableRules(); // used to filter table data\r\n \r\n   // values associated with each page\r\n   form: UntypedFormGroup = new UntypedFormGroup({\r\n \r\n     hoursFished: new FormControl<string>('', [Validators.required]), //page 1\r\n \r\n     //page 2\r\n     mgmtArea: new FormControl<string>('', [Validators.required]),\r\n     zoneArea: new FormControl<string>('', [Validators.required]),\r\n     numSets: new FormControl<string>('', [Validators.required]),\r\n \r\n     //page 4\r\n     comments: new FormControl<string>(''), // conditional validation\r\n     nonFish: new FormControl<string>('', [Validators.required]) \r\n   });\r\n \r\n   catchDate: Date = new Date(); //page 1 \r\n   displayedColumns: string[] = []; // page 3\r\n \r\n \r\n   // section to section\r\n   numPages: number = 0;\r\n   currPage: number = 0;\r\n   spinnerProgress: number = 0;\r\n   spinnerIncrement: number = 0;\r\n \r\n   constructor(\r\n     public dialog: MatDialog,\r\n     public auth: AuthService,\r\n     private router: Router,\r\n     private onlineStatusService: OnlineStatusService,\r\n     private toastr: ToastrService,\r\n     private localStorageService: LocalStorageService\r\n   ) {\r\n \r\n     if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n       let currID: string = this.localStorageService.getCurrID();\r\n       this.userDetails = this.localStorageService.getUserByID(currID);\r\n       this.initialize();\r\n     }\r\n \r\n     else {\r\n       this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n         if (authd) {\r\n           this.auth.user$.subscribe((user: User | null | undefined) => {\r\n             if (user) {\r\n \r\n               // fill trip, net, license area, net and species lists\r\n               this.userDetails = this.localStorageService.getUser(user);\r\n               this.initialize();\r\n \r\n             }\r\n           });\r\n         }\r\n         else {\r\n           this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n           this.router.navigate(['login']);\r\n         }\r\n       });\r\n     }\r\n \r\n   }\r\n \r\n   ngOnInit(): void {\r\n \r\n     this.onNonFishChange();\r\n \r\n   }\r\n \r\n   onNonFishChange(): void {\r\n     this.form.get('nonFish')?.valueChanges.subscribe(value =>{\r\n       const commentControl = this.form.get('comments');\r\n \r\n       if(value === 'Yes'){\r\n         commentControl?.setValidators([Validators.required]);\r\n       }else{\r\n         commentControl?.clearValidators();\r\n       }\r\n       commentControl?.updateValueAndValidity();\r\n     })\r\n   }\r\n \r\n   // initialize the data\r\n   initialize(): void {\r\n \r\n     // get all required data\r\n     this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n     this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n     this.seineTable = this.localStorageService.getTableRules('Seine');\r\n \r\n     this.filterTableData(); // filters table data as well as species list accessible to the user\r\n     this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n \r\n     // fill catch page details\r\n     let pages: number = 4; \r\n     this.numPages = pages;\r\n     this.spinnerIncrement = 100 / pages;\r\n \r\n \r\n     this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n \r\n     // go to first screen\r\n     this.toNextPage();\r\n   }\r\n\r\n   populateReport(): void {\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.form.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n \r\n   filterTableData(): void{ // filters table data as well as species list accessible to the user\r\n     for(let species of this.unfilteredFishList){\r\n       if(this.seineTable.containsSpecies.includes(species.speciesName)){\r\n         this.fishListDetails.push(species);\r\n       }\r\n       if(!this.seineTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n     }\r\n   }\r\n\r\n  determineCellStyling(value: number): string {\r\n\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } \r\n    \r\n    return 'faded-cell';\r\n  }\r\n \r\n   // go to the next page\r\n   toNextPage(): void {\r\n \r\n     // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n       this.incrementPage();\r\n     }\r\n \r\n     // page is final page\r\n     else {\r\n       this.sendToDFO();\r\n     }\r\n \r\n   }\r\n \r\n   // go forward a page, changing the current page number and the spinner progress\r\n   incrementPage(): void {\r\n     this.currPage++;\r\n     this.spinnerProgress += this.spinnerIncrement;\r\n   }\r\n \r\n   // go back to previous page\r\n   toPreviousPage(): void {\r\n \r\n     if (this.currPage === 1) {\r\n       this.toHome();\r\n     }\r\n     else {\r\n       this.currPage--;\r\n       this.spinnerProgress -= this.spinnerIncrement;\r\n     }\r\n \r\n   }\r\n \r\n \r\n   // update the specified species catch table\r\n   updateTable(): void {\r\n     this.table.renderRows();\r\n   }\r\n \r\n   calculateTotalFish(type: string): number {\r\n \r\n     let totalFish = 0;\r\n \r\n     if(type === 'kept'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].kept;\r\n       }\r\n     }else if(type === 'released'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].released;\r\n       }\r\n     }\r\n     return totalFish;\r\n   }\r\n \r\n   // get new species data from result\r\n   getNewSpecies(result: SpeciesData): SpeciesData {\r\n \r\n     let kept: number = result.kept ? +result.kept : 0;\r\n     let released: number = result.released ? +result.released : 0;\r\n     let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n     newSpeciesData.kept = kept;\r\n     newSpeciesData.released = released;\r\n \r\n     return newSpeciesData;\r\n \r\n   }\r\n \r\n   // add new species to the catch\r\n   addSpecies(fishListDetails: SpeciesData[]): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // adding a species to the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails.push(this.getNewSpecies(result));\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // edit or delete a species from the catch\r\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // editing a species in the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails[index] = this.getNewSpecies(result);\r\n         }\r\n \r\n         // delete a species in the catch\r\n         else {\r\n           fishListDetails.splice(index, 1);\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n \r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // add to, edit or delete from species catch list\r\n   addSpeciesDialog(index: number = -1): void {\r\n \r\n     // editing or deleting a species\r\n     if (index > -1) {\r\n           this.editSpecies(this.fishListDetails, index);\r\n       }\r\n \r\n     // adding a species\r\n     else {\r\n           this.addSpecies(this.fishListDetails);\r\n       }\r\n \r\n   }\r\n \r\n   // send catch to DFO\r\n   sendToDFO(): void {\r\n     if (this.form.valid) {\r\n      this.saveCatchReport();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n      return;\r\n     }\r\n     this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n   }\r\n \r\n   // back to home screen\r\n   toHome(): void {\r\n     this.router.navigate(['active-trip-home']);\r\n   }\r\n \r\n    // forbid field from entering non-decimal values\r\n    forbidNonNumeric(controlName: string): void {\r\n     let control: AbstractControl = this.form.get(controlName)!;\r\n     control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n    }\r\n \r\n     // get net value\r\n  netVal(): string {\r\n \r\n      let getNet: AbstractControl<any, any> | null = this.form.get('net');\r\n   \r\n      if (getNet?.errors?.required) {\r\n        return '[Required]';\r\n      }\r\n      return getNet?.value;\r\n\r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them \r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept != 0 || fish.released !=0 ) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n     // saves all Daily Catch Report information pertinent to Seine\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.form.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n    this.catchReport.comments = this.form.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport); \r\n\r\n    // save currTrip to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Seine Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include sub-area)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"mgmtArea\"\r\n                   placeholder=\"Management Area\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"zoneArea\"\r\n                   placeholder=\"Subarea(s)\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you cast?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n              <mat-error *ngIf=\"form.invalid\">\r\n                Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b> Hours Fished:</b>\r\n              <small *ngIf=\"!form.get('hoursFished')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n              <small *ngIf=\"form.get('hoursFished')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n              <small *ngIf=\"!form.get('zoneArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('zoneArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small *ngIf=\"!form.get('numSets')?.errors?.required\"\r\n                   class=\"blue-label\">\r\n              {{form.get('numSets')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('numSets')?.errors?.required\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-troll-report',\r\n  templateUrl: './troll-report.component.html',\r\n  styleUrls: ['./troll-report.component.css']\r\n})\r\nexport class TrollReportComponent {\r\n\r\n     // for updating the table\r\n     @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n     //hardcoded values to be used in the form\r\n     responseOptions: string[] = ['Yes', 'No']; \r\n     stateOptions: string[] = ['Frozen', 'Iced'];\r\n   \r\n     fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n     trollTable: TableRules = new TableRules(); // used to filter table data\r\n  \r\n     // data preambles\r\n     catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n     currTrip: Trip = new Trip();\r\n     userDetails: UserData = new UserData('', '');\r\n     unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n     fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n   \r\n     // values associated with each page\r\n     form: UntypedFormGroup = new UntypedFormGroup({\r\n   \r\n       hoursFished: new FormControl<string>('', [Validators.required]), //page 1\r\n   \r\n       //page 2\r\n       mgmtArea: new FormControl<string>('', [Validators.required]),\r\n       zoneArea: new FormControl<string>('', [Validators.required]),\r\n       frozenOrIced: new FormControl<string>('', [Validators.required]),\r\n   \r\n       //page 4\r\n       comments: new FormControl<string>(''), // conditional validation\r\n       nonFish: new FormControl<string>('', [Validators.required]) \r\n     });\r\n   \r\n     catchDate: Date = new Date(); //page 1 \r\n     displayedColumns: string[] = []; // page 3\r\n   \r\n   \r\n     // section to section\r\n     numPages: number = 0;\r\n     currPage: number = 0;\r\n     spinnerProgress: number = 0;\r\n     spinnerIncrement: number = 0;\r\n   \r\n     constructor(\r\n       public dialog: MatDialog,\r\n       public auth: AuthService,\r\n       private router: Router,\r\n       private onlineStatusService: OnlineStatusService,\r\n       private toastr: ToastrService,\r\n       private localStorageService: LocalStorageService\r\n     ) {\r\n   \r\n       if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n         let currID: string = this.localStorageService.getCurrID();\r\n         this.userDetails = this.localStorageService.getUserByID(currID);\r\n         this.initialize();\r\n       }\r\n   \r\n       else {\r\n         this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n           if (authd) {\r\n             this.auth.user$.subscribe((user: User | null | undefined) => {\r\n               if (user) {\r\n   \r\n                 // fill trip, net, license area, net and species lists\r\n                 this.userDetails = this.localStorageService.getUser(user);\r\n                 this.initialize();\r\n   \r\n               }\r\n             });\r\n           }\r\n           else {\r\n             this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n             this.router.navigate(['login']);\r\n           }\r\n         });\r\n       }\r\n   \r\n     }\r\n   \r\n     ngOnInit(): void {\r\n   \r\n       this.onNonFishChange();\r\n   \r\n     }\r\n   \r\n     onNonFishChange(): void {\r\n       this.form.get('nonFish')?.valueChanges.subscribe(value =>{\r\n         const commentControl = this.form.get('comments');\r\n   \r\n         if(value === 'Yes'){\r\n           commentControl?.setValidators([Validators.required]);\r\n         }else{\r\n           commentControl?.clearValidators();\r\n         }\r\n         commentControl?.updateValueAndValidity();\r\n       })\r\n     }\r\n   \r\n     // initialize the data\r\n     initialize(): void {\r\n   \r\n       // get all required data\r\n       this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n       this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n       this.trollTable = this.localStorageService.getTableRules('Troll');\r\n   \r\n       this.filterTableData(); //gets data to fill the table (subset of fishList)\r\n       this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n   \r\n       // fill catch page details\r\n       let pages: number = 4; \r\n       this.numPages = pages;\r\n       this.spinnerIncrement = 100 / pages;\r\n   \r\n   \r\n       this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n   \r\n       // go to first screen\r\n       this.toNextPage();\r\n     }\r\n\r\n     populateReport(): void {\r\n\r\n      let numReports: number = this.currTrip.dailyCatchReports.length;\r\n      if (numReports > 0) {\r\n        let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n        this.form.patchValue({ // fill report input fields\r\n          hoursFished: prevReport.hoursFished,\r\n          mgmtArea: prevReport.managementArea,\r\n          zoneArea: prevReport.subArea,\r\n          frozenOrIced: prevReport.frozenOrIced,\r\n          nonFish: prevReport.nonFish,\r\n          comments: prevReport.comments\r\n        });\r\n      }\r\n  \r\n    }\r\n   \r\n     filterTableData(): void { // filters table data as well as species list accessible to the user\r\n       for(let species of this.unfilteredFishList){\r\n         if(this.trollTable.containsSpecies.includes(species.speciesName)){\r\n           this.fishListDetails.push(species);\r\n         }\r\n         if(!this.trollTable.excludesSpecies.includes(species.speciesName)) {\r\n          this.fishList.push(species);\r\n        }\r\n       }\r\n     }\r\n\r\n     determineCellStyling(value: number, name: string = ''): string {\r\n\r\n      if(value>0){\r\n        return 'bolded-cell';\r\n      } else if (this.isReleaseOnly(name)) { \r\n        return 'release-only-cell';\r\n      }\r\n      return 'faded-cell';\r\n    }\r\n\r\n    isReleaseOnly(name: string): boolean {\r\n      if(this.trollTable.releaseOnlySpecies.includes(name)){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n   \r\n     // go to the next page\r\n     toNextPage(): void {\r\n   \r\n       // page does not contain date\r\n      if (this.currPage <= this.numPages) {\r\n         this.incrementPage();\r\n       }\r\n   \r\n       // page is final page\r\n       else {\r\n         this.sendToDFO();\r\n       }\r\n   \r\n     }\r\n   \r\n     // go forward a page, changing the current page number and the spinner progress\r\n     incrementPage(): void {\r\n       this.currPage++;\r\n       this.spinnerProgress += this.spinnerIncrement;\r\n     }\r\n   \r\n     // go back to previous page\r\n     toPreviousPage(): void {\r\n   \r\n       if (this.currPage === 1) {\r\n         this.toHome();\r\n       }\r\n       else {\r\n         this.currPage--;\r\n         this.spinnerProgress -= this.spinnerIncrement;\r\n       }\r\n   \r\n     }\r\n   \r\n   \r\n     // update the specified species catch table\r\n     updateTable(): void {\r\n       this.table.renderRows();\r\n     }\r\n   \r\n     calculateTotalFish(type: string): number {\r\n   \r\n       let totalFish = 0;\r\n   \r\n       if(type === 'kept'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].kept;\r\n         }\r\n       }else if(type === 'released'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].released;\r\n         }\r\n       }\r\n       return totalFish;\r\n     }\r\n   \r\n     // get new species data from result\r\n     getNewSpecies(result: SpeciesData): SpeciesData {\r\n   \r\n       let kept: number = result.kept ? +result.kept : 0;\r\n       let released: number = result.released ? +result.released : 0;\r\n       let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n       newSpeciesData.kept = kept;\r\n       newSpeciesData.released = released;\r\n   \r\n       return newSpeciesData;\r\n   \r\n     }\r\n   \r\n     // add new species to the catch\r\n     addSpecies(fishListDetails: SpeciesData[]): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // adding a species to the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails.push(this.getNewSpecies(result));\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // edit or delete a species from the catch\r\n     editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // editing a species in the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails[index] = this.getNewSpecies(result);\r\n           }\r\n   \r\n           // delete a species in the catch\r\n           else {\r\n             fishListDetails.splice(index, 1);\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n   \r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // add to, edit or delete from species catch list\r\n     addSpeciesDialog(index: number = -1): void {\r\n   \r\n       // editing or deleting a species\r\n       if (index > -1) {\r\n             this.editSpecies(this.fishListDetails, index);\r\n         }\r\n   \r\n       // adding a species\r\n       else {\r\n             this.addSpecies(this.fishListDetails);\r\n         }\r\n   \r\n     }\r\n   \r\n     // send catch to DFO\r\n     sendToDFO(): void {\r\n       if (this.form.valid) {\r\n        this.saveCatchReport();\r\n        this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n        return;\r\n       }\r\n       this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n     }\r\n   \r\n     // back to home screen\r\n     toHome(): void {\r\n       this.router.navigate(['active-trip-home']);\r\n     }\r\n   \r\n      // forbid field from entering non-decimal values\r\n      forbidNonNumeric(controlName: string): void {\r\n       let control: AbstractControl = this.form.get(controlName)!;\r\n       control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n     }\r\n   \r\n       // get net value\r\n    netVal(): string {\r\n   \r\n      let getNet: AbstractControl<any, any> | null = this.form.get('net');\r\n     \r\n      if (getNet?.errors?.required) {\r\n        return '[Required]';\r\n      }\r\n      return getNet?.value;\r\n     \r\n    }\r\n\r\n    // creates a list of all species in the table that have non-zero data associated with them \r\n    determineSpeciesData(): SpeciesData[] {\r\n\r\n      let tempFishArray: SpeciesData[] = [];\r\n\r\n      for(let fish of this.fishListDetails) {\r\n        if(fish.kept != 0 || fish.released !=0 ) {\r\n          tempFishArray.push(fish);\r\n        }\r\n      }\r\n      return tempFishArray;\r\n    }\r\n\r\n      // saves all Daily Catch Report information pertinent to Troll\r\n    saveCatchReport(): void {\r\n\r\n      // save relevant information gathered in the form\r\n      this.catchReport.dateFished = this.catchDate;\r\n      this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n      this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n      this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n      this.catchReport.frozenOrIced = this.form.get('frozenOrIced')?.value;\r\n      this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n      this.catchReport.comments = this.form.get('comments')?.value;\r\n      this.catchReport.speciesDataList = this.determineSpeciesData();\r\n\r\n      // push the report to currTrip\r\n      this.currTrip.dailyCatchReports.push(this.catchReport); \r\n\r\n      // save currTrip to local storage\r\n      this.userDetails.currTrip = this.currTrip;\r\n      this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n    }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Troll Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include sub-area)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"mgmtArea\"\r\n                   placeholder=\"Management Area\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Zone(s) or Subarea(s) Fished <br>\r\n            (Use zones for areas 121-127; comma-separate if multiple)\r\n          </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <input matInput\r\n                   formControlName=\"zoneArea\"\r\n                   placeholder=\"Zone(s) or Subarea(s)\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Frozen or Iced?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Frozen or Iced \r\n            </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"frozenOrIced\">\r\n                  <mat-option *ngFor=\"let state of stateOptions\"\r\n                              [value]=\"state\">\r\n                    {{state}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\"\r\n                                style=\"padding-top: 15px;\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"nonFish\">\r\n                    <mat-option *ngFor=\"let response of responseOptions\"\r\n                                [value]=\"response\">\r\n                      {{response}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b> Hours Fished:</b>\r\n              <small *ngIf=\"!form.get('hoursFished')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n              <small *ngIf=\"form.get('hoursFished')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Zone(s) or Subarea(s) Fished:</b> \r\n              <small *ngIf=\"!form.get('zoneArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('zoneArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Frozen or Iced?:</b>\r\n            <small *ngIf=\"!form.get('frozenOrIced')?.errors?.required\"\r\n                   class=\"blue-label\">\r\n              {{form.get('frozenOrIced')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('frozenOrIced')?.errors?.required\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","export class SpeciesData {\r\n\r\n  speciesName: string = '';\r\n\r\n  /* Fields for daily catch reports */\r\n\r\n  kept: number = 0;\r\n\r\n  released: number = 0;\r\n\r\n  /* Fields for offload catch reports */\r\n\r\n  offloadWeight: number = 0;\r\n\r\n  weightUnits: string = '';\r\n\r\n  offloadPieces: number = 0; \r\n\r\n  constructor(speciesName: string) {\r\n    this.speciesName = speciesName;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.speciesName;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.speciesName != '' && this.kept >= 0 && this.released >= 0;\r\n  }\r\n\r\n}\r\n","export class TableRules {\r\n\r\n  tableType: string = '';\r\n\r\n  gearName: string = '';\r\n\r\n  containsSpecies: string[] = [];\r\n\r\n  excludesSpecies: string[] = [];\r\n\r\n  releaseOnlySpecies: string[] = [];\r\n\r\n  constructor(type: string = '', name: string = '') {\r\n      this.gearName = name;\r\n      this.tableType = type;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return this.gearName != '' && this.containsSpecies.length > 0;\r\n  }\r\n\r\n}\r\n\r\n","import { Net } from \"../trip-models/gear-models/net.model\";\nimport { SpeciesData } from \"../catch-table-models/species-data.model\";\n\nexport class DailyCatchReport {\n\n    netUsed: Net = new Net('', '', '', '', '', '', '', '', ''); // unique to Gill Net\n\n    dateFished: Date = new Date();\n\n    hoursFished: string = '';\n\n    managementArea: string = '';\n\n    subArea: string = '';\n\n    numSets: string = ''; // unique to Gill Net & Seine\n\n    frozenOrIced: string = ''; // unqique to Troll\n\n    speciesDataList: SpeciesData[] = []; // catch data\n\n    nonFish: string = '';\n\n    comments: string = '';\n\n    confirmationNumber: string = ''; // daily catch report confirmation number (not being used yet)\n\n    constructor() {\n\n    }\n\n    public toString(): string {\n        return 'Date: ' + this.dateFished + '; Daily Catch Report Confirmation Number: ' + this.confirmationNumber;\n      }\n  \n\n}\n","export class Gear {\r\n\r\n  name: string = '';\r\n\r\n  logbookID: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(name: string = '', id: string = '', checked: boolean = false) {\r\n    this.name = name;\r\n    this.logbookID = id;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.name + ' (Logbook #' + this.logbookID + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.name != '' && this.logbookID != '';\r\n  }\r\n\r\n}\r\n","export class Net {\r\n\r\n    netType: string = ''; // will be either Alaska Twist, Multi Strand, or Comibination\r\n\r\n    netName: string = ''; // will only be for the skipper's reference\r\n\r\n    numStrands: string = ''; //only needed for Alaska Twist\r\n\r\n    length: string = '';\r\n\r\n    weedlineDepth: string = '';\r\n\r\n    weedlineDepthUnits: string = '';\r\n\r\n    hangRatio: string = '';\r\n\r\n    meshSize: string = '';\r\n\r\n    meshSizeUnits: string = '';\r\n\r\n    numMeshes: string = '';\r\n\r\n    isChecked: boolean = false; \r\n\r\n    constructor(type: string, name: string, length: string,\r\n        depth: string, depthUnits: string, ratio: string, mesh: string, \r\n        meshUnits: string, numMeshes: string, strands: string = '', checked: boolean = false){\r\n\r\n        this.netType = type;\r\n        this.netName = name;\r\n        this.length = length;\r\n        this.weedlineDepth = depth;\r\n        this.weedlineDepthUnits = depthUnits;\r\n        this.hangRatio = ratio;\r\n        this.meshSize = mesh;\r\n        this.meshSizeUnits = meshUnits;\r\n        this.numMeshes = numMeshes;\r\n        this.numStrands = strands;\r\n        this.isChecked = checked;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.netName + ' (' + this.netType + ')';\r\n    }\r\n\r\n    isValid(): boolean {\r\n\r\n        if(this.netType === \"Alaska Twist\") { // requires numStrands to be set\r\n\r\n            return this.netName != '' && this.numStrands != '' && this.length != '' &&\r\n            this.weedlineDepth != '' && this.weedlineDepthUnits != '' && this.hangRatio != '' && \r\n            this.meshSize != '' && this.meshSizeUnits != '' && this.numMeshes != ''; \r\n\r\n        }else if(this.netType != '') { // does not require a value for numStrands\r\n\r\n            return this.netName != '' && this.length != '' && this.weedlineDepth != '' && \r\n            this.weedlineDepthUnits != '' && this.hangRatio != '' && this.meshSize != '' && \r\n            this.meshSizeUnits != '' && this.numMeshes != ''; \r\n\r\n        }\r\n\r\n        return false; \r\n\r\n      }\r\n\r\n    // transform a data structure into net data\r\n    static transformAnonymous(anon: any[]): Net[] {\r\n        let list: Net[] = [];\r\n        anon.forEach((Net: any) => {\r\n            let item: Net = new Net(Net.netType, Net.netName, Net.numStrands, Net.length, Net.weedlineDepth,\r\n            Net.weedlineDepthUnits, Net.hangRatio, Net.meshSize, Net.meshSizeUnits, Net.numMeshes, Net.isChecked);\r\n            list.push(item);\r\n        });\r\n        return list;\r\n    }\r\n\r\n    \r\n}\r\n","export class LicenseArea {\r\n\r\n  licenseID: string = '';\r\n\r\n  licenseName: string = '';\r\n\r\n  licenseLocation: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(licenseName: string, licenseLocation: string, isChecked: boolean = false) {\r\n    this.licenseName = licenseName;\r\n    this.licenseLocation = licenseLocation;\r\n    this.isChecked = isChecked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.licenseName + ' (' + this.licenseLocation + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.licenseName != '' && this.licenseLocation != '';\r\n  }\r\n\r\n}\r\n","import { Gear } from './gear-models/gear.model';\r\nimport { VesselData } from '../user-models/vessel-data.model';\r\nimport { LicenseArea } from './license-area.model';\r\nimport { Tel } from '../../tel-input/tel-input.component';\r\nimport { DailyCatchReport } from '../report-models/daily-catch-report.model';\r\n\r\nexport class Trip {\r\n\r\n  isComplete: boolean = false; // !!! move to Start Fishing Report\r\n\r\n  isInProgress: boolean = false; // !!! move to Start Fishing Report\r\n\r\n  gear: Gear = new Gear('', '');\r\n\r\n  vessel: VesselData = new VesselData('', '');\r\n\r\n  licenseArea: LicenseArea = new LicenseArea('', '');\r\n\r\n  master: string = '';\r\n\r\n  fin: string = '';\r\n\r\n  startDate: Date = new Date(); // !!! move to Start Fishing Report\r\n\r\n  managementArea: string = ''; // !!! move to Start Fishing Report\r\n\r\n  name: string = ''; \r\n\r\n  phoneNum: Tel = new Tel('', '', '');\r\n\r\n  comments: string = ''; // !!! move to Start Fishing Report\r\n\r\n  site: string = ''; // !!! move to End Fishing Report\r\n\r\n  arrivalDate: Date = new Date(); // !!! move to End Fishing Report\r\n\r\n  offloadNeeded: boolean = false; // used to determine if the current trip may require an offload report\r\n\r\n  dailyCatchReports: DailyCatchReport[] = []; // array of all daily catch reports submitted for the trip\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public toString(): string {\r\n    return 'Gear: ' + this.gear + '; Vessel: ' + this.vessel + '; License Area: ' + this.licenseArea;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.gear.isValid() && this.vessel.isValid() && this.licenseArea.isValid();\r\n  }\r\n\r\n}\r\n","import { VesselData } from './vessel-data.model';\r\nimport { Trip } from '../trip-models/trip.model';\r\nimport { Net } from '../trip-models/gear-models/net.model';\r\n\r\nexport class UserData {\r\n\r\n  // Auth0 ID\r\n  userID: string = '';\r\n\r\n  // Email for signup\r\n  userEmail: string = '';\r\n\r\n  // current homepage\r\n  currHomepage: string = '';\r\n\r\n  // saved user trips\r\n    // TO-DO - INSERT AN ARRAY OF TRIPS\r\n\r\n  // saved user vessels\r\n  vessels: VesselData[] = [];\r\n\r\n  // current trip (TO-DO: change name)\r\n  currTrip: Trip = new Trip();\r\n\r\n  // saved nets\r\n  nets: Net[] = [];\r\n\r\n  constructor(id: string, email: string) {\r\n    this.userID = id;\r\n    this.userEmail = email;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.userEmail + ', ' + this.userID;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.userID !== '' && this.userEmail !== '';\r\n  }\r\n\r\n}\r\n","export class VesselData {\r\n\r\n    // Unique identifier for this vessel\r\n    vesselID: string = '';\r\n\r\n  // Name for this vessel\r\n    vesselName: string = '';\r\n\r\n  // Vessel coast number for this vessel (not sure if vesselCoastNumber is the best name for CFV/VRN - may change later)\r\n    vesselCoastNumber: string = '';\r\n\r\n  // Whether or not the vessel is recognized\r\n  isRecognized: boolean = false;\r\n\r\n  // Whether or not the vessel is checked in a list\r\n  isChecked: boolean = false;\r\n\r\n  constructor(vname: string, vcoastNum: string, checked: boolean = false) {\r\n    this.vesselName = vname;\r\n    this.vesselCoastNumber = vcoastNum;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n      return this.vesselName + ' (VRN: ' + this.vesselCoastNumber + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return this.vesselName != '' && this.vesselCoastNumber != '';\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\nexport class Validator {\r\n\r\n}\r\n\r\n// validator for general values\r\nexport function generalValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    return control.value != null && control.valid ? null : { invalid: true };\r\n  }\r\n}\r\n\r\n// choosing a species from a species list\r\nexport function speciesValidator(speciesList: string[]): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    for (let species of speciesList) {\r\n      if (control.value.toLowerCase() === species.toLowerCase()) {\r\n        return null;\r\n      }\r\n    }\r\n    return { value: { error: 'Invalid species' } };\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Net } from 'src/app/data-models/trip-models/gear-models/net.model';\r\n\r\n@Component({\r\n  selector: 'app-add-net-dialog',\r\n  templateUrl: './add-net-dialog.component.html',\r\n  styleUrls: ['./add-net-dialog.component.css']\r\n})\r\nexport class AddNetDialogComponent {\r\n\r\n  //data preambles\r\n  netTypes: string[] = []; // holds values from local storage\r\n  unitTypes: string[] = ['cm', 'in', 'mm']; //hardcoded values to be used in the form\r\n\r\n  dialogReturn: Net = new Net('', '', '', '', '', '', '', '', '');\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    netType: new FormControl<string>('', [Validators.required]),\r\n    numStrands: new FormControl<string>(''), // conditional validation\r\n    netName: new FormControl<string>('', [Validators.required]), \r\n    netLength: new FormControl<string>('', [Validators.required]), \r\n    netDepth: new FormControl<string>('', [Validators.required]), \r\n    netUnits: new FormControl<string>('', [Validators.required]), \r\n    hangRatio: new FormControl<string>('', [Validators.required]), \r\n    meshSize: new FormControl<string>('', [Validators.required]), \r\n    meshUnits: new FormControl<string>('', [Validators.required]), \r\n    numMeshes: new FormControl<string>('', [Validators.required]) \r\n  })\r\n  \r\n  constructor(public dialogRef: MatDialogRef<AddNetDialogComponent>,\r\n    private localStorageService: LocalStorageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Net) { // don't need injection right now, but leave in for the future possibility of editing the net\r\n\r\n       this.netTypes = this.localStorageService.getStringList('netTypes'); // retrieve net types from local storage\r\n\r\n  }\r\n\r\n  netTypeVal(): string { // returns the net type the user has selected\r\n\r\n    let getNetType: AbstractControl<any, any> | null = this.form.get('netType');\r\n\r\n    if (getNetType?.errors?.required) {\r\n      return '[Required]';\r\n    }\r\n    return getNetType?.value;\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.onNetTypeChange();\r\n\r\n  }\r\n\r\n  onNetTypeChange(): void {\r\n    this.form.get('netType')?.valueChanges.subscribe(value =>{\r\n      const strandControl = this.form.get('numStrands');\r\n\r\n      if(value === 'Alaska Twist'){\r\n        strandControl?.setValidators([Validators.required]);\r\n      }else{\r\n        strandControl?.clearValidators();\r\n      }\r\n      strandControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n\r\n\r\n  addNet() { \r\n    if (this.form.valid) {\r\n      this.clearInputs();\r\n      this.dialogRef.close(this.form.value); // return the filled-in values of the form field\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n\r\n  deleteNet(): void { \r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // reset any dead form inputs\r\n  clearInputs(): void {\r\n    if(this.netTypeVal() != 'Alaska Twist'){ // if other gear type, clear any possible input in numStrands\r\n      this.form.controls['numStrands'].reset(); \r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    \r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: 500;\">Add Net</h3>\r\n\r\n    <!-- FORM QUESTIONS -->\r\n\r\n    <form [formGroup]=\"form\">\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Name (for your reference only)\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Net Name</mat-label>\r\n              <input matInput formControlName=\"netName\" required>\r\n              <mat-error *ngIf=\"form.invalid\">\r\n                Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Type\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"netType\">\r\n                  <mat-option *ngFor=\"let net of netTypes\"\r\n                              [value]=\"net\">\r\n                    {{net}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n\r\n    \r\n            <div *ngIf=\"netTypeVal() === 'Alaska Twist'\"\r\n                class=\"container\">\r\n                <h6 class=\"net-small-header\">\r\n                    Number of Strands \r\n                    </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Number of Strands\r\n                    </mat-label>\r\n                    <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numStrands\"\r\n                        (input)=\"forbidNonNumeric('numStrands')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                      Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Length (in fathoms)\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Length\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"netLength\"\r\n                        (input)=\"forbidNonNumeric('netLength')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Weedline Depth\r\n                </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Depth\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"netDepth\"\r\n                            (input)=\"forbidNonNumeric('netDepth')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Weedline Depth Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"netUnits\">\r\n                    <mat-option *ngFor=\"let unit of unitTypes\"\r\n                                [value]=\"unit\">\r\n                      {{unit}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Hang Ratio ( :1)\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Hang Ratio\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"hangRatio\"\r\n                        (input)=\"forbidNonNumeric('hangRatio')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Mesh Size\r\n                </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Mesh Size\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"meshSize\"\r\n                            (input)=\"forbidNonNumeric('meshSize')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Mesh Size Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"meshUnits\">\r\n                  <mat-option *ngFor=\"let unit of unitTypes\"\r\n                              [value]=\"unit\">\r\n                    {{unit}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Number of Meshes\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Number of Meshes\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numMeshes\"\r\n                        (input)=\"forbidNonNumeric('numMeshes')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n    </form>\r\n\r\n\r\n    <!-- BACK & ADD BUTTONS -->\r\n\r\n    <!-- TO-DO: GET \"BACK & ADD BUTTONS TO BE ALIGNED PROPERLY\"-->\r\n    \r\n    <div class=\"row\" style=\"display: flex; padding-top: 10px;\">\r\n\r\n        <div class=\"col-3\">\r\n            <button mat-stroked-button\r\n                    type=\"button\"\r\n                    aria-label=\"Back\"\r\n                    style=\"background-color: #005d87; color: white; font-weight: 500;\"\r\n                    (click)=\"deleteNet()\">\r\n                Back\r\n            </button>    \r\n        </div>\r\n\r\n        <div class=\"col\"></div>\r\n\r\n        <div class=\"col-4\">\r\n            <button mat-stroked-button\r\n                    type=\"submit\"\r\n                    aria-label=\"Add Net\"\r\n                    style=\"background-color: #ff6f61; color: white; font-weight: 500;\"\r\n                    (click)=\"addNet()\">\r\n                Add\r\n            </button>                \r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { AbstractControl, FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { speciesValidator } from '../../data-models/validator.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\n\r\n@Component({\r\n  selector: 'app-add-species-dialog',\r\n  templateUrl: './add-species-dialog.component.html',\r\n  styleUrls: ['./add-species-dialog.component.css']\r\n})\r\n\r\nexport class AddSpeciesDialogComponent {\r\n\r\n  // used to determine if the species name can be edited\r\n  speciesIsReadOnly: boolean = false;\r\n\r\n  // species lists\r\n  stringList: string[] = []; // subset of \"list\" - has all species names (used only for validation)\r\n  speciesList: string[] = []; \r\n  filteredSpecies: string[] = []; //what's already in table\r\n  currentSpeciesList: string[] = [];\r\n\r\n  // dialog title\r\n  displayedTitle: string = '';\r\n\r\n  // species details\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    speciesName: new FormControl<string>('', [Validators.required, speciesValidator(this.stringList)]),\r\n    kept: new FormControl<string>(''),\r\n    released: new FormControl<string>(''),\r\n    offloadWeight: new FormControl<string>(''),\r\n    offloadPieces: new FormControl<string>('')\r\n  })\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddSpeciesDialogComponent>,\r\n    private localStorageService: LocalStorageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { identifier: string, species: SpeciesData, currentFishList: SpeciesData[], \r\n      filteredFishList: SpeciesData[], tableInfo: TableRules }\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    // fill the species and filtered lists\r\n    this.fillSpecies(); //fill the species list available to the user\r\n    this.filteredSpecies = this.speciesList;\r\n\r\n    // set the dialog configuration\r\n    this.setDialogConfig();\r\n\r\n    // change the filtered species list whenever the input field changes\r\n    this.form.get('speciesName')!.valueChanges.subscribe((speciesChange: string) => {\r\n      this.filteredSpecies = [];\r\n      for (let species of this.speciesList) {\r\n        if (species.toLowerCase().includes(speciesChange.toLowerCase())) {\r\n          this.filteredSpecies.push(species);\r\n        }\r\n      }\r\n    });\r\n\r\n    // if editing a species, autofill form with species details\r\n    if (this.data != null && this.data.species != null) {\r\n      let speciesData: SpeciesData = this.data.species;\r\n      this.form.patchValue({\r\n        speciesName: speciesData.speciesName,\r\n        kept: speciesData.kept,\r\n        released: speciesData.released,\r\n        offloadWeight: speciesData.offloadWeight,\r\n        offloadPieces: speciesData.offloadPieces\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // set the title of the dialog and read/write permissions of inputs\r\n  setDialogConfig(): void{\r\n     // set config based on whether the species is being added or edited\r\n     switch (this.data.identifier) {\r\n      case 'edit':\r\n        this.displayedTitle = \"Edit Species\";\r\n        this.speciesIsReadOnly = true;\r\n        break;\r\n      case 'add':\r\n        this.displayedTitle = \"Add Species\";\r\n        break;\r\n    }\r\n  }\r\n\r\n  // fill up the species list based on what is not already in the table\r\n  fillSpecies(): void { //fishList from local storage is what gets passed in here\r\n    for(let species of this.data.currentFishList){ // get all species names that are already in the table\r\n      this.currentSpeciesList.push(species.speciesName);\r\n    } \r\n    for (let species of this.data.filteredFishList) {\r\n      //only add the name to the list if it is not already in the table \r\n      if(!this.currentSpeciesList.includes(species.speciesName)){ \r\n        this.speciesList.push(species.speciesName); \r\n      }\r\n      this.stringList.push(species.speciesName); // fill the string list regardless\r\n    }\r\n  }\r\n\r\n  // check if entered species is a valid species\r\n  checkSpecies(name: string): boolean {\r\n    for (let species of this.data.filteredFishList) {\r\n      if (species.speciesName.toLowerCase().includes(name.toLowerCase())) {\r\n        this.form.patchValue({\r\n          speciesName: species.speciesName,\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.data.tableInfo.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCurrentFormSpecies(): string {\r\n    return this.form.get('speciesName')?.value;\r\n  }\r\n\r\n  // add new species details\r\n  addSpecies(): void {\r\n    if (this.form.valid && this.checkSpecies(this.form.get('speciesName')!.value)) {\r\n      this.clearInputs(); \r\n      this.dialogRef.close(this.form.value);\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  // clear any possible dead form inputs\r\n  clearInputs(): void {\r\n    if(this.isReleaseOnly(this.getCurrentFormSpecies())){ // if species is release-only, clear any possible previous 'kept' input\r\n      this.form.controls['kept'].reset(); // reset form value\r\n    }\r\n  }\r\n\r\n  // delete current species details\r\n  deleteSpecies(): void {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container species-container\">\r\n\r\n  <h3 class=\"display-6 species-header\"\r\n      align=\"center\">\r\n    {{displayedTitle}}\r\n  </h3>\r\n\r\n  <form [formGroup]=\"form\">\r\n\r\n    <!-- Select species name -->\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Species Name\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Species\r\n        </mat-label>\r\n        <input matInput\r\n               required\r\n               formControlName=\"speciesName\"\r\n               [matAutocomplete]=\"auto\"\r\n               [readonly]=\"speciesIsReadOnly\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let fSpecies of filteredSpecies\"\r\n                      [value]=\"fSpecies\">\r\n            {{fSpecies}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-error *ngIf=\"form.invalid\">\r\n          Select an item\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Daily Catch Report Fields -->\r\n\r\n    <div *ngIf=\"this.data.tableInfo.tableType==='daily-catch'\">\r\n\r\n      <!-- Kept Catch -->\r\n      <div *ngIf=\"!isReleaseOnly(getCurrentFormSpecies())\" class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Kept\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Kept\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"kept\"\r\n                (input)=\"forbidNonNumeric('kept')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <!-- Released Catch -->\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Released\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Released\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"released\"\r\n                (input)=\"forbidNonNumeric('released')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n  </div>\r\n\r\n  <!-- Offload Catch Report Fields -->\r\n\r\n  <div *ngIf=\"this.data.tableInfo.tableType==='offload-catch'\">\r\n\r\n    <!-- Weight (Seine only) -->\r\n\r\n    <div *ngIf=\"this.data.tableInfo.gearName==='Seine'\" class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Weight\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Weight\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadWeight\"\r\n              (input)=\"forbidNonNumeric('offloadWeight')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Pieces -->\r\n\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Pieces\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Pieces\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadPieces\"\r\n              (input)=\"forbidNonNumeric('offloadPieces')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  </form>\r\n\r\n  <!-- Release-only species descriptive text -->\r\n\r\n  <div *ngIf=\"isReleaseOnly(getCurrentFormSpecies())\" class=\"row\">\r\n\r\n    <h6 class=\"species-small-header\">\r\n      This species is non-retainable.\r\n    </h6>\r\n\r\n  </div>\r\n\r\n  <!-- Add & Delete Buttons -->\r\n\r\n  <div class=\"row\" style=\"display: flex;\">\r\n\r\n    <div class=\"col-3\">\r\n      <button mat-stroked-button\r\n              class=\"button-delete\"\r\n              type=\"button\"\r\n              aria-label=\"Delete\"\r\n              (click)=\"deleteSpecies()\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"col\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <button mat-stroked-button\r\n              class=\"button-add\"\r\n              type=\"submit\"\r\n              align=\"end\"\r\n              aria-label=\"Add Species\"\r\n              (click)=\"addSpecies()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-trip-dialog',\r\n  templateUrl: './add-trip-dialog.component.html',\r\n  styleUrls: ['./add-trip-dialog.component.css']\r\n})\r\nexport class AddTripDialogComponent {\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    tripID: new FormControl<string>('', [Validators.required]),\r\n  })\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddTripDialogComponent>) {\r\n\r\n  }\r\n\r\n\r\n  /*ngOnInit(): void {\r\n    if (this.data != null) {\r\n      this.form.patchValue({\r\n        tripID: this.data.tripID\r\n      });\r\n    }\r\n  }*/\r\n\r\n\r\n  // add new trip ID\r\n  addTrip(): void {\r\n    if (this.form.valid) {\r\n      this.dialogRef.close(this.form.value);\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  // delete current trip ID\r\n  deleteTrip(): void {\r\n    this.dialogRef.close('delete');\r\n  }\r\n}\r\n","<div class=\"container trip-container\">\r\n\r\n  <h3 class=\"display-6 trip-header\"\r\n      align=\"center\">\r\n    Add Trip ID\r\n  </h3>\r\n\r\n  <form [formGroup]=\"form\">\r\n\r\n    <!-- Enter trip ID -->\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"trip-small-header\">\r\n        Trip ID\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Trip ID\r\n        </mat-label>\r\n        <input matInput\r\n               required\r\n               formControlName=\"tripID\">\r\n        <mat-error *ngIf=\"form.get('tripID')?.errors?.required\">\r\n          Required\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n  <div class=\"row\" style=\"display: flex;\">\r\n\r\n    <div class=\"col-3\">\r\n      <button mat-stroked-button\r\n              class=\"button-back\"\r\n              type=\"button\"\r\n              aria-label=\"Back\"\r\n              (click)=\"deleteTrip()\">\r\n        Back\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"col\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <button mat-stroked-button\r\n              class=\"button-add\"\r\n              type=\"submit\"\r\n              align=\"end\"\r\n              aria-label=\"Add Trip ID\"\r\n              (click)=\"addTrip()\">\r\n        Add\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\n\r\n@Component({\r\n  selector: 'app-add-vessel-dialog',\r\n  templateUrl: './add-vessel-dialog.component.html',\r\n  styleUrls: ['./add-vessel-dialog.component.css']\r\n})\r\nexport class AddVesselDialogComponent implements OnInit {\r\n\r\n  dialogReturn: VesselData = new VesselData('', '');\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    vesselName: new FormControl<string>('', [Validators.required, Validators.pattern('^[A-z0-9 ]+$')]),\r\n    vesselNumber: new FormControl<string>('', [Validators.required, Validators.pattern('^([0-9]{6}|[A-z0-9]{7,8})$')])\r\n  })\r\n  \r\n  constructor(public dialogRef: MatDialogRef<AddVesselDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: VesselData) { // at the moment we don't need to inject data (leave in for the possibility of editing vessels later)\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void { \r\n    if (this.data != null) {\r\n      this.form.patchValue({ // this doesn't do anything at the moment - but may need later for editing vessels\r\n        vesselName: this.data.vesselName,\r\n        vesselNumber: this.data.vesselCoastNumber\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addVessel() {\r\n    if (this.form.valid) {\r\n      this.dialogRef.close(this.form.value);\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n\r\n  deleteVessel() {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: 500;\">Add Vessel</h3>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"vessel-small-header\">\r\n          Vessel Name\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Vessel Name</mat-label>\r\n          <input matInput formControlName=\"vesselName\" required>\r\n          <mat-error *ngIf=\"form.get('vesselName')?.errors?.required\">Required</mat-error>\r\n          <mat-error *ngIf=\"form.get('vesselName')?.errors?.pattern\">Invalid character</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    \r\n      <div class=\"row\" style=\"padding-top: 15px;\">\r\n        <h6 class=\"vessel-small-header\">\r\n          VRN (CFV#)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>VRN</mat-label>\r\n          <input matInput formControlName=\"vesselNumber\" required>\r\n          <mat-error *ngIf=\"form.invalid\">Invalid - 6 digit numeric or 7-8 digit alphanumeric required</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    </form>\r\n    \r\n    <div class=\"row\" style=\"display: flex;\">\r\n\r\n        <div class=\"col-3\">\r\n            <button mat-stroked-button\r\n                    type=\"button\"\r\n                    aria-label=\"Back\"\r\n                    style=\"background-color: #005d87; color: white; font-weight: 500;\"\r\n                    (click)=\"deleteVessel()\">\r\n                Back\r\n            </button>    \r\n        </div>\r\n\r\n        <div class=\"col\"></div>\r\n\r\n        <div class=\"col-4\">\r\n            <button mat-stroked-button\r\n                    type=\"submit\"\r\n                    aria-label=\"Add Vessel\"\r\n                    style=\"background-color: #ff6f61; color: white; font-weight: 500;\"\r\n                    align=\"end\"\r\n                    (click)=\"addVessel()\">\r\n                Add\r\n            </button>                \r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-active-trip-home',\r\n  templateUrl: './active-trip-home.component.html',\r\n  styleUrls: ['./active-trip-home.component.css']\r\n})\r\nexport class ActiveTripHomeComponent {\r\n\r\n  //data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor( // same constructor as original homepage\r\n  public auth: AuthService,\r\n  private router: Router,\r\n  private onlineStatusService: OnlineStatusService,\r\n  private localStorageService: LocalStorageService,\r\n  private toastr: ToastrService,\r\n  @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              this.localStorageService.saveData('currID', user.sub);\r\n            } else {\r\n              this.toastr.error(\"Please log in again\", \"User data error\");\r\n              this.router.navigate(['login']);\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please log in\", \"Not authenticated\");\r\n          this.router.navigate(['login']);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n    // get current fishing report information\r\n    let currID: string = this.localStorageService.getCurrID();\r\n    this.userDetails = this.localStorageService.getUserByID(currID);\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n  }\r\n\r\n  getGearName(): string {\r\n    return this.currTrip.gear.name;\r\n  }\r\n\r\n  toCatchReport(gearType: string): void {\r\n    switch(gearType){\r\n      case 'Gill Net':\r\n        this.router.navigate(['gill-net-report']);\r\n        break;\r\n      case 'Seine':\r\n        this.router.navigate(['seine-report']);\r\n        break;\r\n      case 'Troll':\r\n        this.router.navigate(['troll-report']);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // go to end a fishing report\r\n  toEndReport(): void {\r\n    this.router.navigate(['end-report']);\r\n  }\r\n\r\n  // go to pause a fishing report  \r\n  toPauseReport(): void {\r\n    this.router.navigate(['pause-report']);\r\n  }\r\n\r\n  // go to cancel the current trip\r\n  toCancelReport(): void {\r\n    this.router.navigate(['cancel-report']);\r\n  }\r\n\r\n  // go to an offload report\r\n  toOffloadReport(): void {\r\n    this.router.navigate(['offload-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"padding-top: 20px;\">\r\n\r\n  <!-- Header -->\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n      <h2 style=\"color: #003F61\">\r\n        #1234\r\n      </h2>\r\n    </div>\r\n\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Trip Information -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Start Date:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{this.currTrip.startDate}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Gear Type:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{this.currTrip.gear.name}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel Master:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{this.currTrip.master}} (FIN: {{this.currTrip.fin}})\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{this.currTrip.vessel}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      License Area:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{this.currTrip.licenseArea}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <!-- Catch Reports -->\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toCatchReport(this.currTrip.gear.name)\">\r\n      <span>\r\n        Record Catch\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Fishing Report Buttons -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h3 class=\"blue-subheading\">\r\n      Submit a Trip Report\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"report-buttons\">\r\n\r\n    <div class=\"row justify-content-center\">\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toPauseReport()\">\r\n            Pause\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  *ngIf=\"this.currTrip.dailyCatchReports.length != 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toEndReport()\">\r\n            End\r\n          </button>\r\n          <button mat-raised-button\r\n                  *ngIf=\"this.currTrip.dailyCatchReports.length === 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toCancelReport()\">\r\n            Cancel\r\n          </button> \r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                 *ngIf=\"this.currTrip.offloadNeeded && this.currTrip.dailyCatchReports.length != 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toOffloadReport()\">\r\n            Offload\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-no-trip-home',\r\n  templateUrl: './no-trip-home.component.html',\r\n  styleUrls: ['./no-trip-home.component.css']\r\n})\r\nexport class NoTripHomeComponent {\r\n\r\n  constructor( // same constructor as original homepage\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              this.localStorageService.saveData('currID', user.sub);\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please log in\", \"Not authenticated\");\r\n          this.router.navigate(['login']);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // go to start a fishing report\r\n  toStartReport(): void {\r\n    this.router.navigate(['start-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div class=\"row\" style=\"padding-top: 20px;\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n    </div>\r\n\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h3 class=\"blue-subheading\">\r\n      You have no active trip.\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Select the button below to complete a Start Fishing\r\n      Report and activate a new trip.\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toStartReport()\">\r\n      <span>\r\n        Start Trip\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserData } from '../../data-models/user-models/user-data.model';\nimport { LocalStorageService } from '../../services/local-storage.service';\n\n@Component({\n  selector: 'app-offload-home',\n  templateUrl: './offload-home.component.html',\n  styleUrls: ['./offload-home.component.css']\n})\nexport class OffloadHomeComponent {\n\n  // data preambles\n  requestToStartNewTrip: boolean = false; // flag that tells us if we should display the confirmation page\n  userDetails: UserData = new UserData('', '');\n\n  constructor(\n    private router: Router, \n    private localStorageService: LocalStorageService\n  ){\n\n    let currID: string = this.localStorageService.getCurrID();\n    this.userDetails = this.localStorageService.getUserByID(currID);\n  }\n\n  setNewTripFlag(): void {\n    this.requestToStartNewTrip = true;\n  }\n\n  clearNewTripFlag(): void {\n    this.requestToStartNewTrip = false;\n  }\n\n   // go to an offload report\n   toOffloadReport(): void {\n    this.router.navigate(['offload-report']);\n  }\n\n  // go to the new trip homepage\n  toNoTripHome(): void {\n    this.updateHomepage();\n    this.router.navigate(['no-trip-home']);\n  }\n\n  updateHomepage(): void {\n    this.userDetails.currHomepage = 'no-trip-home';\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\n  }\n\n}\n","<!-- Offload Report Homepage -->\n\n<div class=\"container\" style=\"padding-top: 20px;\">\n\n    <div *ngIf=\"!this.requestToStartNewTrip\">\n\n        <div class=\"row\">\n\n            <div class=\"col\" align=\"left\">\n                <h1 class=\"blue-trip-heading\">\n                    My Trip\n                </h1>\n            </div>\n\n\n            <div class=\"col\" align=\"right\">\n            <app-menu> </app-menu>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n            <h3 class=\"blue-subheading\">\n                Do you need to submit an offload report?\n            </h3>\n        </div>\n\n        <div class=\"row\" align=\"left\">\n                <h6 class=\"descriptive-text\">\n                Please go to the Records tab to view how many offload reports you have completed for this trip. \n                This is your final chance to complete an offload report before starting a new trip.\n                </h6>\n        </div>\n\n        <div class=\"button-row\">\n            <button mat-raised-button\n                    class=\"red-button\"\n                    align=\"center\"\n                    type=\"button\"\n                    (click)=\"toOffloadReport()\">\n            <span>\n            Offload Report\n            </span>\n            </button> \n        </div>\n\n        <div class=\"button-row\">\n            <button mat-raised-button\n                    class=\"red-button\"\n                    align=\"center\"\n                    type=\"button\"\n                    (click)=\"setNewTripFlag()\">\n            <span>\n            Start Another Trip\n            </span>\n            </button> \n        </div>\n\n    </div>\n\n    <div *ngIf=\"this.requestToStartNewTrip\">\n        \n    <div class=\"row\"\n        align=\"center\">\n        <h5 class=\"blue-heading-title\">\n        Are you sure you want to start a new trip?\n        </h5>\n    </div>\n\n    <div class=\"row\"\n        align=\"center\">\n        <p>\n            If you select yes, you will not be able to complete an offload report for this trip \n            at <b>any</b> point in the future.\n        </p>\n    </div>\n\n    <div class=\"row\">\n\n            <div class=\"col-1\"></div>\n            <div class=\"col-4\">\n                <div class=\"row\">\n                <button mat-raised-button\n                        class=\"fishing-button-red\"\n                        type=\"submit\"\n                        (click)=\"clearNewTripFlag()\">\n                    <span>\n                    No\n                    </span>\n                </button>\n                </div>\n            </div>\n            <div class=\"col-2\"></div>\n            <div class=\"col-4\">\n                <div class=\"row\">\n                <button mat-raised-button\n                        class=\"fishing-button-red\"\n                        type=\"submit\"\n                        (click)=\"toNoTripHome()\">\n                    Yes\n                </button>\n                </div>\n            </div>\n            <div class=\"col-1\"></div>\n\n        </div>\n\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    @Inject(DOCUMENT) public document: Document\r\n    ) {\r\n\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n\r\n  }\r\n\r\n // navigate back to the current trip homepage  \r\n toCurrentHome(): void {\r\n  this.router.navigate([this.userDetails.currHomepage]);\r\n}\r\n\r\n  // navigate to the profile page (not yet implemented)\r\n  toProfile(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the records page (not yet implemented)\r\n  toRecords(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the resources page (not yet implemented)\r\n  toResources(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the fishery notices page (not yet implemented)\r\n  toFisheryNotices(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // log out of account and go back to login screen\r\n  logout(): void {\r\n    this.localStorageService.removeData('currID');\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.router.navigate(['login']);\r\n      return;\r\n    }\r\n    this.auth.logout({\r\n      logoutParams: {\r\n        returnTo: this.document.location.origin\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<button mat-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon class=\"menu-button\">menu</mat-icon>\r\n</button>\r\n<mat-menu #menu=\"matMenu\" class=\"menu\">\r\n    <button mat-menu-item\r\n            (click)=\"toCurrentHome()\">\r\n        <mat-icon class=\"item-icon\">home</mat-icon>\r\n        <h6 class=\"menu-item\">Home/My Trip</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toProfile()\">\r\n        <mat-icon class=\"item-icon\">person</mat-icon>\r\n        <h6 class=\"menu-item\">Profile</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toRecords()\">\r\n        <mat-icon class=\"item-icon\">folder</mat-icon>\r\n        <h6 class=\"menu-item\">Records</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toResources()\">\r\n        <mat-icon class=\"item-icon\">description</mat-icon>\r\n        <h6 class=\"menu-item\">Resources</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toFisheryNotices()\">\r\n        <mat-icon class=\"item-icon\">notifications</mat-icon>\r\n        <h6 class=\"menu-item\">Fishery Notices</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"logout()\">\r\n        <mat-icon class=\"item-icon\">logout</mat-icon>\r\n        <h6 class=\"menu-item\">Logout</h6>\r\n    </button>\r\n</mat-menu>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cancel-report',\r\n  templateUrl: './cancel-report.component.html',\r\n  styleUrls: ['./cancel-report.component.css']\r\n})\r\nexport class CancelReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService\r\n  ) {\r\n\r\n    let currID: string = this.localStorageService.getCurrID();\r\n    this.userDetails = this.localStorageService.getUserByID(currID);\r\n\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n  // send cancel report to DFO\r\n  sendToDFO(): void {\r\n    // eventually, we will put the information gathered in local storage\r\n    this.updateHomepage();\r\n    this.router.navigate(['submitted-report'], { state: { name: 'Cancel Fishing Report' } });\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Are you sure you want to cancel this trip?\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Doing so will send a Cancel Fishing Report to DFO. Please refer to the\r\n      <b>\r\n        Resources\r\n      </b>\r\n      page for more information on cancelled trips.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"button\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            No\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-2\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"sendToDFO()\">\r\n          <span>\r\n            Yes \r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-end-report',\r\n  templateUrl: './end-report.component.html',\r\n  styleUrls: ['./end-report.component.css']\r\n})\r\nexport class EndReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  // report data\r\n  endForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  endDate: Date = new Date(); // page 1\r\n\r\n  // arrival form for \r\n  arrivalForm: UntypedFormGroup = new UntypedFormGroup({\r\n    site: new FormControl<string>('', [Validators.required]) // arrival page (page 4)\r\n  });\r\n  arrivalDate: Date = new Date();\r\n  arrivalTime: { hour: number, minute: number } = { hour: 0, minute: 0 };\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService,\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      // get user details\r\n      this.auth.user$.subscribe((user: User | null | undefined) => {\r\n        if (user) {\r\n\r\n          // get user data details\r\n          this.userDetails = this.localStorageService.getUser(user);\r\n          this.initialize();\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize values\r\n  initialize(): void {\r\n\r\n    // get current fishing report\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n\r\n    // set time to current time\r\n    this.arrivalTime = {\r\n      hour: this.arrivalDate.getHours(),\r\n      minute: this.arrivalDate.getMinutes()\r\n    };\r\n\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.endForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    // not on arrival page\r\n    if (this.currPage < 4) {\r\n\r\n      if (this.endForm.valid) {\r\n\r\n        // arrival details for troll gear and license area G\r\n        if (this.currTrip.isComplete && this.currTrip.gear.name === 'Troll' && this.currTrip.licenseArea.licenseName === 'G') {\r\n\r\n          // set arrival time to current time\r\n          let newDate: Date = new Date();\r\n          this.arrivalTime = {\r\n            hour: newDate.getHours(),\r\n            minute: newDate.getMinutes()\r\n          };\r\n\r\n          // go to arrival page\r\n          this.currPage++;\r\n          return;\r\n\r\n        }\r\n        this.toSubmittedReport();\r\n        return;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // arrival page\r\n    else {\r\n\r\n      if (this.arrivalForm.valid) {\r\n        this.currTrip.site = this.arrivalForm.get('site')?.value;\r\n        this.setDateTime();\r\n        this.currTrip.arrivalDate = this.arrivalDate;\r\n        this.userDetails.currTrip = this.currTrip;\r\n        this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n        this.toSubmittedReport();\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n\r\n  }\r\n\r\n  updateHomepage(homeName: string): void {\r\n    this.userDetails.currHomepage = homeName;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let arrivalHours: number = this.arrivalTime.hour;\r\n    let arrivalMinutes: number = this.arrivalTime.minute;\r\n\r\n    this.arrivalDate.setHours(arrivalHours ? arrivalHours : this.arrivalDate.getHours());\r\n    this.arrivalDate.setMinutes(arrivalMinutes ? arrivalMinutes : this.arrivalDate.getMinutes());\r\n    this.arrivalDate.setSeconds(0);\r\n    this.arrivalDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  toSubmittedReport(): void {\r\n    if(this.currTrip.offloadNeeded === true){\r\n      this.updateHomepage('offload-home');\r\n    } else {\r\n      this.updateHomepage('no-trip-home');\r\n    }\r\n    this.router.navigate(['submitted-report'], { state: { name: 'End Fishing Report' } });\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage === 3\"\r\n                  class=\"top-icon\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n        <mat-icon *ngIf=\"currPage === 4\"\r\n                  class=\"top-icon\">\r\n          priority_high\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"endForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you end fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"endDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"endForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            End Date:\r\n          </b>\r\n          {{ endDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{endForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{endForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Troll and G -->\r\n  <form [formGroup]=\"arrivalForm\">\r\n\r\n    <div *ngIf=\"currPage === 4\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Your license area and gear type require you to provide additional information.\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Please Provide Arrival Details\r\n          </b>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Designated Landing Site\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Site Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"site\">\r\n          <mat-error *ngIf=\"arrivalForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Estimated Arrival Time\r\n        </h6>\r\n        <ngb-timepicker [meridian]=\"true\"\r\n                        [ngModelOptions]=\"{ standalone: true }\"\r\n                        [(ngModel)]=\"arrivalTime\">\r\n\r\n        </ngb-timepicker>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { AuthService, User } from '@auth0/auth0-angular';\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { LocalStorageService } from '../../services/local-storage.service';\nimport { UserData } from '../../data-models/user-models/user-data.model';\nimport { Trip } from '../../data-models/trip-models/trip.model';\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\n\n\n@Component({\n  selector: 'app-offload-report',\n  templateUrl: './offload-report.component.html',\n  styleUrls: ['./offload-report.component.css']\n})\nexport class OffloadReportComponent {\n\n  // table data\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>; // for updating the table\n  offloadTable: TableRules = new TableRules(); // used in add species dialog\n  tableDataSource: SpeciesData[] = []; // all species data currently in the table\n  displayedColumns: string[] = []; // columns currently being displayed in the table\n  weightUnitOptions: string[] = ['Lbs', 'Kgs']; //hardcoded values to be used in the form\n\n  // data preambles\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\n  userDetails: UserData = new UserData('', '');\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\n\n  currTrip: Trip = new Trip();\n\n  offloadForm: UntypedFormGroup = new UntypedFormGroup({\n    fishSlipIssued: new FormControl<string>('', [Validators.required]), // page 2\n    fishSlipNumber: new FormControl<string>(''), // page 2 (conditionally validated)\n    weightUnits: new FormControl<string>(''), // page 2 (always auto-selected so no need for validation)\n  });\n  offloadDate: Date = new Date(); // page 1\n  offloadTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 1\n\n  // page controls\n  numPages: number = 0;\n  currPage: number = 0;\n  spinnerProgress: number = 0;\n  spinnerIncrement: number = 0;\n\n\n  constructor(\n    public dialog: MatDialog,\n    public auth: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n    private onlineStatusService: OnlineStatusService,\n    private localStorageService: LocalStorageService,\n  ) { // constructor contents copied from start-report\n\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\n      let currID: string = this.localStorageService.getCurrID();\n      this.userDetails = this.localStorageService.getUserByID(currID);\n      this.initialize();\n    }\n\n    else {\n      // get user details\n      this.auth.user$.subscribe((user: User | null | undefined) => {\n        if (user) {\n\n          // get user data details\n          this.userDetails = this.localStorageService.getUser(user);\n          this.initialize();\n        }\n      });\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.onFishSlipChange();\n  }\n\n  onFishSlipChange(): void {\n    this.offloadForm.get('fishSlipIssued')?.valueChanges.subscribe(value =>{\n      const fishSlipControl = this.offloadForm.get('fishSlipNumber');\n\n      if(value === 'Yes'){\n        fishSlipControl?.setValidators([Validators.required]);\n      }else{\n        fishSlipControl?.clearValidators();\n      }\n      fishSlipControl?.updateValueAndValidity();\n    })\n  }\n\n  initialize(): void {\n\n    // get all required data\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\n    this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\n    this.setTableRules(); \n    this.filterSpeciesData(); // filter species list available to the user\n\n    // initialize table data\n    this.getTableData();\n    this.offloadForm.patchValue({ weightUnits: 'Lbs' }); // automatically set to lbs (most common unit)\n    this.setDisplayedColumns();\n\n    // set the start time to the current time\n    this.offloadTime = {\n      hour: this.offloadDate.getHours(),\n      minute: this.offloadDate.getMinutes()\n    };\n\n    this.numPages = 3;\n    this.spinnerIncrement = 100 / this.numPages;\n    this.toNextPage();\n\n  }\n\n  // table rules will be the same as they are for the current gear's Daily Catch Report with a couple differences:\n    // tableType will instead be 'offload-catch' and containsSpecies list will be cleared since we are getting that info from the daily catch reports\n  setTableRules(): void {\n    this.offloadTable = this.localStorageService.getTableRules(this.currTrip.gear.name);\n    this.offloadTable.tableType = 'offload-catch';\n    this.offloadTable.containsSpecies.length = 0; // clear contains list\n  }\n\n  // gets default table data based on the species that were caught/released during the current trip\n  getTableData(): void {\n    // loop through each daily catch report in currTrip, and add all species data to the table source\n    let speciesNamesList: string[] = []; // temp storage for species names (used for comparison)\n    for(let catchReport of this.currTrip.dailyCatchReports) { // loop through each catch report \n      for(let species of catchReport.speciesDataList) { // loop through each species list\n        // only include if the species is not already in our list and it was kept \n        if(!speciesNamesList.includes(species.speciesName) && species.kept > 0) { \n          let tempSpecies = species;\n          tempSpecies.kept = 0;\n          tempSpecies.released = 0;\n          tempSpecies.offloadPieces = 0;\n          tempSpecies.offloadWeight = 0;\n          this.tableDataSource.push(tempSpecies); // add species to the table\n          speciesNamesList.push(species.speciesName); \n        }\n      }\n    }\n  }\n\n  toNextPage(): void {\n\n    if (this.currPage <= this.numPages) {\n      if(this.currPage === 1) {\n        this.setDateTime();\n      }\n      this.currPage++;\n      this.spinnerProgress += this.spinnerIncrement;\n    } else {\n      this.sendToDFO();\n    }\n  \n  }\n\n  toPreviousPage(): void {\n    if(this.currPage === 1) {\n      this.toHome();\n    }\n    this.currPage--;\n    this.spinnerProgress -= this.spinnerIncrement;\n  }\n\n  setDateTime(): void {\n\n    let startHours: number = this.offloadTime.hour;\n    let startMinutes: number = this.offloadTime.minute;\n\n    this.offloadDate.setHours(startHours ? startHours : this.offloadDate.getHours());\n    this.offloadDate.setMinutes(startMinutes ? startMinutes : this.offloadDate.getMinutes());\n    this.offloadDate.setSeconds(0);\n    this.offloadDate.setMilliseconds(0);\n\n  }\n\n  setDisplayedColumns(): void {\n    if(this.getCurrentGearType() === 'Seine'){\n      this.displayedColumns = ['speciesName', 'weight', 'pieces'];\n    } else { // will be Gill Net in this case\n      this.displayedColumns = ['speciesName', 'pieces'];\n    }\n  \n  }\n\n  fishSlipVal(): string { // returns the the response to the fish slip issues question\n\n    let getFishSlip: AbstractControl<any, any> | null = this.offloadForm.get('fishSlipIssued');\n\n    if (getFishSlip?.errors?.required) {\n      return '[Required]';\n    }\n    return getFishSlip?.value;\n\n  }\n\n  getWeightUnits(): string {\n    let getUnits: AbstractControl<any, any> | null = this.offloadForm.get('weightUnits');\n    return getUnits?.value;\n  }\n\n  getCurrentGearType(): string {\n    return this.currTrip.gear.name;\n  }\n\n  filterSpeciesData(): void {  // filters the species list accessible to the user in the add species dialog\n    for (let species of this.unfilteredFishList) {\n      let excludeFlag = false;\n      for (let tableSpecies of this.tableDataSource) {\n        if (species.speciesName === tableSpecies.speciesName) {\n          excludeFlag = true; // we only want to add species to the list that are not already in the table\n        }\n      }\n      if (excludeFlag === false) { // if the species is not already in the table\n        if(!this.offloadTable.excludesSpecies.includes(species.speciesName) && // only add the species if it is not excluded from in the gear type\n        !this.offloadTable.releaseOnlySpecies.includes(species.speciesName)) { // only add the species if it is not release-only\n          this.fishList.push(species);\n        }\n      } \n      excludeFlag = false; // reset flag\n    }\n  }\n\n   // add to, edit or delete from species catch list\n   addSpeciesDialog(index: number = -1): void {\n\n    // editing or deleting a species\n    if (index > -1) {\n          this.editSpecies(this.tableDataSource, index);\n      }\n\n    // adding a species\n    else {\n          this.addSpecies(this.tableDataSource);\n      }\n\n  }\n\n  // add new species to the catch\n  addSpecies(fishListDetails: SpeciesData[]): void {\n\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\n      width: '500px',\n      height: '450px',\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \n      filteredFishList: this.fishList, tableInfo: this.offloadTable }\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n\n        // adding a species to the catch\n        if (result !== 'delete') {\n          fishListDetails.push(this.getNewSpecies(result));\n        }\n\n        // update the table\n        this.updateTable();\n      }\n    });\n\n  }\n\n   // edit or delete a species from the catch\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\n\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\n      width: '500px',\n      height: '450px',\n      data: { identifier: 'edit', species: this.tableDataSource[index], currentFishList: fishListDetails, \n      filteredFishList: this.fishList, tableInfo: this.offloadTable  }\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n\n        // editing a species in the catch\n        if (result !== 'delete') {\n          fishListDetails[index] = this.getNewSpecies(result);\n        }\n\n        // delete a species in the catch\n        else {\n          fishListDetails.splice(index, 1);\n        }\n\n        // update the table\n        this.updateTable();\n\n      }\n    });\n\n  }\n\n  determineCellStyling(value: number): string {\n\n    if(value>0){\n      return 'bolded-cell';\n    } \n    return 'faded-cell';\n  }\n\n  // get new species data from result\n  getNewSpecies(result: SpeciesData): SpeciesData {\n\n    let weight: number = result.offloadWeight ? +result.offloadWeight : 0;\n    let pieces: number = result.offloadPieces ? +result.offloadPieces : 0;\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\n    newSpeciesData.offloadWeight = weight;\n    newSpeciesData.offloadPieces = pieces;\n\n    return newSpeciesData;\n\n  }\n\n  calculateTotalFish(type: string): number {\n\n    let totalFish = 0;\n\n    if(type === 'weight'){\n      for(var i=0; i<this.tableDataSource.length; i++){\n        totalFish += this.tableDataSource[i].offloadWeight;\n      }\n    }else if(type === 'pieces'){\n      for(var i=0; i<this.tableDataSource.length; i++){\n        totalFish += this.tableDataSource[i].offloadPieces;\n      }\n    }\n    return totalFish;\n  }\n\n   // update the specified species catch table\n   updateTable(): void {\n    this.table.renderRows();\n  }\n\n  toHome(): void { \n    // navigate to the user's current homepage (may be offload-home or active-trip-home)\n    this.router.navigate([this.userDetails.currHomepage]); \n  }\n\n   // forbid field from entering non-decimal values\n   forbidNonNumeric(controlName: string): void {\n    let control: AbstractControl = this.offloadForm.get(controlName)!;\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\n  }\n\n  updateHomepage(): void {\n    this.userDetails.currHomepage = 'no-trip-home';\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\n  }\n\n  sendToDFO(): void {\n\n    if(this.offloadForm.valid){\n      this.router.navigate(['submitted-report'], { state: { name: 'Offload Catch Report' } });\n      return;\n    }\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\n\n  }\n\n\n}\n","<div class=\"container report-container\">\n\n    <form [formGroup]=\"offloadForm\">\n\n        <!-- Spinner & Page Count -->\n\n        <div class=\"container\"\n        style=\"padding-top: 20px;\">\n        <div class=\"row\"\n            align=\"center\">\n        <h6 *ngIf=\"currPage <= numPages\">\n            <small class=\"text-muted\">\n            Question {{currPage}} of {{numPages}}\n            </small>\n        </h6>\n        <h6 *ngIf=\"currPage > numPages\">\n            <small class=\"text-muted\">\n            Offload Catch Report\n            </small>\n        </h6>\n        </div>\n\n        <div class=\"row\"\n            align=\"center\">\n        <div class=\"col-5\"></div>\n        <div class=\"col-2\">\n            <mat-spinner *ngIf=\"currPage <= numPages\"\n                        mode=\"determinate\"\n                        [diameter]=\"50\"\n                        [strokeWidth]=\"6\"\n                        [value]=\"spinnerProgress\">\n            </mat-spinner>\n\n            <mat-icon *ngIf=\"currPage > numPages\"\n                    style=\"color: #3ebfb9\">\n            check_circle_outline\n            </mat-icon>\n        </div>\n        <div class=\"col-5\"></div>\n        </div>\n    </div>\n\n    <!-- Offload Date & Time -->\n\n        <div *ngIf=\"currPage === 1\"\n            class=\"container details\">\n\n            <div class=\"row\"\n                align=\"center\">\n            <h5 class=\"blue-heading-title\">\n                When did you offload?\n            </h5>\n            </div>\n\n            <div class=\"row\"\n                align=\"center\">\n            <div class=\"col-2\"></div>\n            <div class=\"col-8\">\n                <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\n                <mat-calendar [(selected)]=\"offloadDate\"></mat-calendar>\n                </mat-card>\n                <ngb-timepicker class=\"time-picker\"\n                                [meridian]=\"true\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [(ngModel)]=\"offloadTime\">\n                </ngb-timepicker>\n            </div>\n            </div>\n\n        </div>\n\n        <!-- Fish Slip & Units Information (not done) -->\n        <div *ngIf=\"currPage === 2\">\n            <div class=\"row\"\n                align=\"center\">\n                <h5 class=\"blue-heading-title\">\n                Were you issued a fish slip or sale slip?\n                </h5>\n                <mat-form-field appearance=\"outline\"\n                                    class=\"form-field\"\n                                    style=\"padding-top: 15px;\">\n                        <mat-label>\n                        Select\n                        </mat-label>\n                        <mat-select formControlName=\"fishSlipIssued\">\n                        <mat-option *ngFor=\"let response of responseOptions\"\n                                    [value]=\"response\">\n                            {{response}}\n                        </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"offloadForm.invalid\">\n                        Required\n                        </mat-error>\n            </mat-form-field>\n            </div>\n\n            <div *ngIf=\"fishSlipVal() === 'Yes'\">\n                    <div class=\"row\"\n                        align=\"center\">\n                \n                        <h5 class=\"blue-heading-title\">\n                        Please provide the slip number.\n                        </h5>\n                        <mat-form-field appearance=\"outline\"\n                                        class=\"form-field\"\n                                        style=\"padding-top: 15px;\">\n                            <mat-label>\n                            Slip number\n                            </mat-label>\n                            <input matInput\n                                inputmode=\"numeric\"\n                                formControlName=\"fishSlipNumber\"\n                                (input)=\"forbidNonNumeric('fishSlipNumber')\">\n                            <mat-error *ngIf=\"offloadForm.invalid\">\n                            Required\n                            </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <!-- Weight Units -->\n\n            <div class=\"row\"\n                    *ngIf=\"getCurrentGearType()==='Seine'\"\n                    align=\"center\">\n                <h5 class=\"blue-heading-title\">\n               How would you like to record catch weight?\n                </h5>\n             \n              <mat-form-field appearance=\"outline\"\n                                class=\"form-field\"\n                                style=\"padding-top: 15px;\">\n                     <mat-label>\n                        Select Units\n                    </mat-label>\n                    <mat-select formControlName=\"weightUnits\">\n                        <mat-option *ngFor=\"let weightUnit of weightUnitOptions\"\n                                    [value]=\"weightUnit\">\n                            {{weightUnit}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"offloadForm.invalid\">\n                        Required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n        </div>\n\n        <!-- Catch Table Page (not done) -->\n        <div *ngIf=\"currPage === 3\">\n\n              <!-- Table -->\n\n              <div class=\"row\"\n                    align=\"center\">\n                <h5 class=\"blue-heading-title\">\n               Offload Catch Table\n                </h5>\n              </div>\n             <h6 class=\"blue-label\"\n                *ngIf=\"getCurrentGearType() === 'Seine'\">\n                Please record total catch for each species in \n                <b>either </b>\n                <i>weight</i> <b> or</b> <i> pieces</i>.\n              </h6>\n              <h6 class=\"blue-label\"\n                *ngIf=\"getCurrentGearType() === 'Gill Net'\">\n                Please record total catch for each species in \n                <i> pieces </i>.\n              </h6>\n\n\n              <table mat-table\n              [dataSource]=\"tableDataSource\"\n              class=\"mat-elevation-z8 margin-table\">\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"speciesName\">\n                <tr>\n                    <th mat-header-cell\n                        *matHeaderCellDef>\n                    Name\n                    </th>\n                    <td mat-cell\n                        *matCellDef=\"let element\">\n                    {{element.speciesName}}\n                    </td>\n                </tr>\n                </ng-container>\n\n                <!-- Weight Column (Seine only) -->\n                <div *ngIf=\"getCurrentGearType()==='Seine'\">\n                    <ng-container matColumnDef=\"weight\">\n                    <tr>\n                        <th mat-header-cell\n                            *matHeaderCellDef>\n                            Weight <small>({{getWeightUnits()}})</small>\n                        </th>\n                            <td mat-cell [ngClass]=\"determineCellStyling(element.offloadWeight)\"\n                                *matCellDef=\"let element\">\n                            {{element.offloadWeight}}\n                            </td>\n                    </tr>\n                    </ng-container>\n                </div>\n\n                <!-- Pieces Column -->\n                <ng-container matColumnDef=\"pieces\">\n                <tr>\n                    <th mat-header-cell\n                        *matHeaderCellDef>\n                    Pieces\n                    </th>\n                    <td mat-cell [ngClass]=\"determineCellStyling(element.offloadPieces)\"\n                        *matCellDef=\"let element\">\n                    {{element.offloadPieces}}\n                    </td>\n                </tr>\n                </ng-container>\n\n                <!-- Rows -->\n\n                <tr mat-header-row\n                    *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row\n                    *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\n                    (click)=\"addSpeciesDialog(index)\"></tr>\n                    \n            </table>  \n\n             <!-- Fish Totals -->\n\n            <div class=\"row\" style=\"padding-top: 10px;\">\n\n                <h6 *ngIf=\"getCurrentGearType() === 'Seine'\">\n                    <b>\n                        Total Weight:\n                    </b>\n                    {{calculateTotalFish('weight')}}\n                </h6>\n                <h6>\n                    <b>\n                        Total Pieces:\n                    </b>\n                    {{calculateTotalFish('pieces')}}\n                </h6>\n             </div>\n\n            \n            <div class=\"row add-item\" style=\"padding-top: 15px;\"\n                align=\"center\">\n                <div class=\"col-2\"></div>\n                <div class=\"col-8\">\n                <div class=\"row\">\n                    <button mat-raised-button\n                            class=\"fishing-button-red\"\n                            type=\"button\"\n                            (click)=\"addSpeciesDialog()\">\n                    Add New Species\n                    </button>\n                </div>\n                </div>\n                <div class=\"col-2\"></div>\n            </div>\n\n        </div>\n\n        <!-- Confirmation Page -->\n        <div *ngIf=\"currPage > numPages\"\n            class=\"container\">\n            <div class=\"row\" align=\"center\">\n                <h5 class=\"blue-heading-title\">\n                  Is all information complete and ready to be submitted to DFO?\n                </h5>\n              </div>\n\n              <div class=\"row\">\n                <h6 class=\"blue-label\">\n                  <b>\n                    Offload Date:\n                  </b>\n                  {{ offloadDate | date }}\n                </h6>\n              </div>\n        \n              <div class=\"row\">\n                <h6 class=\"blue-label\">\n                  <b>\n                    Offload Time:\n                  </b>\n                  {{ offloadDate | date:'h:mm a' }}\n                </h6>\n              </div>\n\n              <div class=\"row\">\n                <h6 class=\"blue-label\">\n                  <b>\n                    Fish Slip Issued?:\n                  </b>\n                  <span *ngIf=\"offloadForm.get('fishSlipIssued')?.errors?.required\"\n                        class=\"invalid-field\">\n                    [Required]\n                  </span>\n                  <span *ngIf=\"!offloadForm.get('fishSlipIssued')?.errors?.required\">\n                    {{offloadForm.get('fishSlipIssued')?.value}}\n                  </span>\n                </h6>\n              </div>\n\n              <div class=\"row\" *ngIf=\"fishSlipVal()==='Yes'\">\n                <h6 class=\"blue-label\">\n                  <b>\n                    Slip Number:\n                  </b>\n                  <span *ngIf=\"offloadForm.get('fishSlipNumber')?.errors?.required\"\n                        class=\"invalid-field\">\n                    [Required]\n                  </span>\n                  <span *ngIf=\"!offloadForm.get('fishSlipNumber')?.errors?.required\">\n                    {{offloadForm.get('fishSlipNumber')?.value}}\n                  </span>\n                </h6>\n              </div>\n\n              <div class=\"row\" *ngIf=\"getCurrentGearType() === 'Seine'\">\n                <h6 class=\"blue-label\">\n                  <b>Total Weight <small> ({{offloadForm.get('weightUnits')?.value}}): </small></b>\n                  <span>\n                    {{calculateTotalFish('weight')}}\n                  </span>\n                </h6>\n              </div>\n      \n              <div class=\"row\">\n                  <h6 class=\"blue-label\">\n                   <b>Total Pieces:</b> \n                    <span>\n                      {{calculateTotalFish('pieces')}}\n                    </span>\n                  </h6>\n                </div>\n\n        </div>\n    </form>\n\n\n\n    <!-- Page navigation buttons -->\n    <div class=\"row bottom-buttons\">\n        <div class=\"col-1\"></div>\n        <div class=\"col-4\">\n        <div class=\"row\">\n            <button mat-raised-button\n                    class=\"fishing-button-blue\"\n                    type=\"button\"\n                    (click)=\"toPreviousPage()\">\n            <span>\n                Back\n            </span>\n            </button>\n        </div>\n        </div>\n        <div class=\"col-2\"></div>\n        <div class=\"col-4\">\n        <div class=\"row\">\n            <button mat-raised-button\n                    class=\"fishing-button-red\"\n                    type=\"submit\"\n                    (click)=\"toNextPage()\">\n            <span *ngIf=\"currPage <= numPages\">\n                Next\n            </span>\n            <span *ngIf=\"currPage > numPages\">\n                Send to DFO\n            </span>\n            </button>\n        </div>\n        </div>\n        <div class=\"col-1\"></div>\n    </div>\n\n</div>\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-pause-report',\r\n  templateUrl: './pause-report.component.html',\r\n  styleUrls: ['./pause-report.component.css']\r\n})\r\nexport class PauseReportComponent {\r\n\r\n  // report data\r\n  pauseForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  pauseDate: Date = new Date(); // page 1\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.pauseForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n    if (this.pauseForm.valid) {\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Pause Fishing Report' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"pauseForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When did you not fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"pauseDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"pauseForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Pause Date:\r\n          </b>\r\n          {{ pauseDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{pauseForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{pauseForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Gear } from '../../data-models/trip-models/gear-models/gear.model';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../../data-models/trip-models/license-area.model';\r\nimport { AddVesselDialogComponent } from '../../dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\n\r\n@Component({\r\n  selector: 'app-start-report',\r\n  templateUrl: './start-report.component.html',\r\n  styleUrls: ['./start-report.component.css']\r\n})\r\nexport class StartReportComponent {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // data preambles\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  gears: Gear[] = [];\r\n  userVessels: VesselData[] = [];\r\n  licenseAreas: LicenseArea[] = [];\r\n  emptyGear: Gear = new Gear('', '');\r\n  emptyVessel: VesselData = new VesselData('', '');\r\n  emptyArea: LicenseArea = new LicenseArea('', '');\r\n\r\n  // report data\r\n  startForm: UntypedFormGroup = new UntypedFormGroup({\r\n    gear: new FormControl<Gear>(this.emptyGear, [Validators.required]), // page 1\r\n    vessel: new FormControl<VesselData>(this.emptyVessel, [Validators.required]), // page 2\r\n    licenseArea: new FormControl<LicenseArea>(this.emptyArea, [Validators.required]), // page 3\r\n    master: new FormControl<string>('', [Validators.required]), // page 4\r\n    fin: new FormControl<string>('', [Validators.required]), // page 4\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 5\r\n    name: new FormControl<string>('', [Validators.required]), // page 6\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]), // page 6\r\n    comments: new FormControl<string>('') // page 7\r\n  });\r\n  startDate: Date = new Date(); // page 5\r\n  startTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 5\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      // get user details\r\n      this.auth.user$.subscribe((user: User | null | undefined) => {\r\n        if (user) {\r\n\r\n          // get user data details\r\n          this.userDetails = this.localStorageService.getUser(user);\r\n          this.initialize();\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    // get all gears, vessels, license areas\r\n    this.gears = this.localStorageService.getGears();\r\n    this.userVessels = this.userDetails.vessels;\r\n    this.licenseAreas = this.localStorageService.getLicenseAreas();\r\n\r\n    // initialize form upon first entry, or populate with completed fishing report\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n    let currGear: Gear = this.emptyGear;\r\n    let currVessel: VesselData = this.emptyVessel;\r\n    let currArea: LicenseArea = this.emptyArea;\r\n    let currMaster: string = this.currTrip.master;\r\n    let currFin: string = this.currTrip.fin;\r\n    let currManagementArea: string = this.currTrip.managementArea;\r\n    let currName: string = this.currTrip.name;\r\n    let currPhoneNum: Tel = this.currTrip.phoneNum;\r\n    let currComments: string = this.currTrip.comments;\r\n\r\n    // clear old data from the previous trip\r\n    this.clearTripData();\r\n\r\n    // set the start time to the current time\r\n    this.startTime = {\r\n      hour: this.startDate.getHours(),\r\n      minute: this.startDate.getMinutes()\r\n    };\r\n\r\n\r\n    // fishing report already has gear, vessel and area data\r\n    if (this.currTrip.isInProgress || this.currTrip.isComplete) {\r\n\r\n      currGear = this.setSelectedGear(currGear);\r\n      currVessel = this.setSelectedVessel(currVessel);\r\n      currArea = this.setSelectedArea(currArea);\r\n\r\n    }\r\n\r\n    // fishing report does not yet have gear, vessel or area data\r\n    else {\r\n\r\n      this.currTrip.isInProgress = true;\r\n      currGear = this.gears[0];\r\n      currVessel = this.userVessels[0];\r\n      currArea = this.licenseAreas[0];\r\n\r\n    }\r\n\r\n    // populate report\r\n    this.startForm.patchValue({\r\n      gear: currGear,\r\n      vessel: currVessel,\r\n      licenseArea: currArea,\r\n      master: currMaster,\r\n      fin: currFin,\r\n      managementArea: currManagementArea,\r\n      name: currName,\r\n      phoneNum: currPhoneNum,\r\n      comments: currComments\r\n    });\r\n\r\n    this.saveCurrTrip();\r\n\r\n    this.numPages = 7;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // set the radio buttons to the currently selected gear in the fishing report\r\n  setSelectedGear(currGear: Gear): Gear {\r\n    currGear = this.currTrip.gear;\r\n    for (let gear of this.gears) {\r\n      gear.isChecked = (gear.logbookID === currGear.logbookID);\r\n    }\r\n    return currGear;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected vessel in the fishing report\r\n  setSelectedVessel(currVessel: VesselData): VesselData {\r\n    currVessel = this.currTrip.vessel;\r\n    for (let vessel of this.userVessels) {\r\n      vessel.isChecked = (vessel.vesselCoastNumber === currVessel.vesselCoastNumber);\r\n    }\r\n    return currVessel;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected license area in the fishing report\r\n  setSelectedArea(currArea: LicenseArea): LicenseArea {\r\n    currArea = this.currTrip.licenseArea;\r\n    for (let licenseArea of this.licenseAreas) {\r\n      licenseArea.isChecked = (licenseArea.licenseName === currArea.licenseName);\r\n    }\r\n    return currArea;\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n\r\n      switch (this.currPage) {\r\n\r\n        // to vessel page\r\n        case 1:\r\n          let currVessel: VesselData = new VesselData('', '');\r\n          currVessel = this.setSelectedVessel(currVessel);\r\n          this.startForm.patchValue({\r\n            vessel: currVessel\r\n          });\r\n          break;\r\n\r\n        // to license area page\r\n        case 2:\r\n          let currArea: LicenseArea = new LicenseArea('', '');\r\n          currArea = this.setSelectedArea(currArea);\r\n          this.startForm.patchValue({\r\n            licenseArea: currArea\r\n          });\r\n          break;\r\n\r\n        // save date in date page\r\n        case 5:\r\n          this.setDateTime();\r\n          break;\r\n\r\n        // save phone number in contact details page\r\n        case 6:\r\n          this.telInput.touched = true;\r\n          this.telInput.stateChanges.next();\r\n          this.startForm.get('phoneNum')?.updateValueAndValidity();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n\r\n      }\r\n\r\n      this.saveCurrTrip();\r\n      this.incrementPage();\r\n    }\r\n\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    switch (this.currPage) {\r\n\r\n      // back to home if at beginning of report\r\n      case 1:\r\n        this.saveCurrTrip();\r\n        this.toHome();\r\n        return;\r\n\r\n      // to gear page\r\n      case 2:\r\n        let currGear: Gear = new Gear('', '');\r\n        currGear = this.setSelectedGear(currGear);\r\n        this.startForm.patchValue({\r\n          gear: currGear\r\n        });\r\n        break;\r\n\r\n      // to vessel page\r\n      case 3:\r\n        let currVessel: VesselData = new VesselData('', '');\r\n        currVessel = this.setSelectedVessel(currVessel);\r\n        this.startForm.patchValue({\r\n          vessel: currVessel\r\n        });\r\n        break;\r\n\r\n      // to license area page\r\n      case 4:\r\n        let currArea: LicenseArea = new LicenseArea('', '');\r\n        currArea = this.setSelectedArea(currArea);\r\n        this.startForm.patchValue({\r\n          licenseArea: currArea\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n\r\n    }\r\n\r\n    this.saveCurrTrip();\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // save the current trip information\r\n  saveCurrTrip(): void {\r\n    this.currTrip.gear = this.startForm.get('gear')?.value;\r\n    this.currTrip.vessel = this.startForm.get('vessel')?.value;\r\n    this.currTrip.licenseArea = this.startForm.get('licenseArea')?.value;\r\n    this.currTrip.master = this.startForm.get('master')?.value;\r\n    this.currTrip.fin = this.startForm.get('fin')?.value;\r\n    this.currTrip.startDate = this.startDate;\r\n    this.currTrip.managementArea = this.startForm.get('managementArea')?.value;\r\n    this.currTrip.name = this.startForm.get('name')?.value;\r\n    this.currTrip.phoneNum = this.startForm.get('phoneNum')?.value;\r\n    this.currTrip.comments = this.startForm.get('comments')?.value;\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  clearTripData(): void {\r\n    this.currTrip.offloadNeeded = false; // reset offload flag\r\n    this.currTrip.dailyCatchReports.length = 0; // clear all daily catch report data\r\n\r\n    // save changes to local storage\r\n    this.userDetails.currTrip = this.currTrip; \r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // sets flag in trip data if this trip may need an offload report\r\n  determineOffloadReport(): void { \r\n    // we only need an offload report if the trip is Seine in Area B, or Gill Net in Area C, D, or, E\r\n    if((this.currTrip.gear.name === 'Seine' && this.currTrip.licenseArea.licenseName === 'B') ||\r\n    (this.currTrip.gear.name === 'Gill Net' && (this.currTrip.licenseArea.licenseName === 'C' || \r\n    this.currTrip.licenseArea.licenseName === 'D' || this.currTrip.licenseArea.licenseName === 'E'))){\r\n      this.currTrip.offloadNeeded = true; // update flag\r\n    } else {\r\n      this.currTrip.offloadNeeded = false; // reset flag otherwise \r\n    } \r\n    this.userDetails.currTrip = this.currTrip; // save flag changes\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n    return;\r\n  }\r\n  \r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let startHours: number = this.startTime.hour;\r\n    let startMinutes: number = this.startTime.minute;\r\n\r\n    this.startDate.setHours(startHours ? startHours : this.startDate.getHours());\r\n    this.startDate.setMinutes(startMinutes ? startMinutes : this.startDate.getMinutes());\r\n    this.startDate.setSeconds(0);\r\n    this.startDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  // add vessels\r\n  addVesselDialog(): void {\r\n\r\n    const dialogRef = this.dialog.open(AddVesselDialogComponent, {\r\n      width: '500px',\r\n      height: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected vessel as new vessel added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let vessel of this.userVessels) {\r\n            vessel.isChecked = false;\r\n          }\r\n          let newVessel: VesselData = new VesselData(result.vesselName, result.vesselNumber, true);\r\n          this.startForm.patchValue({\r\n            vessel: newVessel\r\n          });\r\n          this.userDetails.vessels.push(newVessel);\r\n          this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n          this.toNextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // check if gear value is invalid\r\n  gearInvalid(): boolean {\r\n    return this.startForm.get('gear')?.errors?.required;\r\n  }\r\n\r\n  // check if master values are invalid\r\n  masterInvalid(): boolean {\r\n    return this.startForm.get('master')?.errors?.required || this.startForm.get('fin')?.errors?.required;\r\n  }\r\n\r\n  // check if management area is invalid\r\n  vesselInvalid(): boolean {\r\n    return this.startForm.get('vessel')?.errors?.required;\r\n  }\r\n\r\n  // check if license area is invalid\r\n  licenseAreaInvalid(): boolean {\r\n    return this.startForm.get('licenseArea')?.errors?.required;\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.startForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // check if contact details are invalid\r\n  contactDetailsInvalid(): boolean {\r\n    return this.startForm.get('name')?.errors?.required || this.startForm.get('phoneNum')?.errors?.required;\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    if (this.startForm.valid) {\r\n      this.currTrip.isInProgress = false;\r\n      this.currTrip.isComplete = true;\r\n      this.saveCurrTrip();\r\n      this.determineOffloadReport(); // check if we will need an offload report for this trip\r\n      this.updateHomepage(); // update the user's active homepage\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Trip' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'active-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // go back to the home screen with no active trip\r\n  toHome(): void {\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          Start Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"startForm\">\r\n\r\n    <!-- Choose gear -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What type of gear are you using?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h5 class=\"blue-heading-subtitle\">\r\n          My available logbooks:\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"gear\">\r\n            <mat-radio-button *ngFor=\"let gear of gears\"\r\n                              [value]=\"gear\"\r\n                              [checked]=\"gear.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{gear}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose or add vessel -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Choose or add your vessel\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"vessel\">\r\n            <mat-radio-button *ngFor=\"let vessel of userVessels\"\r\n                              [value]=\"vessel\"\r\n                              [checked]=\"vessel.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{vessel}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n\r\n      <div class=\"row add-item\"\r\n           align=\"center\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addVesselDialog()\">\r\n              Add New Vessel\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose license area -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What is your License Area?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"licenseArea\">\r\n            <mat-radio-button *ngFor=\"let area of licenseAreas\"\r\n                              [value]=\"area\"\r\n                              [checked]=\"area.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{area}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 4\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Who is the vessel master?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"master\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          FIN (Fisher Identification Number)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Fisher Identification Number\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"fin\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 5\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you start fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"startDate\"></mat-calendar>\r\n          </mat-card>\r\n          <ngb-timepicker class=\"time-picker\"\r\n                          [meridian]=\"true\"\r\n                          [ngModelOptions]=\"{ standalone: true }\"\r\n                          [(ngModel)]=\"startTime\">\r\n\r\n          </ngb-timepicker>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where will you fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 6\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Please provide onboard contact details.\r\n        </h5>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Contact Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"name\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 7\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 8\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Gear Type:\r\n          </b>\r\n          <span *ngIf=\"gearInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!gearInvalid()\">\r\n            {{startForm.get('gear')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel Master:\r\n          </b>\r\n          <span *ngIf=\"masterInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!masterInvalid()\">\r\n            {{startForm.get('master')?.value}} (FIN: {{startForm.get('fin')?.value}})\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel:\r\n          </b>\r\n          <span *ngIf=\"vesselInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!vesselInvalid()\">\r\n            {{startForm.get('vessel')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            License Area:\r\n          </b>\r\n          <span *ngIf=\"licenseAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!licenseAreaInvalid()\">\r\n            {{startForm.get('licenseArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Date:\r\n          </b>\r\n          {{ startDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Time:\r\n          </b>\r\n          {{ startDate | date:'h:mm a' }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{startForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Contact Details:\r\n          </b>\r\n          <span *ngIf=\"contactDetailsInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!contactDetailsInvalid()\">\r\n            {{startForm.get('name')?.value}}, {{startForm.get('phoneNum')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{startForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Page navigation buttons -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-submitted-report',\r\n  templateUrl: './submitted-report.component.html',\r\n  styleUrls: ['./submitted-report.component.css']\r\n})\r\nexport class SubmittedReportComponent {\r\n\r\n  //data preambles\r\n  reportName: string = \"\";\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private router: Router\r\n  ) {\r\n    this.reportName = this.router.getCurrentNavigation()?.extras.state?.name;\r\n     // get current fishing report information\r\n     let currID: string = this.localStorageService.getCurrID();\r\n     this.userDetails = this.localStorageService.getUserByID(currID);\r\n     this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n  }\r\n\r\n  // go back to the home screen\r\n  toHome(): void {\r\n    // once we move the daily catch report flag, replace this switch statement with one line using \r\n    // this.router.navigate([this.userDetails.currHomepage]);\r\n    this.router.navigate([this.userDetails.currHomepage]);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Report Submitted!\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Please refer to the\r\n      <b>\r\n        Records\r\n      </b>\r\n      page to ensure the report has been received and to view your\r\n      <i>\r\n        {{reportName}} Confirmation Number.\r\n      </i>\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n    <div class=\"col-2\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            OK\r\n          </span>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\nimport { VesselData } from '../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../data-models/trip-models/license-area.model';\r\nimport { SpeciesData } from '../data-models/catch-table-models/species-data.model';\r\nimport { Gear } from '../data-models/trip-models/gear-models/gear.model';\r\nimport { Trip } from '../data-models/trip-models/trip.model';\r\nimport { Tel } from '../tel-input/tel-input.component';\r\nimport { Net } from '../data-models/trip-models/gear-models/net.model';\r\nimport { TableRules } from '../data-models/catch-table-models/table-rules.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor(\r\n    private toastr: ToastrService\r\n  ) {\r\n\r\n    // initialize default lists\r\n    this.setLists();\r\n\r\n  }\r\n\r\n  // save data to local storage through [key, value] pair\r\n  public saveData(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  // get data from key\r\n  public getData(key: string): any {\r\n    let item: string | null = localStorage.getItem(key);\r\n    if (item) {\r\n      return JSON.parse(item);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // remove data given key\r\n  public removeData(key: string): void {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  // new user after sign up\r\n  public createNewUser(user: User | null | undefined): UserData {\r\n\r\n    let id: string | undefined = user?.sub;\r\n    let email: string | undefined = user?.email;\r\n\r\n    if (!id || !email) {\r\n      return new UserData('', '');\r\n    }\r\n\r\n    let newUser: UserData = new UserData(id, email);\r\n    //newUser.trips = this.setTrips();\r\n    newUser.vessels = this.setVessels();\r\n    newUser.currTrip = this.setCurrTrip();\r\n    newUser.nets = this.setNets();\r\n    newUser.currHomepage = this.setHomepage();\r\n\r\n    this.saveData(id, newUser);\r\n    let userIDs: string[] = this.getAllUserIDs();\r\n    userIDs.push(id);\r\n    this.saveData('userIDs', userIDs);\r\n    this.saveData('currID', id);\r\n\r\n    return newUser;\r\n\r\n  }\r\n\r\n  // get the current user ID for offline data retrieval\r\n  public getCurrID(): string {\r\n    return this.getData('currID');\r\n  }\r\n\r\n  // get all the user ids in local storage\r\n  public getAllUserIDs(): string[] {\r\n    return this.getStringList('userIDs');\r\n  }\r\n\r\n  // check if user trips are defined\r\n  private validateTrips(trips: any): Trip[] {\r\n\r\n    // if the trips do not exist, set the default ones\r\n    if (!trips) {\r\n      //return this.setTrips();\r\n    }\r\n\r\n    let userTrips: Trip[] = [];\r\n    for (let trip of trips) {\r\n      //userTrips.push(new Trip(trip.tripID));\r\n    }\r\n    return userTrips;\r\n  }\r\n\r\n  // check if homepage is defined\r\n  private validateHomepage(homepage: string): string {\r\n    if(homepage === '') {\r\n      return this.setHomepage();\r\n    }\r\n    return homepage;\r\n  }\r\n\r\n  // check if user vessels are defined\r\n  private validateVessels(vessels: any): VesselData[] {\r\n\r\n    // if vessels do not exist, set the default ones\r\n    if (!vessels) {\r\n      return this.setVessels();\r\n    }\r\n\r\n    let userVessels: VesselData[] = [];\r\n    for (let vessel of vessels) {\r\n      userVessels.push(new VesselData(vessel.vesselName, vessel.vesselCoastNumber, vessel.isChecked));\r\n    }\r\n    return userVessels;\r\n  }\r\n\r\n  // check if user fishing report is defined\r\n  public validateCurrTrip(currTrip: any): Trip {\r\n\r\n    if (!currTrip) {\r\n      return this.setCurrTrip();\r\n    }\r\n    \r\n    let usercurrTrip: Trip = new Trip();\r\n    usercurrTrip.isComplete = currTrip.isComplete;\r\n    usercurrTrip.isInProgress = currTrip.isInProgress;\r\n    usercurrTrip.master = currTrip.master;\r\n    usercurrTrip.fin = currTrip.fin;\r\n    usercurrTrip.startDate = new Date(currTrip.startDate);\r\n    usercurrTrip.managementArea = currTrip.managementArea;\r\n    usercurrTrip.name = currTrip.name;\r\n    usercurrTrip.phoneNum = this.getPhoneNum(currTrip.phoneNum);\r\n    usercurrTrip.comments = currTrip.comments;\r\n    usercurrTrip.site = currTrip.site;\r\n    usercurrTrip.arrivalDate = new Date(currTrip.arrivalDate);\r\n    let userGear: any = currTrip.gear;\r\n    let userVessel: any = currTrip.vessel;\r\n    let userLicenseArea: any = currTrip.licenseArea;\r\n    usercurrTrip.gear = new Gear(userGear.name, userGear.logbookID, userGear.isChecked);\r\n    usercurrTrip.vessel = new VesselData(userVessel.vesselName, userVessel.vesselCoastNumber, userVessel.isChecked);\r\n    usercurrTrip.licenseArea = new LicenseArea(userLicenseArea.licenseName, userLicenseArea.licenseLocation, userLicenseArea.isChecked);\r\n    usercurrTrip.offloadNeeded = currTrip.offloadNeeded; \r\n    usercurrTrip.dailyCatchReports = currTrip.dailyCatchReports;\r\n    return usercurrTrip;\r\n\r\n  }\r\n\r\n  // check if user nets are defined\r\n  private validateNets(nets: any): Net[] {\r\n\r\n    // if nets do not exist, set the default ones\r\n    if (!nets) {\r\n      return this.setNets();\r\n    }\r\n\r\n    let userNets: Net[] = [];\r\n    for (let net of nets) {\r\n      userNets.push(new Net(net.netType, net.netName, net.numStrands, net.length, net.weedlineDepth,\r\n        net.weedlineDepthUnits, net.hangRatio, net.meshSize, net.meshSizeUnits,\r\n        net.numMeshes, net.isChecked));\r\n    }\r\n    return userNets;\r\n  }\r\n\r\n\r\n  // get current user data in local storage\r\n  public getUserByID(id: string): UserData {\r\n\r\n    let user: UserData = new UserData('', '');\r\n    let userString: any = this.getData(id);\r\n\r\n    if (userString) {\r\n      user.userID = userString.userID;\r\n      user.userEmail = userString.userEmail;\r\n      //user.trips = this.validateTrips(userString.trips);\r\n      user.vessels = this.validateVessels(userString.vessels);\r\n      user.currTrip = this.validateCurrTrip(userString.currTrip);\r\n      user.nets = this.validateNets(userString.nets);\r\n      user.currHomepage = this.validateHomepage(userString.currHomepage);\r\n      this.saveData(user.userID, user);\r\n    }\r\n    else {\r\n      this.toastr.error(\"Cannot get user data\", \"Data error\");\r\n    }\r\n    \r\n    return user;\r\n\r\n  }\r\n\r\n  // get current user in local storage if online (will use database to sync storage once implemented)\r\n  public getUser(user: User): UserData {\r\n\r\n    let thisUser: UserData = new UserData('', '');\r\n    let id: string | undefined = user.sub;\r\n\r\n    // if ID does not exist, return an empty user\r\n    if (!id) {\r\n      return thisUser;\r\n    }\r\n\r\n    let userString: any = this.getData(id);\r\n\r\n    if (userString) {\r\n      thisUser.userID = userString.userID;\r\n      thisUser.userEmail = userString.userEmail;\r\n      //thisUser.trips = this.validateTrips(userString.trips);\r\n      thisUser.vessels = this.validateVessels(userString.vessels);\r\n      thisUser.currTrip = this.validateCurrTrip(userString.currTrip);\r\n      thisUser.nets = this.validateNets(userString.nets);\r\n      thisUser.currHomepage = this.validateHomepage(userString.currHomepage);\r\n      this.saveData(id, thisUser);\r\n    }\r\n    else {\r\n      this.toastr.error(\"Try logging in again\", \"Data error\");\r\n    }\r\n\r\n    return thisUser;\r\n\r\n  }\r\n\r\n\r\n  // get license areas stored in local storage\r\n  public getLicenseAreas(): LicenseArea[] {\r\n\r\n    let licenseAreas: any = this.getData('licenseAreaList');\r\n\r\n    // if license areas do not exist, set them again\r\n    if (!licenseAreas) {\r\n      this.setLicenseAreas();\r\n      licenseAreas = this.getData('licenseAreaList');\r\n    }\r\n\r\n    let licenseAreaArray: LicenseArea[] = [];\r\n    for (let licenseArea of licenseAreas) {\r\n      licenseAreaArray.push(new LicenseArea(licenseArea.licenseName, licenseArea.licenseLocation, licenseArea.isChecked));\r\n    }\r\n\r\n    return licenseAreaArray;\r\n\r\n  }\r\n\r\n  // get species stored in local storage\r\n  public getSpeciesList(name: string): SpeciesData[] {\r\n\r\n    let speciesList: any = this.getData(name);\r\n\r\n    // if species list does not exist, set it again\r\n    if (!speciesList) {\r\n      this.setSpeciesList();\r\n      speciesList = this.getData(name);\r\n    }\r\n\r\n    let speciesArray: SpeciesData[] = [];\r\n    for (let species of speciesList) {\r\n      speciesArray.push(new SpeciesData(species.speciesName));\r\n    }\r\n\r\n    return speciesArray;\r\n\r\n  }\r\n\r\n  // get gears stored in local storage\r\n  public getGears(): Gear[] {\r\n    let gearList: any = this.getData('gearList');\r\n\r\n    // if gear list does not exist, set it again\r\n    if (!gearList) {\r\n      this.setGears();\r\n      gearList = this.getData('gearList');\r\n    }\r\n\r\n    let gearArray: Gear[] = [];\r\n    for (let gear of gearList) {\r\n      gearArray.push(new Gear(gear.name, gear.logbookID, gear.isChecked));\r\n    }\r\n\r\n    return gearArray;\r\n\r\n  }\r\n\r\n  // get table rules for catch table data in local storage\r\n  public getTableRules(gearName: string): TableRules {\r\n\r\n    let newTable: TableRules = new TableRules();\r\n    let tableList: any = this.getData('tableRulesList');\r\n\r\n    // if table list does not exist, set it again\r\n    if (!tableList) {\r\n      this.setTableRules();\r\n      tableList = this.getData('tableRulesList');\r\n    }\r\n\r\n    for(let table of tableList) {\r\n        if(table.gearName === gearName){\r\n          newTable = table;\r\n        }\r\n    }\r\n\r\n    return newTable;\r\n\r\n  }\r\n\r\n\r\n  // get phone number from local storage\r\n  private getPhoneNum(phoneNum: any): Tel {\r\n    return new Tel(phoneNum.area, phoneNum.exchange, phoneNum.subscriber);\r\n  }\r\n\r\n  // get list of strings stored in local storage\r\n  public getStringList(name: string): string[] {\r\n\r\n    let stringList: any = this.getData(name);\r\n\r\n    // if string list does not exist, set it again\r\n    if (!stringList) {\r\n      this.saveData(name, []);\r\n      return this.getData(name);\r\n    }\r\n\r\n    let stringArray: string[] = [];\r\n    for (let currString of stringList) {\r\n      stringArray.push(currString.toString());\r\n    }\r\n\r\n    return stringArray;\r\n\r\n  }\r\n\r\n  // set the default list of trips - WE SHOULD PROBABLY REMOVE THIS -  no need for default trips even for testing\r\n  // private setTrips(): Trip[] {\r\n  //   let trips: Trip[] = [\r\n  //     new Trip('123456')\r\n  //   ];\r\n  //   return trips;\r\n  // }\r\n\r\n  // set the default list of vessels\r\n  private setVessels(): VesselData[] {\r\n    let vessels: VesselData[] = [\r\n      new VesselData(\"My Vessel 1\", \"872357\", true),\r\n      new VesselData(\"My Vessel 2\", \"584317\"),\r\n      new VesselData(\"My Vessel 3\", \"872358\"),\r\n      new VesselData(\"My Vessel 4\", \"584318\"),\r\n    ];\r\n    return vessels;\r\n  }\r\n\r\n  // set the no active trip homepage to a new user\r\n  private setHomepage(): string {\r\n    return 'no-trip-home';\r\n  }\r\n\r\n  // set the default data for the current trip\r\n  private setCurrTrip(): Trip {\r\n    return new Trip();\r\n  }\r\n\r\n  //set the default list of nets\r\n  private setNets(): Net[] {\r\n    let nets: Net[] = [\r\n      new Net(\"Alaska Twist\", \"My Net 1\", \"10\", \"10\", \"cm\", \"2\", \"15\", \"cm\", \"30\", \"50\", true),\r\n      new Net(\"Multi Strand\", \"My Net 2\", \"3\", \"60\", \"in\", \"7\", \"10\", \"in\", \"20\"),\r\n      new Net(\"Combination\", \"My Net 3\", \"8\", \"60\", \"mm\", \"7\", \"8\", \"mm\", \"100\")\r\n    ];\r\n    return nets;\r\n  }\r\n\r\n  // set gears to local storage\r\n  private setGears(): void {\r\n\r\n    let gearList: Gear[] = [\r\n      new Gear('Gill Net', '1111', true),\r\n      new Gear('Seine', '2222'),\r\n      new Gear('Troll', '3333')\r\n    ];\r\n    \r\n    this.saveData('gearList', gearList);\r\n  }\r\n\r\n  // set table rules for what species should show up in the catch table for different gear types\r\n  private setTableRules(): void {\r\n\r\n    let gillNetTable = new TableRules('daily-catch', 'Gill Net');\r\n    gillNetTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Chinook', 'Steelhead', 'Atlantic', 'Dogfish', 'Green Sturgeon', 'White Sturgeon'];\r\n    gillNetTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n    gillNetTable.releaseOnlySpecies =['Steelhead', 'White Sturgeon', 'Green Sturgeon'];\r\n\r\n    let seineTable = new TableRules('daily-catch', 'Seine');\r\n    seineTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Steelhead', 'Atlantic', 'Jack Chinook', 'Adult Chinook'];\r\n    seineTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n\r\n    let trollTable = new TableRules('daily-catch', 'Troll');\r\n    trollTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Atlantic', 'Grilse', 'Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n    trollTable.excludesSpecies = ['Jack Chinook'];\r\n    trollTable.releaseOnlySpecies = ['Sublegal Sized Chinook', 'Grilse'];\r\n\r\n    let tableRulesList: TableRules[] = [gillNetTable, seineTable, trollTable];\r\n\r\n    this.saveData('tableRulesList', tableRulesList);\r\n\r\n  }\r\n\r\n  // set license areas to local storage\r\n  private setLicenseAreas(): void {\r\n    let licenseAreaList: LicenseArea[] = [\r\n      new LicenseArea(\"A\", \"Seine North\", true),\r\n      new LicenseArea(\"B\", \"Seine South\"),\r\n      new LicenseArea(\"C\", \"Gillnet North\"),\r\n      new LicenseArea(\"D\", \"Gillnet Vancouver Island\"),\r\n      new LicenseArea(\"E\", \"Gillnet Fraser + VI\"),\r\n      new LicenseArea(\"F\", \"Troll North\"),\r\n      new LicenseArea(\"G\", \"Troll WCVI\"),\r\n      new LicenseArea(\"H\", \"Troll Fraser\")\r\n    ];\r\n    this.saveData('licenseAreaList', licenseAreaList);\r\n  }\r\n\r\n  // set fish to local storage\r\n  // Note: we will eventually get this list from the DFO database, then will have to copy the names over into SpeciesData\r\n  private setSpeciesList(): void {\r\n    let fishList: SpeciesData[] = [\r\n      new SpeciesData(\"Sockeye\"),\r\n      new SpeciesData(\"Coho\"),\r\n      new SpeciesData(\"Pink\"),\r\n      new SpeciesData(\"Chum\"),\r\n      new SpeciesData('Chinook'),\r\n      new SpeciesData('Steelhead'),\r\n      new SpeciesData('Atlantic'),\r\n      new SpeciesData('Dogfish'),\r\n      new SpeciesData('Green Sturgeon'),\r\n      new SpeciesData('Grilse'), \r\n      new SpeciesData('Jack Chinook'),\r\n      new SpeciesData('Adult Chinook'),\r\n      new SpeciesData('Legal Sized Chinook'),\r\n      new SpeciesData('Sublegal Sized Chinook'),\r\n      new SpeciesData('White Sturgeon'),\r\n      new SpeciesData('Mackerel'),\r\n      new SpeciesData('Lingcod'),\r\n      new SpeciesData('Halibut'),\r\n      new SpeciesData('Aurora Rockfish'),\r\n      new SpeciesData('Canary Rockfish'),\r\n      new SpeciesData('China Rockfish'),\r\n      new SpeciesData('Tiger Rockfish'),\r\n      new SpeciesData('Redbanded Rockfish'),\r\n      new SpeciesData('Unknown Rockfish')\r\n    ];\r\n    this.saveData('fishList', fishList);\r\n  }\r\n\r\n  // set nets to local storage\r\n  private setNetTypes(): void {\r\n    let netTypes: string[] = [\r\n      'Alaska Twist',\r\n      'Multi Strand',\r\n      'Combination'\r\n    ];\r\n    this.saveData('netTypes', netTypes);\r\n  }\r\n\r\n  // data that all users receive, put into local storage\r\n  private setLists(): void {\r\n    this.setTableRules();\r\n    this.setGears();\r\n    this.setLicenseAreas();\r\n    this.setSpeciesList();\r\n    this.setNetTypes();\r\n  }\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Component, ElementRef, Inject, Input, OnDestroy, Optional, Self, ViewChild } from '@angular/core';\r\nimport { FormBuilder, NgControl, AbstractControl, ControlValueAccessor, Validators } from '@angular/forms';\r\nimport { MatFormField, MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\n\r\n/*\r\n  Much thanks to https://material.angular.io/guide/creating-a-custom-form-field-control for the entirety of this component\r\n*/\r\n\r\nexport class Tel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) { }\r\n\r\n  public toString() {\r\n    return this.area + this.exchange + this.subscriber;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tel-input',\r\n  templateUrl: './tel-input.component.html',\r\n  styleUrls: ['./tel-input.component.css'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: TelInputComponent }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class TelInputComponent implements ControlValueAccessor, MatFormFieldControl<Tel>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('area') areaInput!: HTMLInputElement;\r\n  @ViewChild('exchange') exchangeInput!: HTMLInputElement;\r\n  @ViewChild('subscriber') subscriberInput!: HTMLInputElement;\r\n\r\n  parts = this._formBuilder.group({\r\n    area: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    exchange: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    subscriber: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\r\n  });\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  touched = false;\r\n  controlType = 'example-tel-input';\r\n  id = `example-tel-input-${TelInputComponent.nextId++}`;\r\n  onChange = (_: any) => { };\r\n  onTouched = () => { };\r\n\r\n  get empty() {\r\n    const {\r\n      value: { area, exchange, subscriber },\r\n    } = this.parts;\r\n\r\n    return !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy!: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string = '';\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: BooleanInput) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: BooleanInput) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): Tel | null {\r\n    if (this.parts.valid) {\r\n      const {\r\n        value: { area, exchange, subscriber },\r\n      } = this.parts;\r\n      return new Tel(area!, exchange!, subscriber!);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: Tel | null) {\r\n    const { area, exchange, subscriber } = tel || new Tel('', '', '');\r\n    this.parts.setValue({ area, exchange, subscriber });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.touched;\r\n  }\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n  ) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  onFocusIn(event: FocusEvent) {\r\n    if (!this.focused) {\r\n      this.focused = true;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  onFocusOut(event: FocusEvent) {\r\n    if (!this._elementRef.nativeElement.contains(event.relatedTarget as Element)) {\r\n      this.touched = true;\r\n      this.focused = false;\r\n      this.onTouched();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program');\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement.querySelector(\r\n      '.example-tel-input-container',\r\n    )!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    if (this.parts.controls.subscriber.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.exchange.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.area.valid) {\r\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\r\n    } else {\r\n      this._focusMonitor.focusVia(this.areaInput, 'program');\r\n    }\r\n  }\r\n\r\n  writeValue(tel: Tel | null): void {\r\n    this.value = tel;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''), { onlySelf: true, emitEvent: false });\r\n    this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n}\r\n","<div role=\"group\" class=\"example-tel-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField.getLabelId()\"\r\n     (focusin)=\"onFocusIn($event)\"\r\n     (focusout)=\"onFocusOut($event)\">\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"area\" size=\"3\"\r\n         maxLength=\"3\"\r\n         aria-label=\"Area code\"\r\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\r\n         #area>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"exchange\"\r\n         maxLength=\"3\"\r\n         size=\"3\"\r\n         aria-label=\"Exchange code\"\r\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\r\n         #exchange>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (input)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` or `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  auth0: {\r\n    domain: 'dev-5eiy2cesgxurrngi.us.auth0.com',\r\n    clientId: 'JLatVELLRM16M3zBNhUZi27hZXGe5jci',\r\n    redirect_uri: window.location.origin,\r\n    audience: 'https://dev-5eiy2cesgxurrngi.us.auth0.com/userinfo'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","StartReportComponent","EndReportComponent","PauseReportComponent","CancelReportComponent","OffloadReportComponent","SubmittedReportComponent","LoginComponent","SignUpComponent","GillNetReportComponent","SeineReportComponent","TrollReportComponent","NoTripHomeComponent","ActiveTripHomeComponent","OffloadHomeComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","isDevMode","BrowserModule","MaterialModule","FormsModule","ReactiveFormsModule","ToastrModule","AuthModule","ServiceWorkerModule","BrowserAnimationsModule","AddVesselDialogComponent","NgbTimepickerModule","AddTripDialogComponent","AddSpeciesDialogComponent","OnlineStatusModule","TelInputComponent","environment","env","AddNetDialogComponent","MenuComponent","MatIconModule","AppModule","bootstrap","domain","auth0","clientId","authorizationParams","redirect_uri","audience","cacheLocation","register","enabled","registrationStrategy","declarations","UntypedFormGroup","FormControl","Validators","OnlineStatusType","DOCUMENT","auth","router","localStorageService","onlineStatusService","toastr","document","email","required","getStatus","ONLINE","isOnline","onlineStatus","loginButton","ngOnInit","form","get","valueChanges","subscribe","emailErrors","errors","emailError","attemptLogin","window","location","reload","isAuthenticated$","value","query","search","shouldParseResult","includes","handleRedirectCallback","console","log","err","history","replaceState","title","loginWithPopup","user$","user","id","sub","isNewUser","createNewUser","navigate","valid","userIDs","getAllUserIDs","thisUser","getUserByID","userEmail","saveData","error","ids","existingID","consts","ctx","generalValidator","Tel","firstName","lastName","phoneNum","fin","minLength","maxLength","pattern","regex","signupForm","finErrors","minlength","maxlength","finError","toHome","toLogin","OFFLINE","logout","logoutParams","returnTo","origin","attemptSignUp","sending","telInput","touched","stateChanges","next","updateValueAndValidity","viewQuery","MatTable","UserData","SpeciesData","Net","TableRules","DailyCatchReport","Trip","dialog","net","emptyNet","hoursFished","mgmtArea","zoneArea","numSets","comments","nonFish","Date","currID","getCurrID","userDetails","initialize","authd","getUser","onNonFishChange","commentControl","setValidators","clearValidators","currTrip","validateCurrTrip","userNets","nets","unfilteredFishList","getSpeciesList","gillNetTable","getTableRules","filterTableData","populateReport","pages","numPages","spinnerIncrement","displayedColumns","toNextPage","currNet","getSelectedNet","patchValue","numReports","dailyCatchReports","length","prevReport","managementArea","subArea","species","containsSpecies","speciesName","fishListDetails","push","excludesSpecies","fishList","determineCellStyling","name","isReleaseOnly","releaseOnlySpecies","saveUserDetails","userID","isChecked","setSelectedNet","netName","saveUserNets","currPage","incrementPage","sendToDFO","spinnerProgress","toPreviousPage","addNetDialog","dialogRef","open","width","height","afterClosed","result","newNet","netType","netLength","netDepth","netUnits","hangRatio","meshSize","meshUnits","numMeshes","numStrands","updateTable","table","renderRows","calculateTotalFish","type","totalFish","i","kept","released","getNewSpecies","newSpeciesData","addSpecies","data","identifier","currentFishList","filteredFishList","tableInfo","editSpecies","index","splice","addSpeciesDialog","saveCatchReport","state","forbidNonNumeric","controlName","control","setValue","replace","netVal","getNet","determineSpeciesData","tempFishArray","fish","catchReport","netUsed","dateFished","catchDate","speciesDataList","seineTable","frozenOrIced","trollTable","toString","isValid","gearName","tableType","confirmationNumber","Gear","checked","logbookID","depth","depthUnits","ratio","mesh","strands","weedlineDepth","weedlineDepthUnits","meshSizeUnits","transformAnonymous","anon","list","forEach","item","LicenseArea","licenseName","licenseLocation","VesselData","gear","vessel","licenseArea","vname","vcoastNum","vesselName","vesselCoastNumber","Validator","invalid","speciesValidator","speciesList","toLowerCase","MAT_DIALOG_DATA","netTypes","getStringList","netTypeVal","getNetType","onNetTypeChange","strandControl","addNet","clearInputs","close","markAllAsTouched","deleteNet","controls","reset","onNoClick","stringList","offloadWeight","offloadPieces","fillSpecies","filteredSpecies","setDialogConfig","speciesChange","speciesData","displayedTitle","speciesIsReadOnly","currentSpeciesList","checkSpecies","getCurrentFormSpecies","deleteSpecies","tripID","addTrip","deleteTrip","vesselNumber","addVessel","deleteVessel","getGearName","toCatchReport","gearType","toEndReport","toPauseReport","toCancelReport","toOffloadReport","toStartReport","setNewTripFlag","requestToStartNewTrip","clearNewTripFlag","toNoTripHome","updateHomepage","currHomepage","A11yModule","ClipboardModule","DragDropModule","PortalModule","ScrollingModule","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatRippleModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","OverlayModule","toCurrentHome","toProfile","toRecords","toResources","toFisheryNotices","removeData","site","hour","minute","arrivalTime","arrivalDate","getHours","getMinutes","managementAreaInvalid","endForm","isComplete","newDate","toSubmittedReport","arrivalForm","setDateTime","homeName","arrivalHours","arrivalMinutes","setHours","setMinutes","setSeconds","setMilliseconds","offloadNeeded","fishSlipIssued","fishSlipNumber","weightUnits","onFishSlipChange","offloadForm","fishSlipControl","setTableRules","filterSpeciesData","getTableData","setDisplayedColumns","offloadTime","offloadDate","offloadTable","speciesNamesList","tempSpecies","tableDataSource","startHours","startMinutes","getCurrentGearType","fishSlipVal","getFishSlip","getWeightUnits","getUnits","excludeFlag","tableSpecies","weight","pieces","pauseForm","emptyGear","emptyVessel","emptyArea","master","gears","getGears","userVessels","vessels","licenseAreas","getLicenseAreas","currGear","currVessel","currArea","currMaster","currFin","currManagementArea","currName","currPhoneNum","currComments","clearTripData","startTime","startDate","isInProgress","setSelectedGear","setSelectedVessel","setSelectedArea","startForm","saveCurrTrip","determineOffloadReport","addVesselDialog","newVessel","gearInvalid","masterInvalid","vesselInvalid","licenseAreaInvalid","contactDetailsInvalid","reportName","getCurrentNavigation","extras","LocalStorageService","setLists","key","localStorage","setItem","JSON","stringify","getData","getItem","parse","removeItem","newUser","setVessels","setCurrTrip","setNets","setHomepage","validateTrips","trips","userTrips","trip","validateHomepage","homepage","validateVessels","usercurrTrip","getPhoneNum","userGear","userVessel","userLicenseArea","validateNets","userString","setLicenseAreas","licenseAreaArray","setSpeciesList","speciesArray","gearList","setGears","gearArray","newTable","tableList","area","exchange","subscriber","stringArray","currString","tableRulesList","licenseAreaList","setNetTypes","factory","providedIn","coerceBooleanProperty","MatFormFieldControl","MAT_FORM_FIELD","Subject","_formBuilder","_focusMonitor","_elementRef","_formField","ngControl","group","nextId","_","valueAccessor","empty","parts","shouldLabelFloat","focused","placeholder","_placeholder","_required","disabled","_disabled","disable","enable","tel","errorState","ngOnDestroy","complete","stopMonitoring","onFocusIn","event","onFocusOut","nativeElement","contains","relatedTarget","onTouched","autoFocusNext","nextElement","focusVia","autoFocusPrev","prevElement","setDescribedByIds","controlElement","querySelector","setAttribute","join","onContainerClick","subscriberInput","exchangeInput","areaInput","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_handleInput","onlySelf","emitEvent","provide","useExisting","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}