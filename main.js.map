{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/sign-up/sign-up.component.ts","./src/app/authentication/sign-up/sign-up.component.html","./src/app/catch/gill-net-report/gill-net-report.component.ts","./src/app/catch/gill-net-report/gill-net-report.component.html","./src/app/catch/seine-report/seine-report.component.ts","./src/app/catch/seine-report/seine-report.component.html","./src/app/catch/troll-report/troll-report.component.ts","./src/app/catch/troll-report/troll-report.component.html","./src/app/data-models/catch-table-models/species-data.model.ts","./src/app/data-models/catch-table-models/table-rules.model.ts","./src/app/data-models/report-models/cancel-report.model.ts","./src/app/data-models/report-models/daily-catch-report.model.ts","./src/app/data-models/report-models/end-report.model.ts","./src/app/data-models/report-models/offload-report.model.ts","./src/app/data-models/report-models/pause-report.model.ts","./src/app/data-models/report-models/start-report.model.ts","./src/app/data-models/trip-models/gear-models/gear.model.ts","./src/app/data-models/trip-models/gear-models/net.model.ts","./src/app/data-models/trip-models/license-area.model.ts","./src/app/data-models/trip-models/trip.model.ts","./src/app/data-models/user-models/user-data.model.ts","./src/app/data-models/user-models/vessel-data.model.ts","./src/app/data-models/validator.model.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.html","./src/app/dialogs/add-species-dialog/add-species-dialog.component.ts","./src/app/dialogs/add-species-dialog/add-species-dialog.component.html","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.ts","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.html","./src/app/dialogs/contact-info-dialog/contact-info-dialog.component.ts","./src/app/dialogs/contact-info-dialog/contact-info-dialog.component.html","./src/app/dialogs/offload-table-dialog/offload-table-dialog.component.ts","./src/app/dialogs/offload-table-dialog/offload-table-dialog.component.html","./src/app/home/active-trip-home/active-trip-home.component.ts","./src/app/home/active-trip-home/active-trip-home.component.html","./src/app/home/no-trip-home/no-trip-home.component.ts","./src/app/home/no-trip-home/no-trip-home.component.html","./src/app/home/offload-home/offload-home.component.ts","./src/app/home/offload-home/offload-home.component.html","./src/app/material/material.module.ts","./src/app/menu-items/profile/profile.component.ts","./src/app/menu-items/profile/profile.component.html","./src/app/menu-items/records-page/records-page.component.ts","./src/app/menu-items/records-page/records-page.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/reports/cancel-report/cancel-report.component.ts","./src/app/reports/cancel-report/cancel-report.component.html","./src/app/reports/end-report/end-report.component.ts","./src/app/reports/end-report/end-report.component.html","./src/app/reports/offload-report/offload-report.component.ts","./src/app/reports/offload-report/offload-report.component.html","./src/app/reports/pause-report/pause-report.component.ts","./src/app/reports/pause-report/pause-report.component.html","./src/app/reports/start-report/start-report.component.ts","./src/app/reports/start-report/start-report.component.html","./src/app/reports/submitted-report/submitted-report.component.ts","./src/app/reports/submitted-report/submitted-report.component.html","./src/app/services/authentication.service.ts","./src/app/services/local-storage.service.ts","./src/app/tel-input/tel-input.component.ts","./src/app/tel-input/tel-input.component.html","./src/environments/environment.ts","./src/main.ts","ignored|C:\\Users\\KayaO\\source\\repos\\BCSRIF_ELog\\3506-pouchdb-redo\\node_modules\\immediate\\lib|./nextTick"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\r\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\r\nimport { ProfileComponent } from './menu-items/profile/profile.component';\r\nimport { RecordsPageComponent } from './menu-items/records-page/records-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'sign-up', component: SignUpComponent },\r\n  { path: 'start-report', component: StartReportComponent },\r\n  { path: 'end-report', component: EndReportComponent },\r\n  { path: 'pause-report', component: PauseReportComponent },\r\n  { path: 'cancel-report', component: CancelReportComponent },\r\n  { path: 'offload-report', component: OffloadReportComponent },\r\n  { path: 'submitted-report', component: SubmittedReportComponent },\r\n  { path: 'gill-net-report', component: GillNetReportComponent },\r\n  { path: 'seine-report', component: SeineReportComponent }, \r\n  { path: 'troll-report', component: TrollReportComponent },\r\n  { path: 'no-trip-home', component: NoTripHomeComponent },\r\n  { path: 'active-trip-home', component: ActiveTripHomeComponent },\r\n  { path: 'offload-home', component: OffloadHomeComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'records-page', component: RecordsPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title: string = 'bcsrif-elog';\r\n\r\n  constructor() {\r\n    LocalStorageService.openPouchDB();\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from '@auth0/auth0-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { AddVesselDialogComponent } from './dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { NgbTimepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddSpeciesDialogComponent } from './dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { OnlineStatusModule } from 'ngx-online-status';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { TelInputComponent } from './tel-input/tel-input.component';\r\nimport { environment as env } from '../environments/environment';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { AddNetDialogComponent } from './dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\r\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\r\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\nimport { RecordsPageComponent } from './menu-items/records-page/records-page.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ProfileComponent } from './menu-items/profile/profile.component';\r\nimport { OffloadTableDialogComponent } from './dialogs/offload-table-dialog/offload-table-dialog.component';\r\nimport { ContactInfoDialogComponent } from './dialogs/contact-info-dialog/contact-info-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AddVesselDialogComponent,\r\n    AddSpeciesDialogComponent,\r\n    SignUpComponent,\r\n    TelInputComponent,\r\n    PauseReportComponent,\r\n    CancelReportComponent,\r\n    SubmittedReportComponent,\r\n    StartReportComponent,\r\n    EndReportComponent,\r\n    GillNetReportComponent,\r\n    AddNetDialogComponent,\r\n    SeineReportComponent,\r\n    TrollReportComponent,\r\n    NoTripHomeComponent,\r\n    MenuComponent,\r\n    ActiveTripHomeComponent,\r\n    OffloadHomeComponent,\r\n    OffloadReportComponent,\r\n    ProfileComponent,\r\n    RecordsPageComponent,\r\n    OffloadTableDialogComponent,\r\n    ContactInfoDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MaterialModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OnlineStatusModule,\r\n    ToastrModule.forRoot(),\r\n    AppRoutingModule,\r\n    AuthModule.forRoot({\r\n      domain: env.auth0.domain,\r\n      clientId: env.auth0.clientId,\r\n      authorizationParams: {\r\n        redirect_uri: env.auth0.redirect_uri,\r\n        audience: env.auth0.audience\r\n      },\r\n      cacheLocation: 'localstorage'\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerImmediately'\r\n    }),\r\n    BrowserAnimationsModule,\r\n    NgbTimepickerModule\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // check online status\r\n  isOnline: boolean = false;\r\n  onlineStatus: string = '';\r\n  loginButton: string = '';\r\n\r\n  // form validator error messages\r\n  emailError: string = 'Required';\r\n\r\n  loginForm: UntypedFormGroup = new UntypedFormGroup({\r\n    email: new FormControl<string>('', [Validators.required, Validators.email])\r\n  });\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.isOnline = true;\r\n      this.onlineStatus = 'online';\r\n      this.loginButton = 'Login or Sign Up with Auth0';\r\n    }\r\n    else {\r\n      this.isOnline = false;\r\n      this.onlineStatus = 'offline';\r\n      this.loginButton = 'Login Offline';\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // email validation\r\n    this.loginForm.get('email')?.valueChanges.subscribe(() => {\r\n      let emailErrors: ValidationErrors | null | undefined = this.loginForm.get('email')?.errors;\r\n      if (emailErrors?.required) {\r\n        this.emailError = 'Required';\r\n      }\r\n      else if (emailErrors?.email) {\r\n        this.emailError = 'Invalid email format';\r\n      }\r\n      else {\r\n        this.emailError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // press the login button\r\n  attemptLogin(): void {\r\n\r\n    // attempt to login with the entered credentials\r\n    // solution from https://community.auth0.com/t/isauthenticated-is-always-false/84794/3\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n\r\n      // if went offline while on page, reload app\r\n      if (!this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (!authd) {\r\n          let query: string = window.location.search;\r\n          let shouldParseResult: boolean = query.includes(\"code=\") && query.includes(\"state=\");\r\n          if (shouldParseResult) {\r\n            try {\r\n              this.auth.handleRedirectCallback().subscribe((value) => {\r\n                console.log(\"Logged in!\", value);\r\n              });\r\n            } catch (err: unknown) {\r\n              console.log(\"Error parsing redirect:\", err);\r\n            }\r\n            window.history.replaceState({}, this.document.title, \"/\");\r\n          }\r\n          else {\r\n            this.auth.loginWithPopup().subscribe((value: void) => {\r\n              console.log(\"Logging in...\", value);\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error && error !== 'not_found') {\r\n                    this.toastr.error(error, \"Error\");\r\n                    return;\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.toastr.error(\"Please authenticate again\", \"User ID or Email not defined\");\r\n                    return;\r\n                  }\r\n                  let currHomepage: string = currUser.currHomepage;\r\n                  this.router.navigate([currHomepage]);\r\n                });\r\n              }\r\n              else {\r\n                this.toastr.error(\"Please authenticate again\", \"User ID or Email not defined\");\r\n              }\r\n            }\r\n            else {\r\n              this.toastr.error(\"User does not exist\", \"Something went wrong\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // offline login\r\n    else {\r\n\r\n      // if went online while on page, reload app\r\n      if (this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      if (this.loginForm.valid) {\r\n        let username: string = this.loginForm.get('email')?.value;\r\n        LocalStorageService.getUserOffline(username).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error && error !== 'not_found') {\r\n            this.toastr.error(error, \"Error\");\r\n            return;\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.toastr.error(\"User email not saved while online\", \"Invalid email\");\r\n            return;\r\n          }\r\n          let currHomepage: string = currUser.currHomepage;\r\n          this.router.navigate([currHomepage]);\r\n        });\r\n      }\r\n      else {\r\n        this.toastr.error(\"User email required\", \"Invalid form\");\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container login-container\">\r\n\r\n  <!-- Archipelago logo -->\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col login-image\">\r\n      <img src=\"../../../assets/images/archipelago-blue-email.png\"\r\n           class=\"center\"\r\n           width=\"300\" />\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Page title -->\r\n  <div class=\"row\">\r\n    <h1 class=\"login-title\">\r\n     Login\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h2 class=\"login-subtitle\">\r\n      You are currently {{onlineStatus}}\r\n    </h2>\r\n  </div>\r\n\r\n  <form [formGroup]=\"loginForm\"\r\n        *ngIf=\"!isOnline\"\r\n        class=\"row\">\r\n\r\n    <h6 class=\"blue-heading\">\r\n      Email\r\n    </h6>\r\n\r\n    <mat-form-field appearance=\"outline\"\r\n                    class=\"form-field\">\r\n      <mat-label>\r\n        Email\r\n      </mat-label>\r\n      <input matInput\r\n             required\r\n             formControlName=\"email\">\r\n      <mat-error>\r\n        {{emailError}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </form>\r\n\r\n  <div class=\"row justify-content-center\">\r\n    <button mat-flat-button\r\n            class=\"login-button\"\r\n            type=\"submit\"\r\n            (click)=\"attemptLogin()\">\r\n      {{loginButton}}\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { FormControl, UntypedFormGroup, Validators, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // get the current user details\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  // show error message when field is invalid\r\n  emailError: string = 'Required';\r\n  postalError: string = 'Required';\r\n\r\n  // disable all buttons when authenticating\r\n  sending: boolean = false;\r\n\r\n  // regular expression for Canadian postal code validation\r\n  // from https://stackoverflow.com/questions/15774555/efficient-regex-for-canadian-postal-code-function\r\n  postalRegex: RegExp = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\n  signupForm: UntypedFormGroup = new UntypedFormGroup({\r\n    firstName: new FormControl<string>('', [Validators.required]),\r\n    lastName: new FormControl<string>('', [Validators.required]),\r\n    contactEmail: new FormControl<string>('', [Validators.required, Validators.email]),\r\n    address: new FormControl<string>('', [Validators.required]),\r\n    city: new FormControl<string>('', [Validators.required]),\r\n    postalCode: new FormControl<string>('', [Validators.required, Validators.pattern(this.postalRegex)]),\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]),\r\n  });\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let contactEmail: AbstractControl<any, any> | null = this.signupForm.get('contactEmail');\r\n    let postalCode: AbstractControl<any, any> | null = this.signupForm.get('postalCode');\r\n\r\n    // contact email validation\r\n    contactEmail?.valueChanges.subscribe(() => {\r\n      let contactEmailErrors: ValidationErrors | null | undefined = contactEmail?.errors;\r\n      if (contactEmailErrors?.required) {\r\n        this.emailError = 'Required';\r\n      }\r\n      else if (contactEmailErrors?.email) {\r\n        this.emailError = 'Invalid format';\r\n      }\r\n      else {\r\n        this.emailError = '';\r\n      }\r\n    });\r\n\r\n    // postal code validation\r\n    postalCode?.valueChanges.subscribe(() => {\r\n      let postalCodeErrors: ValidationErrors | null | undefined = postalCode?.errors;\r\n      if (postalCodeErrors?.required) {\r\n        this.postalError = 'Required';\r\n      }\r\n      else if (postalCodeErrors?.pattern) {\r\n        this.postalError = 'Invalid format';\r\n      }\r\n      else {\r\n        this.postalError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // phone number validator\r\n  phoneNumValid(): boolean {\r\n    let phoneNum: Tel = this.signupForm.get('phoneNum')?.value;\r\n    let area: string = phoneNum.area;\r\n    let exchange: string = phoneNum.exchange;\r\n    let subscriber: string = phoneNum.subscriber;\r\n    return !!area && !!exchange && !!subscriber;\r\n  }\r\n\r\n  // go back to the login screen\r\n  backToLogin(): void {\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.toastr.error(\"Cannot log out while offline\", \"Logout failed\");\r\n      return;\r\n    }\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  // attempt to sign up for an account\r\n  attemptSignUp(): void {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.toastr.error(\"Cannot sign up while offline\", \"Sign up failed\");\r\n      return;\r\n    }\r\n\r\n    // verify phone number\r\n    this.telInput.touched = true;\r\n    this.telInput.stateChanges.next();\r\n    this.signupForm.get('phoneNum')?.updateValueAndValidity();\r\n\r\n    // check signup entry validity\r\n    if (this.signupForm.valid && this.phoneNumValid()) {\r\n\r\n      // navigate to the home screen\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  this.sending = true;\r\n                  this.userDetails = LocalStorageService.currUser;\r\n                  this.userDetails.firstName = this.signupForm.get('firstName')?.value;\r\n                  this.userDetails.lastName = this.signupForm.get('lastName')?.value;\r\n                  this.userDetails.contactEmail = this.signupForm.get('contactEmail')?.value;\r\n                  this.userDetails.address = this.signupForm.get('address')?.value;\r\n                  this.userDetails.city = this.signupForm.get('city')?.value;\r\n                  this.userDetails.postalCode = this.signupForm.get('postalCode')?.value;\r\n                  this.userDetails.phoneNum = this.signupForm.get('phoneNum')?.value;\r\n                  this.userDetails.currHomepage = 'no-trip-home';\r\n                  LocalStorageService.saveUser(this.userDetails).then(() => {\r\n                    this.sending = false;\r\n                    this.router.navigate([this.userDetails.currHomepage]);\r\n                  });\r\n                });\r\n              }\r\n              else {\r\n                this.toastr.error(\"Please authenticate again\", \"ID or Email not defined\");\r\n                this.authenticationService.logout();\r\n              }\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.authenticationService.logout();\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.authenticationService.logout();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.toastr.error(\"Missing information\", \"Sign up failed\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container sign-up-container\">\r\n\r\n  <!-- Archipelago logo -->\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col sign-up-image\">\r\n      <img src=\"../../../assets/images/archipelago-blue-email.png\" class=\"center\" width=\"300\" />\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Page title and logo -->\r\n  <div class=\"row\">\r\n    <h1 class=\"sign-up-title\">\r\n      Sign Up\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n\r\n    <!-- Sign up form -->\r\n    <form [formGroup]=\"signupForm\"\r\n          (ngSubmit)=\"attemptSignUp()\">\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-heading\">\r\n          First Name (as shown on fishing license)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            First Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"firstName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Last Name (as shown on fishing license)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Last Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"lastName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Contact Email\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Contact Email\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"contactEmail\">\r\n          <mat-error>\r\n            {{emailError}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Address\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Address\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"address\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          City\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            City\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"city\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Postal Code\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Postal Code\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"postalCode\">\r\n          <mat-error>\r\n            {{postalError}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"signupForm.invalid || !phoneNumValid()\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Sign Up to continue account creation -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-orange\"\r\n                    type=\"submit\"\r\n                    [disabled]=\"sending\">\r\n              <span>\r\n                Sign Up\r\n                <mat-icon>\r\n                  arrow_forward\r\n                </mat-icon>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Back to log in screen -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-blue\"\r\n                    type=\"button\"\r\n                    [disabled]=\"sending\"\r\n                    (click)=\"backToLogin()\">\r\n              <span>\r\n                <mat-icon>\r\n                  arrow_back\r\n                </mat-icon>\r\n                Return to Login (log out)\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { Net } from '../../data-models/trip-models/gear-models/net.model';\r\nimport { AddNetDialogComponent } from '../../dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { TableRules } from '../../data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from '../../data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gill-net-report',\r\n  templateUrl: './gill-net-report.component.html',\r\n  styleUrls: ['./gill-net-report.component.css']\r\n})\r\nexport class GillNetReportComponent {\r\n\r\n  // for updating the table\r\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n  fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n\r\n  // data preambles\r\n  catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species\r\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n  userNets: Net[] = [];\r\n  emptyNet: Net = new Net('', '', '', '', '', '', '', '', '');\r\n  gillNetTable: TableRules = new TableRules(); // used to filter table data\r\n\r\n  // values associated with each page\r\n  gillnetForm: UntypedFormGroup = new UntypedFormGroup({\r\n\r\n    net: new FormControl<Net>(this.emptyNet, [Validators.required]), //page 1\r\n    hoursFished: new FormControl<string>(''), //page 2\r\n\r\n    //page 3\r\n    mgmtArea: new FormControl<string>('', [Validators.required]),\r\n    zoneArea: new FormControl<string>(''),\r\n    numSets: new FormControl<string>(''),\r\n\r\n    //page 5\r\n    comments: new FormControl<string>(''), // conditional validation\r\n    nonFish: new FormControl<string>('', [Validators.required]) \r\n  });\r\n\r\n  catchDate: Date = new Date(); //page 2 \r\n  displayedColumns: string[] = []; // page 4\r\n\r\n\r\n  // section to section\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onNonFishChange();\r\n  }\r\n\r\n  onNonFishChange(): void {\r\n    this.gillnetForm.get('nonFish')?.valueChanges.subscribe((value: string) => {\r\n      const commentControl: AbstractControl<any, any> | null = this.gillnetForm.get('comments');\r\n\r\n      if(value === 'Yes'){\r\n        commentControl?.setValidators([Validators.required]);\r\n      }\r\n      else {\r\n        commentControl?.clearValidators();\r\n      }\r\n      commentControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    // get all required data\r\n    this.currTrip = this.userDetails.currTrip;\r\n    this.userNets = this.userDetails.nets;\r\n    this.unfilteredFishList = LocalStorageService.getSpeciesList();\r\n    this.gillNetTable = LocalStorageService.getTableRules('Gill Net');\r\n\r\n    this.filterTableData(); // filters table data as well as species list accessible to the user\r\n    this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n    // fill catch page details\r\n    let pages: number = 5; \r\n    this.numPages = pages;\r\n    this.spinnerIncrement = 100 / pages;\r\n\r\n\r\n    this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n\r\n    // go to first screen\r\n    this.toNextPage();\r\n  }\r\n\r\n  populateReport(): void {\r\n\r\n    // initialize form with net data\r\n    let currNet: Net = this.getSelectedNet();\r\n    this.gillnetForm.patchValue({\r\n      net: currNet\r\n    });\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.gillnetForm.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  filterTableData(): void {  // filters table data as well as species list accessible to the user\r\n    for(let species of this.unfilteredFishList) {\r\n      if(this.gillNetTable.containsSpecies.includes(species.speciesName)) {\r\n        this.fishListDetails.push(species);\r\n      }\r\n      if(!this.gillNetTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n    }\r\n  }\r\n\r\n  determineCellStyling(value: number, name: string = ''): string {\r\n\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } else if (this.isReleaseOnly(name)) { \r\n      return 'release-only-cell';\r\n    }\r\n\r\n    return 'faded-cell';\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.gillNetTable.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // get the currently selected net\r\n  getSelectedNet(): Net {\r\n    for (let net of this.userNets) {\r\n      if (net.isChecked) {\r\n        return net;\r\n      }\r\n    }\r\n    return this.userNets?.length ? this.userNets[0] : this.emptyNet;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected net in the catch report\r\n  setSelectedNet(currNet: Net): void {\r\n    for (let net of this.userNets) {\r\n      net.isChecked = (net.netName === currNet.netName);\r\n    }\r\n  }\r\n\r\n  // save the selected user nets for UI\r\n  saveUserNets(): void {\r\n    let currNet: Net = this.gillnetForm.get('net')?.value;\r\n    this.setSelectedNet(currNet);\r\n    this.gillnetForm.patchValue({\r\n      net: currNet\r\n    });\r\n  }\r\n\r\n  // go to the next page\r\n  toNextPage(): void {\r\n\r\n    // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n      this.saveUserNets();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        console.log(\"User data saved to PouchDB\");\r\n        this.incrementPage();\r\n      });\r\n    }\r\n\r\n    // page is final page\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // go forward a page, changing the current page number and the spinner progress\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // go back to previous page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.saveUserNets();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        console.log(\"User data saved to PouchDB\");\r\n        this.toHome();\r\n      });\r\n    }\r\n    else {\r\n      this.currPage--;\r\n      this.spinnerProgress -= this.spinnerIncrement;\r\n    }\r\n\r\n  }\r\n\r\n  // add a new net\r\n  addNetDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddNetDialogComponent, any> = this.dialog.open(AddNetDialogComponent, {\r\n      width: '500px',\r\n      height: '550px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected net as new net added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let net of this.userNets) { // un-check other nets\r\n            net.isChecked = false;\r\n          }\r\n          let newNet: Net = new Net(result.netType, result.netName, result.netLength, result.netDepth, result.netUnits,\r\n            result.hangRatio, result.meshSize, result.meshUnits, result.numMeshes, result.numStrands, true); \r\n           this.gillnetForm.patchValue({\r\n             net: newNet\r\n           });\r\n          this.userDetails.nets.push(newNet);\r\n\r\n          // updating PouchDB\r\n          LocalStorageService.saveUser(this.userDetails).then(() => {\r\n            console.log(\"User data saved to PouchDB\");\r\n            this.toNextPage();\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // update the specified species catch table\r\n  updateTable(): void {\r\n    this.table.renderRows();\r\n  }\r\n\r\n  calculateTotalFish(type: string): number {\r\n\r\n    let totalFish = 0;\r\n\r\n    if(type === 'kept'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].kept;\r\n      }\r\n    }else if(type === 'released'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].released;\r\n      }\r\n    }\r\n    return totalFish;\r\n  }\r\n\r\n  // get new species data from result\r\n  getNewSpecies(result: SpeciesData): SpeciesData {\r\n\r\n    let kept: number = result.kept ? +result.kept : 0;\r\n    let released: number = result.released ? +result.released : 0;\r\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n    newSpeciesData.kept = kept;\r\n    newSpeciesData.released = released;\r\n\r\n    return newSpeciesData;\r\n\r\n  }\r\n\r\n  // add new species to the catch\r\n  addSpecies(fishListDetails: SpeciesData[]): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // adding a species to the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails.push(this.getNewSpecies(result));\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // edit or delete a species from the catch\r\n  editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // editing a species in the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails[index] = this.getNewSpecies(result);\r\n        }\r\n\r\n        // delete a species in the catch\r\n        else {\r\n          fishListDetails.splice(index, 1);\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // add to, edit or delete from species catch list\r\n  addSpeciesDialog(index: number = -1): void {\r\n\r\n    // editing or deleting a species\r\n    if (index > -1) {\r\n          this.editSpecies(this.fishListDetails, index);\r\n      }\r\n\r\n    // adding a species\r\n    else {\r\n          this.addSpecies(this.fishListDetails);\r\n      }\r\n\r\n  }\r\n\r\n  // check if net value is invalid\r\n  netInvalid(): boolean {\r\n    let net: Net = this.gillnetForm.get('net')?.value;\r\n    return !net || !net.isValid();\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.gillnetForm.get('mgmtArea')?.errors?.required;\r\n  }\r\n\r\n  // check if non-fish selection value is invalid\r\n  nonFishInvalid(): boolean {\r\n    return this.gillnetForm.get('nonFish')?.errors?.required;\r\n  }\r\n\r\n  // send catch to DFO\r\n  sendToDFO(): void {\r\n\r\n    if (this.gillnetForm.valid && !this.netInvalid()) {\r\n      this.saveCatchReport();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        console.log(\"User data saved to PouchDB\");\r\n        this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n      });\r\n    }\r\n    else {\r\n      this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n    }\r\n  }\r\n\r\n  // back to home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n  // forbid non-numeric inputs\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.gillnetForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  // only allow one decimal place with 0 or 5 as the tenth digit\r\n  validateHoursFished(controlName: string): void {\r\n    let control: AbstractControl = this.gillnetForm.get(controlName)!;\r\n    const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n    if(!regex.test(control.value)){ // if we don't find a match\r\n      control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n    }\r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them \r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept > 0 || fish.released > 0) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n  // saves all Daily Catch Report information pertinent to Gill Net\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.netUsed = this.gillnetForm.get('net')?.value;\r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.gillnetForm.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.gillnetForm.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.gillnetForm.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.gillnetForm.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.gillnetForm.get('nonFish')?.value;\r\n    this.catchReport.comments = this.gillnetForm.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n    this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport);\r\n    this.userDetails.currTrip = this.currTrip;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Gill Net Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"gillnetForm\">\r\n  \r\n      <!-- Q1: Select or Add Net -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Which net did you use to fish?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <mat-radio-group class=\"radio\"\r\n                               formControlName=\"net\">\r\n                <mat-radio-button *ngFor=\"let net of userNets\"\r\n                                  [value]=\"net\"\r\n                                  [checked]=\"net.isChecked\">\r\n                  <h6 style=\"font-weight:bold\">\r\n                    <small class=\"text-muted text-small\">\r\n                      {{net}}\r\n                    </small>\r\n                  </h6>\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n  \r\n        <div class=\"row add-item\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <div class=\"row\">\r\n              <button mat-raised-button\r\n                      class=\"fishing-button-red\"\r\n                      type=\"button\"\r\n                      (click)=\"addNetDialog()\">\r\n                <span>\r\n                  Add New Net\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Q2 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 2\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q3: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 3\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"gillnetForm.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- may need to modify the data in sub area, or change the input to allow for multiple -->\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Subarea(s)\r\n            </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you make?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q4: Catch Table -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Kept\r\n            </th>\r\n              <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                  *matCellDef=\"let element\">\r\n              {{element.kept}}\r\n              </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n              <span>\r\n                Add New Species\r\n              </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q5: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 5\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"gillnetForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n\r\n        <h6 *ngIf=\"gillnetForm.get('nonFish')?.value === 'Yes'\"\r\n            class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"gillnetForm.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-label\">\r\n            <b>Net Used:</b>\r\n            <small *ngIf=\"!netInvalid()\"\r\n                   class=\"blue-label\">\r\n              {{gillnetForm.get('net')?.value}}\r\n            </small>\r\n            <small *ngIf=\"netInvalid()\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n          </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b>Hours Fished:</b>\r\n              <small class=\"blue-label\">\r\n                {{gillnetForm.get('hoursFished')?.value}}\r\n            </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!managementAreaInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{gillnetForm.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"managementAreaInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n              <small class=\"blue-label\">\r\n                {{gillnetForm.get('zoneArea')?.value}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small class=\"blue-label\">\r\n              {{gillnetForm.get('numSets')?.value}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!nonFishInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{gillnetForm.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"nonFishInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{gillnetForm.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"gillnetForm.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-seine-report',\r\n  templateUrl: './seine-report.component.html',\r\n  styleUrls: ['./seine-report.component.css']\r\n})\r\nexport class SeineReportComponent {\r\n\r\n   // for updating the table\r\n   @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n   responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n \r\n   fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n \r\n   // data preambles\r\n   catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n   currTrip: Trip = new Trip();\r\n   userDetails: UserData = new UserData('', '');\r\n   unfilteredFishList: SpeciesData[] = []; // temporary array to store species\r\n   fishList: SpeciesData[] = []; // filtered list of species data, will comprise the user's look-up list\r\n   seineTable: TableRules = new TableRules(); // used to filter table data\r\n \r\n   // values associated with each page\r\n   seineForm: UntypedFormGroup = new UntypedFormGroup({\r\n \r\n     hoursFished: new FormControl<string>(''), //page 1\r\n \r\n     //page 2\r\n     mgmtArea: new FormControl<string>('', [Validators.required]),\r\n     zoneArea: new FormControl<string>(''),\r\n     numSets: new FormControl<string>(''),\r\n \r\n     //page 4\r\n     comments: new FormControl<string>(''), // conditional validation\r\n     nonFish: new FormControl<string>('', [Validators.required]) \r\n   });\r\n \r\n   catchDate: Date = new Date(); //page 1 \r\n   displayedColumns: string[] = []; // page 3\r\n \r\n \r\n   // section to section\r\n   numPages: number = 0;\r\n   currPage: number = 0;\r\n   spinnerProgress: number = 0;\r\n   spinnerIncrement: number = 0;\r\n \r\n   constructor(\r\n     private dialog: MatDialog,\r\n     private auth: AuthService,\r\n     private router: Router,\r\n     private toastr: ToastrService,\r\n     private onlineStatusService: OnlineStatusService,\r\n     private authenticationService: AuthenticationService\r\n   ) {\r\n\r\n     if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n       let currUsername: string = LocalStorageService.getCurrUsername();\r\n       if (currUsername) {\r\n         LocalStorageService.getUserOffline(currUsername).then(() => {\r\n           let error: string = LocalStorageService.error;\r\n           if (error) {\r\n             this.authenticationService.userDataLogout(error);\r\n           }\r\n           let currUser: UserData = LocalStorageService.currUser;\r\n           if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n             this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n           }\r\n           else {\r\n             this.userDetails = currUser;\r\n             this.initialize();\r\n           }\r\n         });\r\n       }\r\n       else {\r\n         this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n       }\r\n     }\r\n\r\n     else {\r\n       this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n         if (authd) {\r\n           this.auth.user$.subscribe((user: User | null | undefined) => {\r\n             if (user) {\r\n               let id: string | undefined = user.sub;\r\n               let email: string | undefined = user.email;\r\n               if (id && email) {\r\n                 LocalStorageService.getUserOnline(id, email).then(() => {\r\n                   let error: string = LocalStorageService.error;\r\n                   if (error) {\r\n                     this.authenticationService.userDataLogout(error);\r\n                   }\r\n                   let currUser: UserData = LocalStorageService.currUser;\r\n                   if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                     this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                   }\r\n                   else {\r\n                     this.userDetails = currUser;\r\n                     this.initialize();\r\n                   }\r\n                 });\r\n               }\r\n               else {\r\n                 this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n               }\r\n             }\r\n             else {\r\n               this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n             }\r\n           });\r\n         }\r\n         else {\r\n           this.authenticationService.userDataLogout(\"Not authenticated\");\r\n         }\r\n       });\r\n     }\r\n \r\n   }\r\n \r\n   ngOnInit(): void {\r\n     this.onNonFishChange();\r\n   }\r\n \r\n   onNonFishChange(): void {\r\n     this.seineForm.get('nonFish')?.valueChanges.subscribe((value: string) => {\r\n       const commentControl: AbstractControl<any, any> | null = this.seineForm.get('comments');\r\n \r\n       if(value === 'Yes'){\r\n         commentControl?.setValidators([Validators.required]);\r\n       }else{\r\n         commentControl?.clearValidators();\r\n       }\r\n       commentControl?.updateValueAndValidity();\r\n     })\r\n   }\r\n \r\n   // initialize the data\r\n   initialize(): void {\r\n \r\n     // get all required data\r\n     this.currTrip = this.userDetails.currTrip;\r\n     this.unfilteredFishList = LocalStorageService.getSpeciesList();\r\n     this.seineTable = LocalStorageService.getTableRules('Seine');\r\n \r\n     this.filterTableData(); // filters table data as well as species list accessible to the user\r\n     this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n \r\n     // fill catch page details\r\n     let pages: number = 4; \r\n     this.numPages = pages;\r\n     this.spinnerIncrement = 100 / pages;\r\n \r\n \r\n     this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n \r\n     // go to first screen\r\n     this.toNextPage();\r\n   }\r\n\r\n   populateReport(): void {\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.seineForm.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n \r\n   filterTableData(): void{ // filters table data as well as species list accessible to the user\r\n     for(let species of this.unfilteredFishList){\r\n       if(this.seineTable.containsSpecies.includes(species.speciesName)){\r\n         this.fishListDetails.push(species);\r\n       }\r\n       if(!this.seineTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n     }\r\n   }\r\n\r\n  determineCellStyling(value: number): string {\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    }\r\n    return 'faded-cell';\r\n  }\r\n \r\n   // go to the next page\r\n   toNextPage(): void {\r\n \r\n     // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n       this.incrementPage();\r\n     }\r\n \r\n     // page is final page\r\n     else {\r\n       this.sendToDFO();\r\n     }\r\n \r\n   }\r\n \r\n   // go forward a page, changing the current page number and the spinner progress\r\n   incrementPage(): void {\r\n     this.currPage++;\r\n     this.spinnerProgress += this.spinnerIncrement;\r\n   }\r\n \r\n   // go back to previous page\r\n   toPreviousPage(): void {\r\n \r\n     if (this.currPage === 1) {\r\n       this.toHome();\r\n     }\r\n     else {\r\n       this.currPage--;\r\n       this.spinnerProgress -= this.spinnerIncrement;\r\n     }\r\n \r\n   }\r\n \r\n \r\n   // update the specified species catch table\r\n   updateTable(): void {\r\n     this.table.renderRows();\r\n   }\r\n \r\n   calculateTotalFish(type: string): number {\r\n \r\n     let totalFish = 0;\r\n \r\n     if(type === 'kept'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].kept;\r\n       }\r\n     }else if(type === 'released'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].released;\r\n       }\r\n     }\r\n     return totalFish;\r\n   }\r\n \r\n   // get new species data from result\r\n   getNewSpecies(result: SpeciesData): SpeciesData {\r\n \r\n     let kept: number = result.kept ? +result.kept : 0;\r\n     let released: number = result.released ? +result.released : 0;\r\n     let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n     newSpeciesData.kept = kept;\r\n     newSpeciesData.released = released;\r\n \r\n     return newSpeciesData;\r\n \r\n   }\r\n \r\n   // add new species to the catch\r\n   addSpecies(fishListDetails: SpeciesData[]): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // adding a species to the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails.push(this.getNewSpecies(result));\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // edit or delete a species from the catch\r\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // editing a species in the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails[index] = this.getNewSpecies(result);\r\n         }\r\n \r\n         // delete a species in the catch\r\n         else {\r\n           fishListDetails.splice(index, 1);\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n \r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // add to, edit or delete from species catch list\r\n   addSpeciesDialog(index: number = -1): void {\r\n \r\n     // editing or deleting a species\r\n     if (index > -1) {\r\n           this.editSpecies(this.fishListDetails, index);\r\n       }\r\n \r\n     // adding a species\r\n     else {\r\n           this.addSpecies(this.fishListDetails);\r\n       }\r\n \r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.seineForm.get('mgmtArea')?.errors?.required;\r\n  }\r\n\r\n  // check if non-fish selection value is invalid\r\n  nonFishInvalid(): boolean {\r\n    return this.seineForm.get('nonFish')?.errors?.required;\r\n  }\r\n \r\n   // send catch to DFO\r\n   sendToDFO(): void {\r\n     if (this.seineForm.valid) {\r\n       this.saveCatchReport();\r\n       LocalStorageService.saveUser(this.userDetails).then(() => {\r\n         console.log(\"User details saved to PouchDB\");\r\n         this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n       });\r\n     }\r\n     else {\r\n       this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n     }\r\n   }\r\n \r\n   // back to home screen\r\n   toHome(): void {\r\n     this.router.navigate(['active-trip-home']);\r\n   }\r\n\r\n  // only allow one decimal place with 0 or 5 as the tenth digit\r\n  validateHoursFished(controlName: string): void {\r\n    let control: AbstractControl = this.seineForm.get(controlName)!;\r\n    const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n    if (!regex.test(control.value)) { // if we don't find a match\r\n      control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n    }\r\n  }\r\n \r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.seineForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them\r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept > 0 || fish.released > 0) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n     // saves all Daily Catch Report information pertinent to Seine\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.seineForm.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.seineForm.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.seineForm.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.seineForm.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.seineForm.get('nonFish')?.value;\r\n    this.catchReport.comments = this.seineForm.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n    this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport); \r\n    this.userDetails.currTrip = this.currTrip;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Seine Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"seineForm\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"seineForm.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Subarea(s)\r\n            </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you make?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n              <span>\r\n                Add New Species\r\n              </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"seineForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"seineForm.get('nonFish')?.value === 'Yes'\"\r\n            class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"seineForm.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b>Hours Fished:</b>\r\n             <small class=\"blue-label\">\r\n               {{seineForm.get('hoursFished')?.value}}\r\n             </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!managementAreaInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{seineForm.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"managementAreaInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n                <small class=\"blue-label\">\r\n                  {{seineForm.get('zoneArea')?.value}}\r\n                </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small class=\"blue-label\">\r\n              {{seineForm.get('numSets')?.value}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!nonFishInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{seineForm.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"nonFishInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{seineForm.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"seineForm.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-troll-report',\r\n  templateUrl: './troll-report.component.html',\r\n  styleUrls: ['./troll-report.component.css']\r\n})\r\nexport class TrollReportComponent {\r\n\r\n     // for updating the table\r\n     @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n     //hardcoded values to be used in the form\r\n     responseOptions: string[] = ['Yes', 'No']; \r\n     stateOptions: string[] = ['Frozen (F)', 'Iced (I)'];\r\n   \r\n     fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n     trollTable: TableRules = new TableRules(); // used to filter table data\r\n  \r\n     // data preambles\r\n     catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n     currTrip: Trip = new Trip();\r\n     userDetails: UserData = new UserData('', '');\r\n     unfilteredFishList: SpeciesData[] = []; // temporary array to store species\r\n     fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n   \r\n     // values associated with each page\r\n     trollForm: UntypedFormGroup = new UntypedFormGroup({\r\n   \r\n       hoursFished: new FormControl<string>(''), //page 1\r\n   \r\n       //page 2\r\n       mgmtArea: new FormControl<string>('', [Validators.required]),\r\n       zoneArea: new FormControl<string>(''),\r\n       frozenOrIced: new FormControl<string>('', [Validators.required]),\r\n   \r\n       //page 4\r\n       comments: new FormControl<string>(''), // conditional validation\r\n       nonFish: new FormControl<string>('', [Validators.required]) \r\n     });\r\n   \r\n     catchDate: Date = new Date(); //page 1 \r\n     displayedColumns: string[] = []; // page 3\r\n   \r\n   \r\n     // section to section\r\n     numPages: number = 0;\r\n     currPage: number = 0;\r\n     spinnerProgress: number = 0;\r\n     spinnerIncrement: number = 0;\r\n   \r\n     constructor(\r\n       private dialog: MatDialog,\r\n       private auth: AuthService,\r\n       private router: Router,\r\n       private toastr: ToastrService,\r\n       private onlineStatusService: OnlineStatusService,\r\n       private authenticationService: AuthenticationService\r\n     ) {\r\n   \r\n       if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n         let currUsername: string = LocalStorageService.getCurrUsername();\r\n         if (currUsername) {\r\n           LocalStorageService.getUserOffline(currUsername).then(() => {\r\n             let error: string = LocalStorageService.error;\r\n             if (error) {\r\n               this.authenticationService.userDataLogout(error);\r\n             }\r\n             let currUser: UserData = LocalStorageService.currUser;\r\n             if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n               this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n             }\r\n             else {\r\n               this.userDetails = currUser;\r\n               this.initialize();\r\n             }\r\n           });\r\n         }\r\n         else {\r\n           this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n         }\r\n       }\r\n\r\n       else {\r\n         this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n           if (authd) {\r\n             this.auth.user$.subscribe((user: User | null | undefined) => {\r\n               if (user) {\r\n                 let id: string | undefined = user.sub;\r\n                 let email: string | undefined = user.email;\r\n                 if (id && email) {\r\n                   LocalStorageService.getUserOnline(id, email).then(() => {\r\n                     let error: string = LocalStorageService.error;\r\n                     if (error) {\r\n                       this.authenticationService.userDataLogout(error);\r\n                     }\r\n                     let currUser: UserData = LocalStorageService.currUser;\r\n                     if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                       this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                     }\r\n                     else {\r\n                       this.userDetails = currUser;\r\n                       this.initialize();\r\n                     }\r\n                   });\r\n                 }\r\n                 else {\r\n                   this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n                 }\r\n               }\r\n               else {\r\n                 this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n               }\r\n             });\r\n           }\r\n           else {\r\n             this.authenticationService.userDataLogout(\"Not authenticated\");\r\n           }\r\n         });\r\n       }\r\n   \r\n     }\r\n   \r\n     ngOnInit(): void {\r\n   \r\n       this.onNonFishChange();\r\n   \r\n     }\r\n   \r\n     onNonFishChange(): void {\r\n       this.trollForm.get('nonFish')?.valueChanges.subscribe((value: string) =>{\r\n         const commentControl: AbstractControl<any, any> | null = this.trollForm.get('comments');\r\n   \r\n         if(value === 'Yes'){\r\n           commentControl?.setValidators([Validators.required]);\r\n         }else{\r\n           commentControl?.clearValidators();\r\n         }\r\n         commentControl?.updateValueAndValidity();\r\n       })\r\n     }\r\n   \r\n     // initialize the data\r\n     initialize(): void {\r\n   \r\n       // get all required data\r\n       this.currTrip = this.userDetails.currTrip;\r\n       this.unfilteredFishList = LocalStorageService.getSpeciesList();\r\n       this.trollTable = LocalStorageService.getTableRules('Troll');\r\n   \r\n       this.filterTableData(); //gets data to fill the table (subset of fishList)\r\n       this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n   \r\n       // fill catch page details\r\n       let pages: number = 4; \r\n       this.numPages = pages;\r\n       this.spinnerIncrement = 100 / pages;\r\n   \r\n   \r\n       this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n   \r\n       // go to first screen\r\n       this.toNextPage();\r\n     }\r\n\r\n     populateReport(): void {\r\n\r\n      let numReports: number = this.currTrip.dailyCatchReports.length;\r\n      if (numReports > 0) {\r\n        let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n        this.trollForm.patchValue({ // fill report input fields\r\n          hoursFished: prevReport.hoursFished,\r\n          mgmtArea: prevReport.managementArea,\r\n          zoneArea: prevReport.subArea,\r\n          frozenOrIced: prevReport.frozenOrIced,\r\n          nonFish: prevReport.nonFish,\r\n          comments: prevReport.comments\r\n        });\r\n      }\r\n  \r\n    }\r\n   \r\n     filterTableData(): void { // filters table data as well as species list accessible to the user\r\n       for(let species of this.unfilteredFishList){\r\n         if(this.trollTable.containsSpecies.includes(species.speciesName)){\r\n           this.fishListDetails.push(species);\r\n         }\r\n         if(!this.trollTable.excludesSpecies.includes(species.speciesName)) {\r\n          this.fishList.push(species);\r\n        }\r\n       }\r\n     }\r\n\r\n     determineCellStyling(value: number, name: string = ''): string {\r\n\r\n      if(value>0){\r\n        return 'bolded-cell';\r\n      } else if (this.isReleaseOnly(name)) { \r\n        return 'release-only-cell';\r\n      }\r\n      return 'faded-cell';\r\n    }\r\n\r\n    isReleaseOnly(name: string): boolean {\r\n      if(this.trollTable.releaseOnlySpecies.includes(name)){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n   \r\n     // go to the next page\r\n     toNextPage(): void {\r\n   \r\n       // page does not contain date\r\n      if (this.currPage <= this.numPages) {\r\n         this.incrementPage();\r\n       }\r\n   \r\n       // page is final page\r\n       else {\r\n         this.sendToDFO();\r\n       }\r\n   \r\n     }\r\n   \r\n     // go forward a page, changing the current page number and the spinner progress\r\n     incrementPage(): void {\r\n       this.currPage++;\r\n       this.spinnerProgress += this.spinnerIncrement;\r\n     }\r\n   \r\n     // go back to previous page\r\n     toPreviousPage(): void {\r\n   \r\n       if (this.currPage === 1) {\r\n         this.toHome();\r\n       }\r\n       else {\r\n         this.currPage--;\r\n         this.spinnerProgress -= this.spinnerIncrement;\r\n       }\r\n   \r\n     }\r\n   \r\n   \r\n     // update the specified species catch table\r\n     updateTable(): void {\r\n       this.table.renderRows();\r\n     }\r\n   \r\n     calculateTotalFish(type: string): number {\r\n   \r\n       let totalFish = 0;\r\n   \r\n       if(type === 'kept'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].kept;\r\n         }\r\n       }else if(type === 'released'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].released;\r\n         }\r\n       }\r\n       return totalFish;\r\n     }\r\n   \r\n     // get new species data from result\r\n     getNewSpecies(result: SpeciesData): SpeciesData {\r\n   \r\n       let kept: number = result.kept ? +result.kept : 0;\r\n       let released: number = result.released ? +result.released : 0;\r\n       let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n       newSpeciesData.kept = kept;\r\n       newSpeciesData.released = released;\r\n   \r\n       return newSpeciesData;\r\n   \r\n     }\r\n   \r\n     // add new species to the catch\r\n     addSpecies(fishListDetails: SpeciesData[]): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // adding a species to the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails.push(this.getNewSpecies(result));\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // edit or delete a species from the catch\r\n     editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // editing a species in the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails[index] = this.getNewSpecies(result);\r\n           }\r\n   \r\n           // delete a species in the catch\r\n           else {\r\n             fishListDetails.splice(index, 1);\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n   \r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // add to, edit or delete from species catch list\r\n     addSpeciesDialog(index: number = -1): void {\r\n   \r\n       // editing or deleting a species\r\n       if (index > -1) {\r\n             this.editSpecies(this.fishListDetails, index);\r\n         }\r\n   \r\n       // adding a species\r\n       else {\r\n             this.addSpecies(this.fishListDetails);\r\n         }\r\n   \r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.trollForm.get('mgmtArea')?.errors?.required;\r\n  }\r\n\r\n  // check if frozen or iced selection value is invalid\r\n  frozenOrIcedInvalid(): boolean {\r\n    return this.trollForm.get('frozenOrIced')?.errors?.required;\r\n  }\r\n\r\n  // check if non-fish selection value is invalid\r\n  nonFishInvalid(): boolean {\r\n    return this.trollForm.get('nonFish')?.errors?.required;\r\n  }\r\n   \r\n     // send catch to DFO\r\n     sendToDFO(): void {\r\n       if (this.trollForm.valid) {\r\n         this.saveCatchReport();\r\n         LocalStorageService.saveUser(this.userDetails).then(() => {\r\n           console.log(\"User details saved to PouchDB\");\r\n           this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n         });\r\n       }\r\n       else {\r\n         this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n       }\r\n     }\r\n   \r\n     // back to home screen\r\n     toHome(): void {\r\n       this.router.navigate(['active-trip-home']);\r\n     }\r\n\r\n    // only allow one decimal place with 0 or 5 as the tenth digit\r\n    validateHoursFished(controlName: string): void {\r\n      let control: AbstractControl = this.trollForm.get(controlName)!;\r\n      const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n      if(!regex.test(control.value)){ // if we don't find a match\r\n        control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n      }\r\n    }\r\n   \r\n      // forbid field from entering non-decimal values\r\n      forbidNonNumeric(controlName: string): void {\r\n       let control: AbstractControl = this.trollForm.get(controlName)!;\r\n       control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n     }\r\n\r\n    // creates a list of all species in the table that have non-zero data associated with them \r\n    determineSpeciesData(): SpeciesData[] {\r\n\r\n      let tempFishArray: SpeciesData[] = [];\r\n\r\n      for(let fish of this.fishListDetails) {\r\n        if(fish.kept > 0 || fish.released > 0) {\r\n          tempFishArray.push(fish);\r\n        }\r\n      }\r\n      return tempFishArray;\r\n    }\r\n\r\n      // saves all Daily Catch Report information pertinent to Troll\r\n    saveCatchReport(): void {\r\n\r\n      // save relevant information gathered in the form\r\n      this.catchReport.dateFished = this.catchDate;\r\n      this.catchReport.hoursFished = this.trollForm.get('hoursFished')?.value;\r\n      this.catchReport.managementArea = this.trollForm.get('mgmtArea')?.value;\r\n      this.catchReport.subArea = this.trollForm.get('zoneArea')?.value;\r\n      this.catchReport.frozenOrIced = this.trollForm.get('frozenOrIced')?.value;\r\n      this.catchReport.nonFish = this.trollForm.get('nonFish')?.value;\r\n      this.catchReport.comments = this.trollForm.get('comments')?.value;\r\n      this.catchReport.speciesDataList = this.determineSpeciesData();\r\n      this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n      // push the report to currTrip\r\n      this.currTrip.dailyCatchReports.push(this.catchReport); \r\n      this.userDetails.currTrip = this.currTrip;\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Troll Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"trollForm\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"trollForm.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Zone(s) or Subarea(s) Fished <br>\r\n            (Use zones for areas 121-127; comma-separate if multiple)\r\n          </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n             <mat-label>\r\n               Zone(s) or Subarea(s)\r\n             </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Frozen or Iced?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Frozen or Iced \r\n            </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"frozenOrIced\">\r\n                  <mat-option *ngFor=\"let state of stateOptions\"\r\n                              [value]=\"state\">\r\n                    {{state}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"trollForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                class=\"heading-cell\">\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n              </h6>\r\n            <h6 style=\"color: #003F61\">\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n              <span>\r\n                Add New Species\r\n              </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\"\r\n                                style=\"padding-top: 15px;\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"nonFish\">\r\n                    <mat-option *ngFor=\"let response of responseOptions\"\r\n                                [value]=\"response\">\r\n                      {{response}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"trollForm.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"trollForm.get('nonFish')?.value === 'Yes'\"\r\n            class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"trollForm.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b>Hours Fished:</b>\r\n              <small class=\"blue-label\">\r\n                {{trollForm.get('hoursFished')?.value}}\r\n            </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!managementAreaInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{trollForm.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"managementAreaInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Zone(s) or Subarea(s) Fished:</b> \r\n              <small class=\"blue-label\">\r\n                {{trollForm.get('zoneArea')?.value}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Frozen or Iced?:</b>\r\n            <small *ngIf=\"!frozenOrIcedInvalid()\"\r\n                   class=\"blue-label\">\r\n              {{trollForm.get('frozenOrIced')?.value}}\r\n            </small>\r\n            <small *ngIf=\"frozenOrIcedInvalid()\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!nonFishInvalid()\"\r\n                     class=\"blue-label\">\r\n                {{trollForm.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"nonFishInvalid()\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{trollForm.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"trollForm.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","export class SpeciesData {\r\n\r\n  speciesName: string = '';\r\n\r\n  /* Fields for daily catch reports */\r\n\r\n  kept: number = 0;\r\n\r\n  released: number = 0;\r\n\r\n  /* Fields for offload catch reports */\r\n\r\n  offloadWeight: number = 0; // for seine reports only\r\n\r\n  offloadPieces: number = 0; \r\n\r\n  constructor(speciesName: string) {\r\n    this.speciesName = speciesName;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.speciesName;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.speciesName;\r\n  }\r\n\r\n}\r\n","export class TableRules {\r\n\r\n  tableType: string = '';\r\n\r\n  gearName: string = '';\r\n\r\n  containsSpecies: string[] = [];\r\n\r\n  excludesSpecies: string[] = [];\r\n\r\n  releaseOnlySpecies: string[] = [];\r\n\r\n  constructor(type: string = '', name: string = '') {\r\n      this.gearName = name;\r\n      this.tableType = type;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return !!this.gearName && this.containsSpecies.length > 0;\r\n  }\r\n\r\n}\r\n","export class CancelReport {\r\n\r\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\r\n\r\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isComplete: boolean = false; // has this report been submitted? \r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Cancel Date: ' + this.submissionDate + '; Confirmation Number: ' + this.confirmationNumber;\r\n    }\r\n}\r\n","import { Net } from \"../trip-models/gear-models/net.model\";\r\nimport { SpeciesData } from \"../catch-table-models/species-data.model\";\r\n\r\nexport class DailyCatchReport {\r\n\r\n    netUsed: Net = new Net('', '', '', '', '', '', '', '', ''); // unique to Gill Net\r\n\r\n    dateFished: Date = new Date();\r\n\r\n    hoursFished: string = '';\r\n\r\n    managementArea: string = '';\r\n\r\n    subArea: string = '';\r\n\r\n    numSets: string = ''; // unique to Gill Net & Seine\r\n\r\n    frozenOrIced: string = ''; // unique to Troll\r\n\r\n    speciesDataList: SpeciesData[] = []; // catch data\r\n\r\n    nonFish: string = '';\r\n\r\n    comments: string = ''; // only required if \"Yes\" answered for nonFish\r\n\r\n    confirmationNumber: string = ''; // daily catch report confirmation number (not being used yet)\r\n\r\n    submissionDate: Date = new Date(); \r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Date: ' + this.dateFished + '; Daily Catch Report Confirmation Number: ' + this.confirmationNumber;\r\n      }\r\n\r\n}\r\n","export class EndReport {\r\n\r\n    // if arrival details are required, this date will also contain an arrival time\r\n    endDate: Date = new Date(); // will be the same as in the trip model\r\n\r\n    managementArea: string = ''; \r\n\r\n    comments: string = ''; \r\n\r\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\r\n\r\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\r\n\r\n    /* Arrival Details - only needed for certain trips */\r\n\r\n    arrivalSite: string = ''; \r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isComplete: boolean = false; // has this report been submitted?\r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'End Date: ' + this.endDate + '; Confirmation Number: ' + this.confirmationNumber;\r\n    }\r\n\r\n}\r\n","import { SpeciesData } from \"../catch-table-models/species-data.model\";\r\n\r\nexport class OffloadReport {\r\n\r\n    offloadDate: Date = new Date(); // date and time provided by the user\r\n\r\n    fishSlip: string = ''; // yes/no answer\r\n\r\n    fishSlipNumber: string = ''; // may not always be provided\r\n\r\n    catchWeightUnits: string = ''; // only needed for Seine\r\n\r\n    speciesDataList: SpeciesData[] = []; // offload data - list of species and their associated weight/pieces\r\n\r\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\r\n\r\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Offload Date: ' + this.offloadDate + '; Confirmation Number: ' + this.confirmationNumber;\r\n    }\r\n\r\n}\r\n","export class PauseReport {\r\n\r\n    pauseDate: Date = new Date(); \r\n\r\n    managementArea: string = ''; \r\n\r\n    comments: string = ''; \r\n\r\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\r\n\r\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Pause Date: ' + this.pauseDate + '; Confirmation Number: ' + this.confirmationNumber;\r\n    }\r\n\r\n}\r\n","export class StartReport {\r\n\r\n    startDate: Date = new Date(); // same as start date in trip model\r\n\r\n    managementArea: string = ''; \r\n\r\n    comments: string = ''; \r\n\r\n    confirmationNumber: string = ''; // not currently used, will be the same as the trip ID\r\n\r\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isComplete: boolean = false; \r\n\r\n    isInProgress: boolean = false; \r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public isValid(): boolean {\r\n        return this.isComplete && this.managementArea != '';\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Start Date: ' + this.startDate + '; Confirmation Number: ' + this.confirmationNumber;\r\n    }\r\n\r\n\r\n}\r\n","export class Gear {\r\n\r\n  name: string = '';\r\n\r\n  logbookID: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(name: string = '', id: string = '', checked: boolean = false) {\r\n    this.name = name;\r\n    this.logbookID = id;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.name + ' (Logbook #' + this.logbookID + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.name && !!this.logbookID;\r\n  }\r\n\r\n  public isEqual(inputGear: Gear): boolean {\r\n     return inputGear.logbookID === this.logbookID;\r\n  }\r\n\r\n}\r\n","export class Net {\r\n\r\n  netType: string = ''; // will be either Alaska Twist, Multi Strand, or Comibination\r\n\r\n  netName: string = ''; // will only be for the skipper's reference\r\n\r\n  length: string = '';\r\n\r\n  weedlineDepth: string = '';\r\n\r\n  weedlineDepthUnits: string = '';\r\n\r\n  hangRatio: string = '';\r\n\r\n  meshSize: string = '';\r\n\r\n  meshSizeUnits: string = '';\r\n\r\n  numMeshes: string = '';\r\n\r\n  numStrands: string = ''; //only needed for Alaska Twist\r\n\r\n  isChecked: boolean = false; \r\n\r\n  constructor(type: string, name: string, length: string,\r\n      depth: string, depthUnits: string, ratio: string, mesh: string, \r\n      meshUnits: string, numMeshes: string, strands: string = '', checked: boolean = false){\r\n\r\n      this.netType = type;\r\n      this.netName = name;\r\n      this.length = length;\r\n      this.weedlineDepth = depth;\r\n      this.weedlineDepthUnits = depthUnits;\r\n      this.hangRatio = ratio;\r\n      this.meshSize = mesh;\r\n      this.meshSizeUnits = meshUnits;\r\n      this.numMeshes = numMeshes;\r\n      this.numStrands = strands;\r\n      this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n      return this.netName + ' (' + this.netType + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n\r\n    let baseValid: boolean = !(!this.netName || !this.length || !this.weedlineDepth || !this.weedlineDepthUnits ||\r\n      !this.hangRatio || !this.meshSize || !this.meshSizeUnits || !this.numMeshes);\r\n\r\n    if (this.netType === \"Alaska Twist\") { // requires numStrands to be set\r\n        return baseValid && !!this.numStrands;\r\n    }\r\n    else if (this.netType) { // does not require a value for numStrands\r\n        return baseValid;\r\n    }\r\n\r\n    return false; \r\n\r\n  }\r\n    \r\n}\r\n","export class LicenseArea {\r\n\r\n  licenseID: string = '';\r\n\r\n  licenseName: string = '';\r\n\r\n  licenseLocation: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(licenseName: string = '', licenseLocation: string = '', isChecked: boolean = false) {\r\n    this.licenseName = licenseName;\r\n    this.licenseLocation = licenseLocation;\r\n    this.isChecked = isChecked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.licenseName + ' (' + this.licenseLocation + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.licenseName && !!this.licenseLocation;\r\n  }\r\n\r\n  public isEqual(inputArea: LicenseArea): boolean {\r\n    return inputArea.licenseName === this.licenseName;\r\n  }\r\n\r\n}\r\n","import { Gear } from './gear-models/gear.model';\r\nimport { VesselData } from '../user-models/vessel-data.model';\r\nimport { LicenseArea } from './license-area.model';\r\nimport { Tel } from '../../tel-input/tel-input.component';\r\nimport { DailyCatchReport } from '../report-models/daily-catch-report.model';\r\nimport { StartReport } from '../report-models/start-report.model';\r\nimport { EndReport } from '../report-models/end-report.model';\r\nimport { PauseReport } from '../report-models/pause-report.model';\r\nimport { CancelReport } from '../report-models/cancel-report.model';\r\nimport { OffloadReport } from '../report-models/offload-report.model';\r\n\r\nexport class Trip {\r\n\r\n  /* General Trip Data */\r\n\r\n  gear: Gear = new Gear('', '');\r\n\r\n  vessel: VesselData = new VesselData('', '');\r\n\r\n  licenseArea: LicenseArea = new LicenseArea('', '');\r\n\r\n  master: string = '';\r\n\r\n  fin: string = '';\r\n\r\n  contactName: string = ''; // contact name\r\n\r\n  phoneNum: Tel = new Tel('', '', ''); // contact phone number\r\n\r\n  tripID: string = '123456'; // hardcoded for now, will eventually generate unique ones\r\n\r\n  /* Flags for programmatical use */\r\n\r\n  offloadNeeded: boolean = false; // used to determine if the current trip may require an offload report\r\n\r\n  isSaved: boolean = false; // used to determine whether the report has been saved to the user's prevTrips array\r\n\r\n  /* Fishing Report Data */\r\n\r\n  startFishingReport: StartReport = new StartReport();\r\n\r\n  endFishingReport: EndReport = new EndReport();\r\n\r\n  cancelFishingReport: CancelReport = new CancelReport();\r\n\r\n  pauseFishingReports: PauseReport[] = []; // array of all pause reports submitted for the trip\r\n\r\n  dailyCatchReports: DailyCatchReport[] = []; // array of all daily catch reports submitted for the trip\r\n\r\n  offloadReports: OffloadReport[] = [];  // array of all offload reports submitted for the trip\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public toString(): string {\r\n    return 'Gear: ' + this.gear + '; Vessel: ' + this.vessel + '; License Area: ' + this.licenseArea;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.gear.isValid() && this.vessel.isValid() && this.licenseArea.isValid();\r\n  }\r\n\r\n}\r\n","import { VesselData } from './vessel-data.model';\r\nimport { Trip } from '../trip-models/trip.model';\r\nimport { Net } from '../trip-models/gear-models/net.model';\r\nimport { Gear } from '../trip-models/gear-models/gear.model';\r\nimport { Tel } from '../../tel-input/tel-input.component';\r\n\r\nexport class UserData {\r\n\r\n  // Auth0 ID\r\n  userID: string = '';\r\n\r\n  // Email for signup\r\n  userEmail: string = '';\r\n\r\n  firstName: string = '';\r\n\r\n  lastName: string = '';\r\n\r\n  contactEmail: string = '';\r\n\r\n  address: string = '';\r\n\r\n  city: string = '';\r\n\r\n  postalCode: string = '';\r\n\r\n  phoneNum: Tel = new Tel('', '', '');\r\n\r\n  // current homepage\r\n  currHomepage: string = '';\r\n\r\n  // saved user trips\r\n  prevTrips: Trip[] = [];\r\n\r\n  // saved user vessels\r\n  vessels: VesselData[] = [];\r\n\r\n  // current trip \r\n  currTrip: Trip = new Trip();\r\n\r\n  // saved nets\r\n  nets: Net[] = [];\r\n\r\n  // purchased gear logbooks\r\n  gears: Gear[] = [];\r\n\r\n  constructor(id: string, email: string) {\r\n    this.userID = id;\r\n    this.userEmail = email;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.userEmail + ', ' + this.userID;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.userID && !!this.userEmail;\r\n  }\r\n\r\n}\r\n","export class VesselData {\r\n\r\n    // Unique identifier for this vessel\r\n    vesselID: string = '';\r\n\r\n  // Name for this vessel\r\n    vesselName: string = '';\r\n\r\n  // Vessel coast number for this vessel (not sure if vesselCoastNumber is the best name for CFV/VRN - may change later)\r\n    vesselCoastNumber: string = '';\r\n\r\n  // Whether or not the vessel is recognized\r\n  isRecognized: boolean = false;\r\n\r\n  // Whether or not the vessel is checked in a list\r\n  isChecked: boolean = false;\r\n\r\n  constructor(vname: string = '', vcoastNum: string = '', checked: boolean = false) {\r\n    this.vesselName = vname;\r\n    this.vesselCoastNumber = vcoastNum;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n      return this.vesselName + ' (VRN: ' + this.vesselCoastNumber + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return !!this.vesselName && !!this.vesselCoastNumber;\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\nexport class Validator {\r\n\r\n}\r\n\r\n// validator for general values\r\nexport function generalValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    return !!control.value && control.valid ? null : { invalid: true };\r\n  }\r\n}\r\n\r\n// choosing a species from a species list\r\nexport function speciesValidator(speciesList: string[]): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    for (let species of speciesList) {\r\n      if (control.value.toLowerCase() === species.toLowerCase()) {\r\n        return null;\r\n      }\r\n    }\r\n    return { value: { error: 'Invalid species' } };\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Net } from 'src/app/data-models/trip-models/gear-models/net.model';\r\n\r\n@Component({\r\n  selector: 'app-add-net-dialog',\r\n  templateUrl: './add-net-dialog.component.html',\r\n  styleUrls: ['./add-net-dialog.component.css']\r\n})\r\nexport class AddNetDialogComponent {\r\n\r\n  //data preambles\r\n  netTypes: string[] = []; // holds net type values\r\n  unitTypes: string[] = ['cm', 'in', 'mm']; //hardcoded values to be used in the form\r\n\r\n  dialogReturn: Net = new Net('', '', '', '', '', '', '', '', '');\r\n\r\n  netForm: UntypedFormGroup = new UntypedFormGroup({\r\n    netType: new FormControl<string>('', [Validators.required]),\r\n    numStrands: new FormControl<string>(''), // conditional validation\r\n    netName: new FormControl<string>('', [Validators.required]), \r\n    netLength: new FormControl<string>('', [Validators.required]), \r\n    netDepth: new FormControl<string>('', [Validators.required]), \r\n    netUnits: new FormControl<string>('', [Validators.required]), \r\n    hangRatio: new FormControl<string>('', [Validators.required]), \r\n    meshSize: new FormControl<string>('', [Validators.required]), \r\n    meshUnits: new FormControl<string>('', [Validators.required]), \r\n    numMeshes: new FormControl<string>('', [Validators.required]) \r\n  })\r\n  \r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddNetDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Net) { // don't need injection right now, but leave in for the future possibility of editing the net\r\n\r\n       this.netTypes = LocalStorageService.getNetTypes(); // retrieve net types\r\n\r\n  }\r\n\r\n  netTypeVal(): string { // returns the net type the user has selected\r\n    return this.netForm.get('netType')?.value;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.onNetTypeChange();\r\n  }\r\n\r\n  onNetTypeChange(): void {\r\n    this.netForm.get('netType')?.valueChanges.subscribe((value: string) => {\r\n      const strandControl: AbstractControl<any, any> | null = this.netForm.get('numStrands');\r\n\r\n      if(value === 'Alaska Twist'){\r\n        strandControl?.setValidators([Validators.required]);\r\n      }else{\r\n        strandControl?.clearValidators();\r\n      }\r\n      strandControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  addNet() { \r\n    if (this.netForm.valid) {\r\n      this.clearInputs();\r\n      this.dialogRef.close(this.netForm.value); // return the filled-in values of the form field\r\n    } else {\r\n      this.netForm.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n\r\n  deleteNet(): void { \r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // reset any dead form inputs\r\n  clearInputs(): void {\r\n    if(this.netTypeVal() != 'Alaska Twist'){ // if other gear type, clear any possible input in numStrands\r\n      this.netForm.controls['numStrands'].reset();\r\n    }\r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.netForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: bold;\">Add Net</h3>\r\n\r\n    <!-- FORM QUESTIONS -->\r\n\r\n    <form [formGroup]=\"netForm\">\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Name (for your reference only)\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Net Name</mat-label>\r\n              <input matInput formControlName=\"netName\" required>\r\n              <mat-error *ngIf=\"netForm.invalid\">\r\n                Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Type\r\n            </h6>\r\n             <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"netType\">\r\n                  <mat-option *ngFor=\"let net of netTypes\"\r\n                              [value]=\"net\">\r\n                    {{net}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"netForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n\r\n    \r\n            <div *ngIf=\"netTypeVal() === 'Alaska Twist'\"\r\n                class=\"container\">\r\n                <h6 class=\"net-small-header\">\r\n                    Number of Strands \r\n                    </h6>\r\n                <mat-form-field appearance=\"fill\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Number of Strands\r\n                    </mat-label>\r\n                    <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numStrands\"\r\n                        (input)=\"forbidNonNumeric('numStrands')\">\r\n                    <mat-error *ngIf=\"netForm.invalid\">\r\n                      Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Length (in fathoms)\r\n            </h6>\r\n             <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Length\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"netLength\"\r\n                        (input)=\"forbidNonNumeric('netLength')\">\r\n                <mat-error *ngIf=\"netForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Weedline Depth\r\n                </h6>\r\n                <mat-form-field appearance=\"fill\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Depth\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"netDepth\"\r\n                            (input)=\"forbidNonNumeric('netDepth')\">\r\n                    <mat-error *ngIf=\"netForm.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Weedline Depth Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"fill\"\r\n                                class=\"form-field\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"netUnits\">\r\n                    <mat-option *ngFor=\"let unit of unitTypes\"\r\n                                [value]=\"unit\">\r\n                      {{unit}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"netForm.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Hang Ratio ( :1)\r\n            </h6>\r\n             <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Hang Ratio\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"hangRatio\"\r\n                        (input)=\"forbidNonNumeric('hangRatio')\">\r\n                <mat-error *ngIf=\"netForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Mesh Size\r\n                </h6>\r\n                <mat-form-field appearance=\"fill\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Mesh Size\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"meshSize\"\r\n                            (input)=\"forbidNonNumeric('meshSize')\">\r\n                    <mat-error *ngIf=\"netForm.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Mesh Size Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"meshUnits\">\r\n                  <mat-option *ngFor=\"let unit of unitTypes\"\r\n                              [value]=\"unit\">\r\n                    {{unit}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"netForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Number of Meshes\r\n            </h6>\r\n             <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Number of Meshes\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numMeshes\"\r\n                        (input)=\"forbidNonNumeric('numMeshes')\">\r\n                <mat-error *ngIf=\"netForm.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n    </form>\r\n\r\n\r\n    <!-- BACK & ADD BUTTONS -->\r\n    \r\n    <div class=\"row\">\r\n\r\n      <div class=\"outer\">\r\n\r\n          <div class=\"inner\" style=\"margin-right: 40%\">\r\n              <button mat-stroked-button\r\n                      type=\"button\"\r\n                      aria-label=\"Back\"\r\n                      style=\"background-color: #005d87; color: white; font-weight: bold;\"\r\n                      (click)=\"deleteNet()\">\r\n                  Back\r\n              </button>    \r\n          </div>\r\n\r\n\r\n          <div class=\"inner\">\r\n              <button mat-stroked-button\r\n                      type=\"submit\"\r\n                      aria-label=\"Add Net\"\r\n                      style=\"background-color: #ff6f61; color: white; font-weight: bold;\"\r\n                      (click)=\"addNet()\">\r\n                  Add\r\n              </button>                \r\n          </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { AbstractControl, FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { speciesValidator } from '../../data-models/validator.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\n\r\n@Component({\r\n  selector: 'app-add-species-dialog',\r\n  templateUrl: './add-species-dialog.component.html',\r\n  styleUrls: ['./add-species-dialog.component.css']\r\n})\r\n\r\nexport class AddSpeciesDialogComponent {\r\n\r\n  // used to determine if the species name can be edited\r\n  speciesIsReadOnly: boolean = false;\r\n\r\n  // species lists\r\n  stringList: string[] = []; // subset of \"list\" - has all species names (used only for validation)\r\n  speciesList: string[] = []; \r\n  filteredSpecies: string[] = []; //what's already in table\r\n  currentSpeciesList: string[] = [];\r\n\r\n  // dialog title\r\n  displayedTitle: string = '';\r\n\r\n  // extracting data from data inject\r\n  identifier: string = '';\r\n  currentFishList: SpeciesData[] = [];\r\n  filteredFishList: SpeciesData[] = [];\r\n  tableInfo: TableRules = new TableRules('', '');\r\n\r\n  // species details\r\n  speciesForm: UntypedFormGroup = new UntypedFormGroup({\r\n    speciesName: new FormControl<string>('', [Validators.required, speciesValidator(this.stringList)]),\r\n    kept: new FormControl<string>(''),\r\n    released: new FormControl<string>(''),\r\n    offloadWeight: new FormControl<string>(''),\r\n    offloadPieces: new FormControl<string>('')\r\n  })\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddSpeciesDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { identifier: string, species: SpeciesData, currentFishList: SpeciesData[], \r\n      filteredFishList: SpeciesData[], tableInfo: TableRules }\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    // if editing a species, autofill form with species details\r\n    if (this.data != null) {\r\n\r\n      this.identifier = this.data.identifier;\r\n      this.currentFishList = this.data.currentFishList;\r\n      this.filteredFishList = this.data.filteredFishList;\r\n      this.tableInfo = this.data.tableInfo;\r\n\r\n      if (this.data.species != null) {\r\n        let speciesData: SpeciesData = this.data.species;\r\n        this.speciesForm.patchValue({\r\n          speciesName: speciesData.speciesName,\r\n          kept: speciesData.kept,\r\n          released: speciesData.released,\r\n          offloadWeight: speciesData.offloadWeight,\r\n          offloadPieces: speciesData.offloadPieces\r\n        });\r\n      }\r\n    }\r\n\r\n    // fill the species list available to the user\r\n    this.fillSpecies();\r\n\r\n    // set the dialog configuration\r\n    this.setDialogConfig();\r\n\r\n    // change the filtered species list whenever the input field changes\r\n    this.speciesForm.get('speciesName')!.valueChanges.subscribe((speciesChange: string) => {\r\n      this.filteredSpecies = [];\r\n      for (let species of this.speciesList) {\r\n        if (species.toLowerCase().includes(speciesChange.toLowerCase())) {\r\n          this.filteredSpecies.push(species);\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // set the title of the dialog and read/write permissions of inputs\r\n  setDialogConfig(): void {\r\n     // set config based on whether the species is being added or edited\r\n     switch (this.identifier) {\r\n      case 'edit':\r\n        this.displayedTitle = \"Edit Species\";\r\n        this.speciesIsReadOnly = true;\r\n        break;\r\n      case 'add':\r\n         this.displayedTitle = \"Add Species\";\r\n         break;\r\n    }\r\n  }\r\n\r\n  // fill up the species list based on what is not already in the table\r\n  fillSpecies(): void { // list of species gets passed in here\r\n    for(let species of this.currentFishList) { // get all species names that are already in the table\r\n      this.currentSpeciesList.push(species.speciesName);\r\n    } \r\n    for (let species of this.filteredFishList) {\r\n      //only add the name to the list if it is not already in the table \r\n      if(!this.currentSpeciesList.includes(species.speciesName)) {\r\n        this.speciesList.push(species.speciesName); \r\n      }\r\n      this.stringList.push(species.speciesName); // fill the string list regardless\r\n    }\r\n    // fill the filtered list\r\n    this.filteredSpecies = this.speciesList;\r\n  }\r\n\r\n  // check if entered species is a valid species\r\n  checkSpecies(name: string): boolean {\r\n    for (let species of this.filteredFishList) {\r\n      if (species.speciesName.toLowerCase().includes(name.toLowerCase())) {\r\n        this.speciesForm.patchValue({\r\n          speciesName: species.speciesName,\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.tableInfo.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCurrentFormSpecies(): string {\r\n    return this.speciesForm.get('speciesName')?.value;\r\n  }\r\n\r\n  // add new species details\r\n  addSpecies(): void {\r\n    if (this.speciesForm.valid && this.checkSpecies(this.speciesForm.get('speciesName')!.value)) {\r\n      this.clearInputs(); \r\n      this.dialogRef.close(this.speciesForm.value);\r\n    } else {\r\n      this.speciesForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  // clear any possible dead form inputs\r\n  clearInputs(): void {\r\n    if(this.isReleaseOnly(this.getCurrentFormSpecies())){ // if species is release-only, clear any possible previous 'kept' input\r\n      this.speciesForm.controls['kept'].reset(); // reset form value\r\n    }\r\n  }\r\n\r\n  // delete current species details\r\n  deleteSpecies(): void {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.speciesForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container species-container\">\r\n\r\n  <h3 class=\"display-6 species-header\"\r\n      align=\"center\">\r\n    {{displayedTitle}}\r\n  </h3>\r\n\r\n  <form [formGroup]=\"speciesForm\">\r\n\r\n    <!-- Select species name -->\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Species Name\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Species\r\n        </mat-label>\r\n        <input matInput\r\n               required\r\n               formControlName=\"speciesName\"\r\n               [matAutocomplete]=\"auto\"\r\n               [readonly]=\"speciesIsReadOnly\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let fSpecies of filteredSpecies\"\r\n                      [value]=\"fSpecies\">\r\n            {{fSpecies}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-error *ngIf=\"speciesForm.invalid\">\r\n          Select an item\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Daily Catch Report Fields -->\r\n\r\n    <div *ngIf=\"tableInfo.tableType === 'daily-catch'\">\r\n\r\n      <!-- Kept Catch -->\r\n      <div *ngIf=\"!isReleaseOnly(getCurrentFormSpecies())\"\r\n           class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Kept\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Kept\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"kept\"\r\n                (input)=\"forbidNonNumeric('kept')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <!-- Released Catch -->\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Released\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Released\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"released\"\r\n                (input)=\"forbidNonNumeric('released')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n  </div>\r\n\r\n  <!-- Offload Catch Report Fields -->\r\n\r\n  <div *ngIf=\"tableInfo.tableType === 'offload-catch'\">\r\n\r\n    <!-- Weight (Seine only) -->\r\n\r\n    <div *ngIf=\"tableInfo.gearName === 'Seine'\"\r\n         class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Weight\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Weight\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadWeight\"\r\n              (input)=\"forbidNonNumeric('offloadWeight')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Pieces -->\r\n\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Pieces\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Pieces\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadPieces\"\r\n              (input)=\"forbidNonNumeric('offloadPieces')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  </form>\r\n\r\n  <!-- Release-only species descriptive text -->\r\n\r\n  <div *ngIf=\"isReleaseOnly(getCurrentFormSpecies())\" class=\"row\">\r\n\r\n    <h6 class=\"species-small-header\">\r\n      This species is non-retainable.\r\n    </h6>\r\n\r\n  </div>\r\n\r\n  <!-- Add & Delete Buttons -->\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"outer\">\r\n\r\n      <div class=\"inner\" style=\"margin-right: 40%\">\r\n        <button mat-stroked-button\r\n                class=\"button-delete\"\r\n                type=\"button\"\r\n                aria-label=\"Delete\"\r\n                (click)=\"deleteSpecies()\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"inner\">\r\n        <button mat-stroked-button\r\n                class=\"button-add\"\r\n                type=\"submit\"\r\n                align=\"end\"\r\n                aria-label=\"Add Species\"\r\n                (click)=\"addSpecies()\">\r\n          Confirm\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\n\r\n@Component({\r\n  selector: 'app-add-vessel-dialog',\r\n  templateUrl: './add-vessel-dialog.component.html',\r\n  styleUrls: ['./add-vessel-dialog.component.css']\r\n})\r\nexport class AddVesselDialogComponent implements OnInit {\r\n\r\n  dialogReturn: VesselData = new VesselData('', '');\r\n\r\n  vesselForm: UntypedFormGroup = new UntypedFormGroup({\r\n    vesselName: new FormControl<string>('', [Validators.required, Validators.pattern('^[A-z0-9 ]+$')]),\r\n    vesselNumber: new FormControl<string>('', [Validators.required, Validators.pattern('^([0-9]{6}|[A-z0-9]{7,8})$')])\r\n  })\r\n  \r\n  constructor(public dialogRef: MatDialogRef<AddVesselDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: VesselData) { // at the moment we don't need to inject data (leave in for the possibility of editing vessels later)\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if (this.data) {\r\n      this.vesselForm.patchValue({ // this doesn't do anything at the moment - but may need later for editing vessels\r\n        vesselName: this.data.vesselName,\r\n        vesselNumber: this.data.vesselCoastNumber\r\n      });\r\n    }\r\n  }\r\n\r\n  addVessel() {\r\n    if (this.vesselForm.valid) {\r\n      this.dialogRef.close(this.vesselForm.value);\r\n    } else {\r\n      this.vesselForm.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n  deleteVessel() {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\"\r\n        align=\"center\"\r\n        style=\"padding-top: 10px; color: #005d87; font-weight: bold;\">\r\n      Add Vessel\r\n  </h3>\r\n\r\n    <form [formGroup]=\"vesselForm\">\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"vessel-small-header\">\r\n          Vessel Name\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Vessel Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"vesselName\">\r\n          <mat-error *ngIf=\"vesselForm.get('vesselName')?.errors?.required\">\r\n            Required\r\n          </mat-error>\r\n          <mat-error *ngIf=\"vesselForm.get('vesselName')?.errors?.pattern\">\r\n            Invalid character\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    \r\n      <div class=\"row\" style=\"padding-top: 15px;\">\r\n        <h6 class=\"vessel-small-header\">\r\n          VRN (CFV#)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            VRN\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"vesselNumber\">\r\n          <mat-error *ngIf=\"vesselForm.invalid\">\r\n            Invalid - 6 digit numeric or 7-8 digit alphanumeric required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    </form>\r\n\r\n  <!-- Back and Add buttons -->\r\n    <div class=\"row bottom-buttons\">\r\n\r\n      <div class=\"outer\">\r\n\r\n        <div class=\"inner\" style=\"margin-right: 50%\">\r\n            <button mat-stroked-button\r\n                    type=\"button\"\r\n                    aria-label=\"Back\"\r\n                    style=\"background-color: #005d87; color: white; font-weight: bold;\"\r\n                    (click)=\"deleteVessel()\">\r\n                Back\r\n            </button>    \r\n        </div>\r\n\r\n        <div class=\"inner\">\r\n            <button mat-stroked-button\r\n                    type=\"submit\"\r\n                    aria-label=\"Add Vessel\"\r\n                    style=\"background-color: #ff6f61; color: white; font-weight: bold;\"\r\n                    align=\"end\"\r\n                    (click)=\"addVessel()\">\r\n                Add\r\n            </button>                \r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { FormControl, UntypedFormGroup, Validators, ValidationErrors, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-info-dialog',\r\n  templateUrl: './contact-info-dialog.component.html',\r\n  styleUrls: ['./contact-info-dialog.component.css']\r\n})\r\n\r\nexport class ContactInfoDialogComponent {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent; // telephone input\r\n\r\n  // get the current user details\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  // show error message when field is invalid\r\n  emailError: string = 'Required';\r\n  postalError: string = 'Required';\r\n\r\n  // regular expression for Canadian postal code validation\r\n  // from https://stackoverflow.com/questions/15774555/efficient-regex-for-canadian-postal-code-function\r\n  postalRegex: RegExp = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i;\r\n\r\n  profileForm: UntypedFormGroup = new UntypedFormGroup({\r\n    contactEmail: new FormControl<string>('', [Validators.required, Validators.email]),\r\n    address: new FormControl<string>('', [Validators.required]),\r\n    city: new FormControl<string>('', [Validators.required]),\r\n    postalCode: new FormControl<string>('', [Validators.required, Validators.pattern(this.postalRegex)]),\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]),\r\n  });\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<ContactInfoDialogComponent>,\r\n    private auth: AuthService,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    let contactEmail: AbstractControl<any, any> | null = this.profileForm.get('contactEmail');\r\n    let postalCode: AbstractControl<any, any> | null = this.profileForm.get('postalCode');\r\n\r\n    // contact email validation\r\n    contactEmail?.valueChanges.subscribe(() => {\r\n      let contactEmailErrors: ValidationErrors | null | undefined = contactEmail?.errors;\r\n      if (contactEmailErrors?.required) {\r\n        this.emailError = 'Required';\r\n      }\r\n      else if (contactEmailErrors?.email) {\r\n        this.emailError = 'Invalid format';\r\n      }\r\n      else {\r\n        this.emailError = '';\r\n      }\r\n    });\r\n\r\n    // postal code validation\r\n    postalCode?.valueChanges.subscribe(() => {\r\n      let postalCodeErrors: ValidationErrors | null | undefined = postalCode?.errors;\r\n      if (postalCodeErrors?.required) {\r\n        this.postalError = 'Required';\r\n      }\r\n      else if (postalCodeErrors?.pattern) {\r\n        this.postalError = 'Invalid format';\r\n      }\r\n      else {\r\n        this.postalError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.profileForm.patchValue({\r\n      contactEmail: this.userDetails.contactEmail,\r\n      address: this.userDetails.address,\r\n      city: this.userDetails.city,\r\n      postalCode: this.userDetails.postalCode,\r\n      phoneNum: this.userDetails.phoneNum\r\n    });\r\n\r\n  }\r\n\r\n  phoneNumValid(): boolean {\r\n    let phoneNum: Tel = this.profileForm.get('phoneNum')?.value;\r\n    let area: string = phoneNum.area;\r\n    let exchange: string = phoneNum.exchange;\r\n    let subscriber: string = phoneNum.subscriber;\r\n    return !!area && !!exchange && !!subscriber;\r\n  }\r\n\r\n  updateContactInfo(update: boolean): void {\r\n    if (update) {\r\n      this.attemptUpdate();\r\n    }\r\n    else {\r\n      this.dialogRef.close('false');  \r\n    }   \r\n  }\r\n\r\n  attemptUpdate(): void {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.toastr.error(\"Cannot update while offline\", \"Profile update failed\");\r\n      return;\r\n    }\r\n\r\n    // verify phone number\r\n    this.telInput.touched = true;\r\n    this.telInput.stateChanges.next();\r\n    this.profileForm.get('phoneNum')?.updateValueAndValidity();\r\n\r\n    // check profile field entry validity\r\n    if (this.profileForm.valid && this.phoneNumValid()) {\r\n\r\n      // navigate to the home screen\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  this.userDetails.contactEmail = this.profileForm.get('contactEmail')?.value;\r\n                  this.userDetails.address = this.profileForm.get('address')?.value;\r\n                  this.userDetails.city = this.profileForm.get('city')?.value;\r\n                  this.userDetails.postalCode = this.profileForm.get('postalCode')?.value;\r\n                  this.userDetails.phoneNum = this.profileForm.get('phoneNum')?.value;\r\n                  LocalStorageService.saveUser(this.userDetails).then(() => {\r\n                    console.log(\"User data saved to PouchDB\");\r\n                    this.dialogRef.close('true');\r\n                  });\r\n                });\r\n              }\r\n              else {\r\n                this.toastr.error(\"Please authenticate again\", \"ID or Email not defined\");\r\n                this.authenticationService.logout();\r\n              }\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.authenticationService.logout();\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.authenticationService.logout();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.toastr.error(\"Missing information\", \"Profile update failed\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container dialog-container\">    \r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: bold;\">\r\n        Edit Contact Information\r\n    </h3>\r\n    \r\n    <form [formGroup]=\"profileForm\">\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n            Contact Email\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n            <mat-label>\r\n                Contact Email\r\n            </mat-label>\r\n            <input matInput\r\n                    required\r\n                    formControlName=\"contactEmail\">\r\n            <mat-error>\r\n                {{emailError}}\r\n            </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n            Address\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n            <mat-label>\r\n                Address\r\n            </mat-label>\r\n            <input matInput\r\n                    required\r\n                    formControlName=\"address\">\r\n            <mat-error *ngIf=\"profileForm.invalid\">\r\n                Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n            City\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n            <mat-label>\r\n                City\r\n            </mat-label>\r\n            <input matInput\r\n                    required\r\n                    formControlName=\"city\">\r\n            <mat-error *ngIf=\"profileForm.invalid\">\r\n                Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n            Postal Code\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n            <mat-label>\r\n                Postal Code\r\n            </mat-label>\r\n            <input matInput\r\n                    required\r\n                    formControlName=\"postalCode\">\r\n            <mat-error>\r\n                {{postalError}}\r\n            </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n            Phone Number\r\n            </h6>\r\n            <mat-form-field #telField\r\n                            appearance=\"fill\">\r\n            <mat-label>\r\n                Phone Number\r\n            </mat-label>\r\n            <app-tel-input #telInput\r\n                            formControlName=\"phoneNum\">\r\n\r\n            </app-tel-input>\r\n            <mat-icon matSuffix>\r\n                phone\r\n            </mat-icon>\r\n            <mat-error *ngIf=\"profileForm.invalid || !phoneNumValid()\">\r\n                Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        </form> \r\n\r\n        <div class=\"row bottom-buttons\">\r\n\r\n            <div class=\"outer\">\r\n      \r\n              <div class=\"inner\" style=\"margin-right: 40%\">\r\n                  <button mat-stroked-button\r\n                          type=\"submit\"\r\n                          style=\"background-color: #005d87; color: white; font-weight: bold;\"\r\n                          (click)=\"updateContactInfo(false)\">\r\n                      Back\r\n                  </button>    \r\n              </div>\r\n      \r\n              <div class=\"inner\">\r\n                  <button mat-stroked-button\r\n                          type=\"submit\"\r\n                          style=\"background-color: #ff6f61; color: white; font-weight: bold;\"\r\n                          align=\"end\"\r\n                          (click)=\"updateContactInfo(true)\">\r\n                      Update\r\n                  </button>                \r\n              </div>\r\n      \r\n            </div>\r\n      \r\n          </div>\r\n\r\n    </div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { DatePipe } from '@angular/common'; \r\nimport { SpeciesData } from 'src/app/data-models/catch-table-models/species-data.model';\r\n\r\n@Component({\r\n  selector: 'app-offload-table-dialog',\r\n  templateUrl: './offload-table-dialog.component.html',\r\n  styleUrls: ['./offload-table-dialog.component.css']\r\n})\r\nexport class OffloadTableDialogComponent {\r\n\r\n  // programming flags\r\n  selectReports: boolean = false; // flag that tells us whether the user wants to select from specific catch reports\r\n  dateSelection: boolean = false; // flag that tells us whether the user wants to select by date\r\n  listSelection: boolean = false; // flag that tells us whether the user wants to select by a list\r\n  includePieces: boolean = false; // flag that tells us wether the  user wants to include pieces \r\n\r\n  // form control for catch report list selector\r\n  catchReportList: FormControl = new FormControl<DailyCatchReport[]>([]);\r\n\r\n  // data from offload report\r\n  catchReportData: DailyCatchReport[] = [];\r\n  tableData: SpeciesData[] = [];\r\n\r\n  // general form controls\r\n  offloadForm: UntypedFormGroup = new UntypedFormGroup({\r\n    dataType: new FormControl<string>('', [Validators.required]),\r\n    piecesIncluded: new FormControl<string>('', [Validators.required]),\r\n    selectionType: new FormControl<string>(''),\r\n    startDate: new FormControl<Date | null>(null),\r\n    endDate: new FormControl<Date | null>(null)\r\n  })\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<OffloadTableDialogComponent>,\r\n    private datePipe: DatePipe,\r\n    @Inject(MAT_DIALOG_DATA) private data: { catchReports: DailyCatchReport[], tableData: SpeciesData[] }\r\n  ) {\r\n\r\n    this.catchReportData = this.data.catchReports;\r\n    this.tableData = this.data.tableData;\r\n\r\n    this.offloadForm.patchValue({ // fill include pieces question\r\n      piecesIncluded: 'Yes',\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onDataTypeChange();\r\n    this.onSelectionTypeChange();\r\n  }\r\n\r\n  // listens for a change in question 1 answer and updates programming flags and conditional validation of the next question\r\n  onDataTypeChange(): void {\r\n    this.offloadForm.get('dataType')?.valueChanges.subscribe((value: string) => {\r\n      const selectionTypeControl: AbstractControl<any, any> | null = this.offloadForm.get('selectionType');\r\n\r\n      if (value === 'Specific catch reports from this trip') {\r\n        this.selectReports = true;\r\n        selectionTypeControl?.setValidators([Validators.required]); // enable validation for selection type question\r\n      } else if (value === 'All catch reports from this trip') { // if they want to include all catch reports\r\n        this.selectReports = false;\r\n        selectionTypeControl?.clearValidators(); // disable validation for selection type question\r\n      }\r\n      selectionTypeControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  // listens for a change in question 2 answer and updates programming flags\r\n  onSelectionTypeChange(): void {\r\n    this.offloadForm.get('selectionType')?.valueChanges.subscribe((value: string) => {\r\n\r\n      if (value === 'Select by date') {\r\n        this.dateSelection = true;\r\n        this.listSelection = false; // reset other flag\r\n      } else if (value === 'Select from list') { //if they want to select from a list\r\n        this.listSelection = true;\r\n        this.dateSelection = false; // reset other flag\r\n      }\r\n  \r\n    })\r\n  }\r\n\r\n  getDate(date: Date): Date {\r\n    return new Date(date);\r\n  }\r\n\r\n  // determines if the date fished for the current catch report is within the user-selected date range\r\n  evaluateDateInfo(catchReport: DailyCatchReport): boolean {\r\n\r\n    let startDate: Date = new Date(this.offloadForm.get('startDate')?.value);\r\n    let endDate: Date = new Date(this.offloadForm.get('endDate')?.value);\r\n    let dateFished: Date = this.clearTime(new Date(catchReport.dateFished));\r\n\r\n    return ((dateFished.getTime() >= startDate.getTime()) && (dateFished.getTime() <= endDate.getTime()));\r\n\r\n  }\r\n\r\n  // determines if the current catch report is present in the user-selected list of catch reports\r\n  evaluateSelectedInfo(catchReport: DailyCatchReport): boolean {\r\n    let catchReports: DailyCatchReport[] = this.catchReportList.value;\r\n    for (let report of catchReports) {\r\n      // POSSIBLY CHANGE TO COMPARE CONFIRMATION NUMBERS IN THE FUTURE\r\n      let date1: Date = new Date(report.submissionDate);\r\n      let date2: Date = new Date(catchReport.submissionDate);\r\n      if(date1.getTime() === date2.getTime()){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // adds a species to the table data source if the appropriate conditions are met\r\n  addSpeciesToData(catchReport: DailyCatchReport, speciesNamesList: string[], pieces: boolean): void {\r\n\r\n    for (let species of catchReport.speciesDataList) { // loop through each species list\r\n      // only include if the species is not already in our list and it was kept \r\n      if (species.kept > 0) { \r\n        if (!speciesNamesList.includes(species.speciesName)){ // if we do not already have the species in our list\r\n          let tempSpecies: SpeciesData = new SpeciesData(species.speciesName); // create new species object \r\n          tempSpecies.kept = 0;\r\n          tempSpecies.released = 0;\r\n          tempSpecies.offloadWeight = 0;\r\n          if (pieces) {\r\n          tempSpecies.offloadPieces = species.kept; // update the number of kept pieces\r\n          }\r\n          this.tableData.push(tempSpecies); // add species to the table\r\n          speciesNamesList.push(species.speciesName); // keep track of the species name in our list\r\n        // if we already have the species in our table data source list but need to update the pieces\r\n        } else if (pieces){ \r\n          for (let currSpecies of this.tableData){\r\n            if (currSpecies.speciesName === species.speciesName) {\r\n              currSpecies.offloadPieces += species.kept; // update the number of kept pieces\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // retrieves table data based on the how the user has filled out the table population form\r\n  getTableData(select: boolean, date: boolean, list: boolean, pieces: boolean): void {\r\n\r\n     // loop through each daily catch report in currTrip, and add all species data to the table source\r\n     let speciesNamesList: string[] = []; // temp storage for species names (used for comparison)\r\n\r\n     for (let catchReport of this.catchReportData) { // loop through each catch report\r\n\r\n      let isIncluded: boolean = true;\r\n      if (select) {\r\n        if (date) {\r\n          isIncluded = this.evaluateDateInfo(catchReport);\r\n        } else if (list) { // they will have selected from the list\r\n         isIncluded = this.evaluateSelectedInfo(catchReport);\r\n        } \r\n      }\r\n\r\n      if (isIncluded) {\r\n        this.addSpeciesToData(catchReport, speciesNamesList, pieces);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // removes any time data from a Date object (used for date comparisons)\r\n  clearTime(currDate: Date): Date {\r\n    currDate.setHours(0);\r\n    currDate.setMinutes(0);\r\n    currDate.setSeconds(0);\r\n    currDate.setMilliseconds(0);\r\n    return currDate;\r\n  }\r\n\r\n // invoked if the user selects the \"Back\" button\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  // invoked if the user selects the \"Apply\" button\r\n  populateTable(): void {\r\n\r\n    this.tableData.length = 0; // clear any previous table data\r\n\r\n    if (this.offloadForm.get('piecesIncluded')?.value === 'Yes'){\r\n      this.includePieces = true;\r\n    }\r\n\r\n    if (this.offloadForm.valid) {\r\n      this.getTableData(this.selectReports, this.dateSelection, this.listSelection, this.includePieces); // fill table data source\r\n      this.dialogRef.close(this.tableData); // pass new table data source back to the offload-report\r\n    } else {\r\n      this.offloadForm.markAllAsTouched();\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; height:90%\">  \r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: bold;\">\r\n        Table Population Options\r\n    </h3>\r\n\r\n\r\n    <form [formGroup]=\"offloadForm\">\r\n\r\n         <!-- Question 1 -->\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"question-text\">\r\n                What catch do you want to include?\r\n            </h6>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>\r\n                    Select\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"dataType\">\r\n                    <mat-option *ngFor=\"let answer of ['All catch reports from this trip', 'Specific catch reports from this trip']\"\r\n                                [value]=\"answer\">\r\n                        {{answer}}\r\n                    </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                    </mat-error>\r\n              </mat-form-field>\r\n        </div>\r\n\r\n         <!-- Question 2 - Appears if they want to select specific Catch Reports -->\r\n\r\n        <div class=\"row\" *ngIf=\"selectReports\">\r\n            \r\n            <h6 class=\"question-text\">\r\n                How would you like to choose your daily catch reports?\r\n            </h6>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>\r\n                    Select\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"selectionType\">\r\n                    <mat-option *ngFor=\"let answer of ['Select by date', 'Select from list']\"\r\n                                [value]=\"answer\">\r\n                        {{answer}}\r\n                    </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                    </mat-error>\r\n              </mat-form-field>\r\n\r\n               <!-- Date Range Picker -->\r\n\r\n               <div class=\"row\"\r\n               align=\"center\"\r\n               *ngIf=\"dateSelection\">\r\n\r\n                <mat-form-field appearance=\"fill\">\r\n                    \r\n                    <mat-label>\r\n                    Enter a Date Range\r\n                    </mat-label>\r\n                    <mat-date-range-input [rangePicker]=\"picker\">\r\n                        <input matStartDate\r\n                                formControlName=\"startDate\"\r\n                                placeholder=\"Start date\">\r\n                        <input matEndDate\r\n                                formControlName=\"endDate\"\r\n                                placeholder=\"End date\">\r\n                    </mat-date-range-input>\r\n                    <mat-hint class=\"small-text\">\r\n                        MM/DD/YYYY – MM/DD/YYYY\r\n                    </mat-hint>\r\n                    <mat-datepicker-toggle matIconSuffix\r\n                                            [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-date-range-picker #picker></mat-date-range-picker>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n             <!-- Report Picker (Select From List) -->\r\n\r\n             <div class=\"row\"\r\n                   align=\"center\"\r\n                   *ngIf=\"listSelection\">\r\n\r\n                  <mat-form-field appearance=\"fill\"\r\n                              class=\"form-field\">\r\n                    <mat-label>\r\n                    Select Reports\r\n                    </mat-label>\r\n                    <mat-select [formControl]=\"catchReportList\" multiple>\r\n                        <mat-select-trigger>\r\n                            Total Reports Selected: {{catchReportList.value?.length}}\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let report of catchReportData.reverse(); let i = index;\"\r\n                                    [value]=\"report\"\r\n                                    style=\"font-size:15px;\">\r\n                        {{getDate(report.dateFished) | date: 'dd/MM/yyyy' }} (\r\n                            <div *ngFor=\"let species of report.speciesDataList; let y = index;\" style=\"display: inline\">\r\n                                <small *ngIf=\"species.kept>0 && y<(report.speciesDataList.length-1)\"\r\n                                        style=\"font-size:12px;\">\r\n                                    {{species.speciesName}}: {{species.kept}},\r\n                                </small>\r\n                                <small *ngIf=\"species.kept>0 && y===(report.speciesDataList.length-1)\"\r\n                                        style=\"font-size:12px;\">\r\n                                    {{species.speciesName}}: {{species.kept}}\r\n                                </small>\r\n                            </div>\r\n                        )\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Question 3 -->\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"question-text\">\r\n                Would you like to include total pieces?\r\n                <br>\r\n                <small> \r\n                    If you select no, \"pieces\" will remain at 0.\r\n                </small>\r\n            </h6>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>\r\n                    Select\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"piecesIncluded\">\r\n                    <mat-option *ngFor=\"let answer of ['Yes', 'No']\"\r\n                                [value]=\"answer\">\r\n                        {{answer}}\r\n                    </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                    </mat-error>\r\n              </mat-form-field>\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <!-- Bottom Buttons -->\r\n\r\n    <div class=\"row\">\r\n\r\n        <div class=\"outer\">\r\n  \r\n            <div class=\"inner\" style=\"margin-right: 40%\">\r\n                <button mat-stroked-button\r\n                        type=\"button\"\r\n                        style=\"background-color: #005d87; color: white; font-weight: bold;\"\r\n                        (click)=\"closeDialog()\">\r\n                    Back\r\n                </button>    \r\n            </div>\r\n  \r\n  \r\n            <div class=\"inner\">\r\n                <button mat-stroked-button\r\n                        type=\"submit\"\r\n                        style=\"background-color: #ff6f61; color: white; font-weight: bold;\"\r\n                        (click)=\"populateTable()\">\r\n                    Apply\r\n                </button>                \r\n            </div>\r\n  \r\n        </div>\r\n  \r\n      </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-active-trip-home',\r\n  templateUrl: './active-trip-home.component.html',\r\n  styleUrls: ['./active-trip-home.component.css']\r\n})\r\nexport class ActiveTripHomeComponent {\r\n\r\n  //data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor( // same constructor as original homepage\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n    // get current fishing report information\r\n    this.currTrip = this.userDetails.currTrip;\r\n  }\r\n\r\n  getGearName(): string {\r\n    return this.currTrip.gear.name;\r\n  }\r\n\r\n  getDate(date: Date): Date {\r\n    return new Date(date);\r\n  }\r\n\r\n  toCatchReport(gearType: string): void {\r\n    switch(gearType){\r\n      case 'Gill Net':\r\n        this.router.navigate(['gill-net-report']);\r\n        break;\r\n      case 'Seine':\r\n        this.router.navigate(['seine-report']);\r\n        break;\r\n      case 'Troll':\r\n        this.router.navigate(['troll-report']);\r\n        break;\r\n      default:\r\n        this.toastr.error(\"Something went wrong\", \"Error\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  // go to end a fishing report\r\n  toEndReport(): void {\r\n    this.router.navigate(['end-report']);\r\n  }\r\n\r\n  // go to pause a fishing report  \r\n  toPauseReport(): void {\r\n    this.router.navigate(['pause-report']);\r\n  }\r\n\r\n  // go to cancel the current trip\r\n  toCancelReport(): void {\r\n    this.router.navigate(['cancel-report']);\r\n  }\r\n\r\n  // go to an offload report\r\n  toOffloadReport(): void {\r\n    this.router.navigate(['offload-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container active-trip-home-container\">\r\n\r\n  <!-- Header -->\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n      <h2 style=\"color: #003F61\">\r\n        #1234\r\n      </h2>\r\n    </div>\r\n\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Trip Information -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Start Date:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{getDate(currTrip.startFishingReport.startDate)}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Gear Type:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.gear}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel Master:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.master}} (FIN: {{currTrip.fin}})\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.vessel}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      License Area:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.licenseArea}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <!-- Catch Reports -->\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toCatchReport(currTrip.gear.name)\">\r\n      <span>\r\n        Record Catch\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Fishing Report Buttons -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h3 class=\"blue-subheading\">\r\n      Submit an Activity Report\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"report-buttons\">\r\n\r\n    <div class=\"row justify-content-center\">\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toPauseReport()\">\r\n            <span>\r\n              Pause\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  *ngIf=\"currTrip.dailyCatchReports.length > 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toEndReport()\">\r\n            <span>\r\n              End\r\n            </span>\r\n          </button>\r\n          <button mat-raised-button\r\n                  *ngIf=\"!currTrip.dailyCatchReports.length\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toCancelReport()\">\r\n            <span>\r\n              Cancel\r\n            </span>\r\n          </button> \r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                 *ngIf=\"currTrip.offloadNeeded && currTrip.dailyCatchReports.length > 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toOffloadReport()\">\r\n            <span>\r\n              Offload\r\n            </span>\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { UserData } from 'src/app/data-models/user-models/user-data.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-no-trip-home',\r\n  templateUrl: './no-trip-home.component.html',\r\n  styleUrls: ['./no-trip-home.component.css']\r\n})\r\nexport class NoTripHomeComponent {\r\n\r\n  //data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  prevTrips: Trip[] = [];\r\n\r\n  constructor( // same constructor as original homepage\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email undefined in database\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  saveDailyCatchReports(tempTrip: Trip): void {\r\n    for(let report of this.currTrip.dailyCatchReports){\r\n      let tempReport: DailyCatchReport = new DailyCatchReport();\r\n      tempReport = report;\r\n      tempTrip.dailyCatchReports.push(tempReport);\r\n    }\r\n  }\r\n\r\n  saveOldReport(): void { \r\n    if(this.currTrip.isValid() && !this.currTrip.isSaved && this.currTrip.startFishingReport.isComplete) { // check if there is a trip to save\r\n      console.log(\"Saving a new trip...\");\r\n      let tempTrip: Trip = new Trip();\r\n      this.currTrip.isSaved = true;\r\n      tempTrip.isSaved = this.currTrip.isSaved;\r\n      tempTrip.gear = this.currTrip.gear;\r\n      tempTrip.vessel = this.currTrip.vessel;\r\n      tempTrip.licenseArea = this.currTrip.licenseArea;\r\n      tempTrip.master = this.currTrip.master;\r\n      tempTrip.fin = this.currTrip.fin;\r\n      tempTrip.contactName = this.currTrip.contactName;\r\n      tempTrip.phoneNum = this.currTrip.phoneNum;\r\n      tempTrip.offloadNeeded = this.currTrip.offloadNeeded;\r\n      tempTrip.startFishingReport = this.currTrip.startFishingReport;\r\n      tempTrip.endFishingReport = this.currTrip.endFishingReport;\r\n      tempTrip.cancelFishingReport = this.currTrip.cancelFishingReport;\r\n      tempTrip.pauseFishingReports = this.currTrip.pauseFishingReports;\r\n      this.saveDailyCatchReports(tempTrip);\r\n      tempTrip.offloadReports = this.currTrip.offloadReports;\r\n      this.prevTrips = this.userDetails.prevTrips;\r\n      this.prevTrips.push(tempTrip);\r\n      this.userDetails.currTrip = this.currTrip;\r\n      this.userDetails.prevTrips = this.prevTrips;\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        console.log(\"Trip saved!\");\r\n      });\r\n    }\r\n  }\r\n\r\n  initialize(): void {\r\n    // get current fishing report information\r\n    this.currTrip = this.userDetails.currTrip;\r\n    this.saveOldReport();\r\n  }\r\n\r\n  // go to start a fishing report\r\n  toStartReport(): void {\r\n    this.router.navigate(['start-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container no-trip-home-container\">\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h3 class=\"blue-subheading\">\r\n      You have no active trip.\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Select the button below to complete a Start Fishing\r\n      Report and activate a new trip.\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toStartReport()\">\r\n      <span>\r\n        Start Trip\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-offload-home',\r\n  templateUrl: './offload-home.component.html',\r\n  styleUrls: ['./offload-home.component.css']\r\n})\r\nexport class OffloadHomeComponent {\r\n\r\n  // data preambles\r\n  requestToStartNewTrip: boolean = false; // flag that tells us if we should display the confirmation page\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  setNewTripFlag(): void {\r\n    this.requestToStartNewTrip = true;\r\n  }\r\n\r\n  clearNewTripFlag(): void {\r\n    this.requestToStartNewTrip = false;\r\n  }\r\n\r\n  // go to an offload report\r\n  toOffloadReport(): void {\r\n    this.router.navigate(['offload-report']);\r\n  }\r\n\r\n  // go to the new trip homepage\r\n  toNoTripHome(): void {\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      console.log(\"User data saved to PouchDB\");\r\n      this.router.navigate([this.userDetails.currHomepage]);\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Offload Report Homepage -->\r\n<div class=\"container offload-home-container\">\r\n\r\n    <div *ngIf=\"!requestToStartNewTrip\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col\" align=\"left\">\r\n                <h1 class=\"blue-trip-heading\">\r\n                    My Trip\r\n                </h1>\r\n            </div>\r\n\r\n\r\n            <div class=\"col\" align=\"right\">\r\n            <app-menu> </app-menu>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h3 class=\"blue-subheading\">\r\n                Do you need to submit an offload report?\r\n            </h3>\r\n        </div>\r\n\r\n        <div class=\"row\" align=\"left\">\r\n            <h6 class=\"descriptive-text\">\r\n            Offload Reports completed for this trip: \r\n            <b> {{userDetails.currTrip.offloadReports.length}} </b>\r\n            </h6>\r\n        </div>\r\n\r\n        <div class=\"row\" align=\"left\">\r\n                <h6 class=\"descriptive-text\">\r\n                This is your final chance to complete an offload report before starting a new trip.\r\n                </h6>\r\n        </div>\r\n\r\n        <div class=\"button-row\">\r\n            <button mat-raised-button\r\n                    class=\"red-button\"\r\n                    align=\"center\"\r\n                    type=\"button\"\r\n                    (click)=\"toOffloadReport()\">\r\n            <span>\r\n            Offload Report\r\n            </span>\r\n            </button> \r\n        </div>\r\n\r\n        <div class=\"button-row\">\r\n            <button mat-raised-button\r\n                    class=\"red-button\"\r\n                    align=\"center\"\r\n                    type=\"button\"\r\n                    (click)=\"setNewTripFlag()\">\r\n            <span>\r\n            Start Another Trip\r\n            </span>\r\n            </button> \r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"requestToStartNewTrip\">\r\n        \r\n    <div class=\"row\"\r\n        align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n        Are you sure you want to start a new trip?\r\n        </h5>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n        align=\"center\">\r\n        <p>\r\n            If you select yes, you will not be able to complete an offload report for this trip \r\n            at <b>any</b> point in the future.\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n            <div class=\"col-1\"></div>\r\n            <div class=\"col-4\">\r\n                <div class=\"row\">\r\n                <button mat-raised-button\r\n                        class=\"fishing-button-blue\"\r\n                        type=\"submit\"\r\n                        (click)=\"clearNewTripFlag()\">\r\n                    <span>\r\n                      No\r\n                    </span>\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-4\">\r\n                <div class=\"row\">\r\n                <button mat-raised-button\r\n                        class=\"fishing-button-red\"\r\n                        type=\"submit\"\r\n                        (click)=\"toNoTripHome()\">\r\n                  <span>\r\n                    Yes\r\n                  </span>\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-1\"></div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component } from '@angular/core';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Gear } from '../../data-models/trip-models/gear-models/gear.model';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\nimport { AddVesselDialogComponent } from '../../dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { Net } from '../../data-models/trip-models/gear-models/net.model';\r\nimport { AddNetDialogComponent } from '../../dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { ContactInfoDialogComponent } from 'src/app/dialogs/contact-info-dialog/contact-info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n\r\n  // get the current user details\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  // read-only fields\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n  username: string = '';\r\n  logbooks: Gear[] = [];\r\n\r\n  // vessel and net data\r\n  vessels: VesselData[] = [];\r\n  containsGillNet: boolean = false;\r\n  nets: Net[] = [];\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private auth: AuthService,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // set page values\r\n  initialize(): void {\r\n\r\n    this.firstName = this.userDetails.firstName;\r\n    this.lastName = this.userDetails.lastName;\r\n    this.username = this.userDetails.userEmail;\r\n    this.logbooks = this.userDetails.gears;\r\n\r\n    this.vessels = this.userDetails.vessels;\r\n\r\n    for (let logbook of this.logbooks) {\r\n      if (logbook.name === 'Gill Net') {\r\n        this.containsGillNet = true;\r\n        this.nets = this.userDetails.nets;\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // edit contact info\r\n  contactInfoDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<ContactInfoDialogComponent, any> = this.dialog.open(ContactInfoDialogComponent, {\r\n      width: '500px',\r\n      height: '550px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected vessel as new vessel added then go to next screen\r\n        if (result !== 'false') {\r\n\r\n          if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n            let currUsername: string = LocalStorageService.getCurrUsername();\r\n            if (currUsername) {\r\n              LocalStorageService.getUserOffline(currUsername).then(() => {\r\n                let error: string = LocalStorageService.error;\r\n                if (error) {\r\n                  this.authenticationService.userDataLogout(error);\r\n                }\r\n                let currUser: UserData = LocalStorageService.currUser;\r\n                if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                  this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n                }\r\n                else {\r\n                  this.userDetails = currUser;\r\n                  this.toastr.success(\"Profile Updated!\", \"Success\");\r\n                }\r\n              });\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n            }\r\n          }\r\n\r\n          else {\r\n            this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n              if (authd) {\r\n                this.auth.user$.subscribe((user: User | null | undefined) => {\r\n                  if (user) {\r\n                    let id: string | undefined = user.sub;\r\n                    let email: string | undefined = user.email;\r\n                    if (id && email) {\r\n                      LocalStorageService.getUserOnline(id, email).then(() => {\r\n                        let error: string = LocalStorageService.error;\r\n                        if (error) {\r\n                          this.authenticationService.userDataLogout(error);\r\n                        }\r\n                        let currUser: UserData = LocalStorageService.currUser;\r\n                        if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                          this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                        }\r\n                        else {\r\n                          this.userDetails = currUser;\r\n                          this.toastr.success(\"Profile Updated!\", \"Success\");\r\n                        }\r\n                      });\r\n                    }\r\n                    else {\r\n                      this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n                    }\r\n                  }\r\n                  else {\r\n                    this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"Not authenticated\");\r\n              }\r\n            });\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // add new vessel to user profile\r\n  addVesselDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddVesselDialogComponent, any> = this.dialog.open(AddVesselDialogComponent, {\r\n      width: '500px',\r\n      height: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected vessel as new vessel added then go to next screen\r\n        if (result !== 'delete') {\r\n          let newVessel: VesselData = new VesselData(result.vesselName, result.vesselNumber, true);\r\n          this.userDetails.vessels.push(newVessel);\r\n          this.vessels = this.userDetails.vessels;\r\n          LocalStorageService.saveUser(this.userDetails).then(() => {\r\n            this.toastr.success(\"New vessel added!\", \"Success\");\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  // add new net to user profile\r\n  addNetDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddNetDialogComponent, any> = this.dialog.open(AddNetDialogComponent, {\r\n      width: '500px',\r\n      height: '550px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected net as new net added then go to next screen\r\n        if (result !== 'delete') {\r\n          let newNet: Net = new Net(result.netType, result.netName, result.netLength, result.netDepth, result.netUnits,\r\n            result.hangRatio, result.meshSize, result.meshUnits, result.numMeshes, result.numStrands, true);\r\n          this.userDetails.nets.push(newNet);\r\n          this.nets = this.userDetails.nets;\r\n          LocalStorageService.saveUser(this.userDetails).then(() => {\r\n            this.toastr.success(\"New net added!\", \"Success\");\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container profile-container\">\r\n\r\n  <!-- Heading -->\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-profile-heading\">\r\n        Profile\r\n      </h1>\r\n    </div>\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row justify-content-center\">\r\n\r\n    <!-- Account Details -->\r\n    \r\n      <h6 class=\"descriptive-text\" style=\"margin-top: 10px;\">\r\n        <b>\r\n          First Name:\r\n        </b>\r\n        <span class=\"field-data\">\r\n          {{firstName}}\r\n        </span>\r\n      </h6>\r\n\r\n      <h6 class=\"descriptive-text\">\r\n        <b>\r\n          Last Name:\r\n        </b>\r\n        <span class=\"field-data\">\r\n          {{lastName}}\r\n        </span>\r\n      </h6>\r\n\r\n      <h6 class=\"descriptive-text\">\r\n        <b>\r\n          Username:\r\n        </b>\r\n        <span class=\"field-data\">\r\n          {{username}}\r\n        </span>\r\n      </h6>\r\n\r\n      <h6 class=\"descriptive-text\">\r\n        <b>\r\n          Available logbooks:\r\n        </b>\r\n        <span *ngIf=\"!logbooks.length\">\r\n          No available logbooks.\r\n        </span>\r\n      </h6>\r\n      <ul *ngIf=\"logbooks.length > 0\"\r\n          class=\"logbook-list\">\r\n        <li *ngFor=\"let logbook of logbooks\">\r\n          {{logbook}}\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"row info-section\" style=\"margin-top: 5px;\"></div>\r\n\r\n\r\n    <!-- Contact Information -->\r\n\r\n      <h3 class=\"blue-profile-subheading\" style=\"padding-top: 10px;\">\r\n        Contact Information\r\n      </h3>\r\n\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"descriptive-text\">\r\n          <b>\r\n            Email:\r\n          </b>\r\n          <span class=\"field-data\">\r\n            {{userDetails.contactEmail}}\r\n          </span>\r\n        </h6>\r\n\r\n        <h6 class=\"descriptive-text\">\r\n          <b>\r\n            Address:\r\n          </b>\r\n          <span class=\"field-data\">\r\n            {{userDetails.address}}\r\n          </span>\r\n        </h6>\r\n\r\n        <h6 class=\"descriptive-text\">\r\n          <b>\r\n            City:\r\n          </b>\r\n          <span class=\"field-data\">\r\n            {{userDetails.city}}\r\n          </span>\r\n        </h6>\r\n\r\n        <h6 class=\"descriptive-text\">\r\n          <b>\r\n            Postal Code:\r\n          </b>\r\n          <span class=\"field-data\">\r\n            {{userDetails.postalCode}}\r\n          </span>\r\n        </h6>\r\n\r\n        <h6 class=\"descriptive-text\">\r\n          <b>\r\n            Phone Number:\r\n          </b>\r\n          <span class=\"field-data\">\r\n            {{userDetails.phoneNum}}\r\n          </span>\r\n        </h6>\r\n\r\n        <div class=\"button-row\">\r\n          <button mat-raised-button\r\n                  class=\"red-button\"\r\n                  type=\"button\"\r\n                  (click)=\"contactInfoDialog()\">\r\n            <span>\r\n              Edit Contact Information\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row info-section\"></div>\r\n\r\n\r\n    <!-- My Vessels -->\r\n\r\n    <h3 class=\"blue-profile-subheading\" style=\"padding-top: 10px;\">\r\n      My Vessels\r\n    </h3>\r\n\r\n    <div class=\"row\">\r\n\r\n      <span *ngIf=\"!vessels.length\" class=\"descriptive-text\">\r\n        No available vessels.\r\n      </span>\r\n\r\n      <ul *ngIf=\"vessels.length > 0\"\r\n        class=\"descriptive-text\"\r\n        style=\"padding-left: 30px;\">\r\n        <li *ngFor=\"let vessel of vessels\">\r\n            <b>\r\n            {{vessel.vesselName}} \r\n            </b>\r\n          <span class=\"field-data\">\r\n            (VRN: {{vessel.vesselCoastNumber}})\r\n          </span>\r\n        </li> \r\n      </ul>\r\n\r\n        <!-- Add new vessel -->\r\n        <div class=\"button-row\">\r\n              <button mat-raised-button\r\n                      class=\"red-button\"\r\n                      type=\"button\"\r\n                      (click)=\"addVesselDialog()\">\r\n                <span>\r\n                  Add Vessel\r\n                </span>\r\n              </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row info-section\"></div>\r\n\r\n\r\n    <!-- My Nets -->\r\n\r\n    <div *ngIf=\"containsGillNet\">\r\n\r\n      <div class=\"col\" align=\"left\">      \r\n        <h3 class=\"blue-profile-subheading\" style=\"padding-top: 10px;\">\r\n          My Nets\r\n        </h3>\r\n      </div>\r\n\r\n      <div class=\"row\" style=\"padding-left: 10px;\">\r\n        <span *ngIf=\"!nets.length\" class=\"descriptive-text\">\r\n          No available nets.\r\n        </span>\r\n     </div>\r\n\r\n      <mat-expansion-panel *ngFor=\"let net of nets\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                <span class=\"descriptive-text\">\r\n                  <b>\r\n                    {{net.netName }} \r\n                  </b>\r\n                    <span class=\"field-data\">\r\n                      ({{net.netType}})\r\n                    </span>\r\n                </span>\r\n            </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n            <h6 class=\"field-data\" style=\"font-size: 14px;\">\r\n                <b>Length (in fathoms): </b>\r\n                {{net.length}}\r\n            </h6>\r\n            <h6 class=\"field-data\" style=\"font-size: 14px;\">\r\n              <b>Weedline Depth: </b>\r\n              {{net.weedlineDepth}} {{net.weedlineDepthUnits}}\r\n            </h6>\r\n            <h6 class=\"field-data\" style=\"font-size: 14px;\">\r\n                <b>Hang Ratio ( :1): </b>\r\n              {{net.hangRatio}} \r\n            </h6>\r\n            <h6 class=\"field-data\" style=\"font-size: 14px;\">\r\n              <b>Mesh Size: </b>\r\n              {{net.meshSize}} {{net.meshSizeUnits}} \r\n            </h6>\r\n            <h6 class=\"field-data\" style=\"font-size: 14px;\">\r\n              <b>Number of Meshes: </b>\r\n              {{net.numMeshes}}\r\n          </h6>\r\n            <h6 class=\"field-data\" \r\n                style=\"font-size: 14px;\"\r\n                *ngIf=\"net.netType === 'Alaska Twist'\">\r\n              <b>Number of Strands: </b>\r\n              {{net.numStrands}}\r\n          </h6>\r\n    </mat-expansion-panel>\r\n\r\n      <!-- Add new net -->\r\n      <div class=\"row\" style=\"padding-left: 10px;\">\r\n        <div class=\"button-row\">\r\n            <button mat-raised-button\r\n                    class=\"red-button\"\r\n                    type=\"button\"\r\n                    (click)=\"addNetDialog()\">\r\n              <span>\r\n                Add Net\r\n              </span>\r\n            </button>\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"containsGillNet\"\r\n    class=\"row info-section\"\r\n    style=\"margin-bottom: 20px;\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from 'src/app/data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Gear } from 'src/app/data-models/trip-models/gear-models/gear.model';\r\nimport { LicenseArea } from 'src/app/data-models/trip-models/license-area.model';\r\nimport { VesselData } from 'src/app/data-models/user-models/vessel-data.model';\r\n\r\n@Component({\r\n  selector: 'app-records-page',\r\n  templateUrl: './records-page.component.html',\r\n  styleUrls: ['./records-page.component.css']\r\n})\r\nexport class RecordsPageComponent {\r\n\r\n   //data preambles\r\n   userDetails: UserData = new UserData('', '');\r\n   currTrip: Trip = new Trip();\r\n\r\n   //filter menu\r\n   gears: Gear[] = [];\r\n   licenseAreas: LicenseArea[] = [];\r\n   vessels: VesselData[] = [];\r\n   selectedGearCount: number = 0;\r\n   selectedLicenseAreaCount: number = 0;\r\n   selectedVesselCount: number = 0;\r\n\r\n  constructor( // same constructor as original homepage\r\n    private auth: AuthService,\r\n    private datePipe: DatePipe,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  formatDate(date: Date): string {\r\n    let formattedDate = this.datePipe.transform(date, 'shortDate');\r\n    if (formattedDate){\r\n      return formattedDate;\r\n    }\r\n    this.toastr.error(\"Could not format date\", \"Date format error\");\r\n    return '';\r\n  }\r\n\r\n  initialize(): void {\r\n\r\n    // get current fishing report information\r\n    this.currTrip = this.userDetails.currTrip;\r\n\r\n    // get data for filter list\r\n    this.makeGearList(this.userDetails.gears);\r\n    this.makeLicenseAreaList(LocalStorageService.getLicenseAreas());\r\n    this.makeVesselList(this.userDetails.vessels);\r\n\r\n  }\r\n\r\n  makeVesselList(vesselList: VesselData[]) {\r\n    for(let vessel of vesselList) {\r\n      let currVessel: VesselData = new VesselData();\r\n      currVessel.vesselName = vessel.vesselName;\r\n      currVessel.vesselCoastNumber = vessel.vesselCoastNumber;\r\n      this.vessels.push(currVessel);\r\n    }\r\n  }\r\n\r\n  makeGearList(gearList: Gear[]): void {\r\n    for(let gear of gearList) {\r\n     let currGear: Gear = new Gear();\r\n     currGear.name = gear.name;\r\n     currGear.logbookID = gear.logbookID;\r\n     this.gears.push(currGear);\r\n    }\r\n  }\r\n\r\n  makeLicenseAreaList(areas: LicenseArea[]): void {\r\n    for(let area of areas) {\r\n      let currArea: LicenseArea = new LicenseArea();\r\n      currArea.licenseName = area.licenseName;\r\n      currArea.licenseLocation = area.licenseLocation;\r\n      this.licenseAreas.push(currArea);\r\n     }\r\n  }\r\n\r\n\r\n  getDate(date: Date): Date {\r\n    return new Date(date);\r\n  }\r\n\r\n  determineButtonStyling(): string {\r\n\r\n    if (this.filtersApplied()) { // filter is being used\r\n      return \"filter-tool-selected\";\r\n    }\r\n    return \"filter-tool\" // filter is not being used\r\n  }\r\n\r\n  filtersApplied(): boolean {\r\n    return this.selectedGearCount > 0 || this.selectedLicenseAreaCount > 0 || this.selectedVesselCount > 0;\r\n  }\r\n\r\n\r\n  /* Credit to: \r\n  https://stackblitz.com/edit/multi-select-mat-menu?file=src%2Fapp%2Fmenu-multiselect-example.html,src%2Fapp%2Fmenu-multiselect-example.ts\r\n  for selectItem and updateSelectedItems */\r\n \r\n selectItem($event: any, item: any): void {\r\n    // prevent menu from closing\r\n    $event.stopPropagation();\r\n    $event.preventDefault();\r\n    // toggle selected state on clicked item\r\n    item.isChecked = !item.isChecked;\r\n    this.updateSelectedItems();\r\n }\r\n\r\n updateSelectedItems(): void {\r\n    this.selectedGearCount = this.gears.filter((g: Gear) => g.isChecked).length;\r\n    this.selectedLicenseAreaCount = this.licenseAreas.filter((l: LicenseArea) => l.isChecked).length;\r\n    this.selectedVesselCount = this.vessels.filter((v: VesselData) => v.isChecked).length;\r\n }\r\n\r\n determineTripVisibility(trip: Trip): boolean {\r\n\r\n  let checkedGears: Gear[] = this.gears.filter((g: Gear) => g.isChecked);\r\n  let checkedAreas: LicenseArea[] = this.licenseAreas.filter((l: LicenseArea) => l.isChecked);\r\n  let checkedVessels: VesselData[] = this.vessels.filter((v: VesselData) => v.isChecked);\r\n\r\n  let gearFlag: boolean = false;\r\n  let licenseAreaFlag: boolean = false;\r\n  let vesselFlag: boolean = false;\r\n\r\n  if (!checkedGears.length) {\r\n    checkedGears = this.gears;\r\n  }\r\n  if (!checkedAreas.length) {\r\n    checkedAreas = this.licenseAreas;\r\n  }\r\n  if (!checkedVessels.length) {\r\n    checkedVessels = this.vessels;\r\n  }\r\n\r\n  for(let gear of checkedGears) {\r\n    if((trip.gear.logbookID === gear.logbookID)) {\r\n      gearFlag = true;\r\n      break;\r\n    }\r\n  } \r\n  if(!gearFlag) {\r\n    return false;\r\n  }\r\n\r\n  for(let area of checkedAreas) {\r\n    if((trip.licenseArea.licenseName === area.licenseName)) {\r\n      licenseAreaFlag = true;\r\n      break;\r\n    }\r\n  }\r\n  if(!licenseAreaFlag) {\r\n    return false;\r\n  }\r\n\r\n  for(let vessel of checkedVessels) {\r\n    if((trip.vessel.vesselCoastNumber === vessel.vesselCoastNumber)) {\r\n      vesselFlag = true;\r\n      break;\r\n    }\r\n  }\r\n  if(!vesselFlag) {\r\n    return false;\r\n  }\r\n\r\n  return true; // match\r\n  \r\n }\r\n\r\n clearGearFilter() : void {\r\n   this.selectedGearCount = 0;\r\n   let checkedGears: Gear[] = this.gears.filter((g: Gear) => g.isChecked);\r\n   for(let gear of checkedGears) {\r\n     gear.isChecked = false;\r\n   }\r\n }\r\n\r\n clearAreaFilter() : void {\r\n  this.selectedLicenseAreaCount = 0;\r\n  let checkedAreas: LicenseArea[] = this.licenseAreas.filter((l: LicenseArea) => l.isChecked);\r\n  for(let area of checkedAreas) {\r\n    area.isChecked = false;\r\n  }\r\n}\r\n\r\nclearVesselFilter() : void {\r\n  this.selectedVesselCount = 0;\r\n  let checkedVessels: VesselData[] = this.vessels.filter((v: VesselData) => v.isChecked);\r\n  for(let vessel of checkedVessels) {\r\n    vessel.isChecked = false;\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"container records-page-container\">\r\n\r\n    <div class=\"row\">\r\n  \r\n      <div class=\"col\" align=\"left\">\r\n        <h1 class=\"blue-trip-heading\">\r\n         Records\r\n        </h1>\r\n      </div>\r\n  \r\n      <div class=\"col\" align=\"right\">\r\n        <app-menu> </app-menu>\r\n      </div>\r\n  \r\n    </div>\r\n\r\n    <div class=\"row\"\r\n                *ngIf=\"userDetails.currHomepage === 'no-trip-home' && userDetails.prevTrips.length <= 0\">\r\n        <h3 class=\"blue-subheading\">\r\n          You have no trip records.\r\n        </h3>\r\n      </div>\r\n\r\n    <!-- Current Trip Records -->\r\n\r\n    <div *ngIf=\"userDetails.currHomepage !== 'no-trip-home'\">\r\n  \r\n        <div class=\"row\">\r\n        <h3 class=\"blue-subheading\">\r\n            Current Trip\r\n            <span style=\"display: inline\">\r\n                 #{{currTrip.tripID}}\r\n            </span>\r\n        </h3>\r\n        </div>\r\n\r\n        <!-- Start Report -->\r\n\r\n        <mat-expansion-panel>\r\n            <mat-expansion-panel-header>\r\n            <mat-panel-title class=\"panel-title\">\r\n                Start Report &nbsp;\r\n                <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                    {{formatDate(currTrip.startFishingReport.startDate)}}\r\n                </span>\r\n            </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n                <h6 class=\"field-label\">\r\n                    <span style=\"display: inline; font-weight: 700;\"> \r\n                        Date Submitted: \r\n                    </span>\r\n                    <span style=\"display:inline\">\r\n                        {{getDate(currTrip.startFishingReport.submissionDate)}}\r\n                    </span>\r\n                </h6>\r\n                <h6 class=\"field-label\">\r\n                    <span style=\"display:inline; font-weight:700;\"> \r\n                        Confirmation Number: \r\n                    </span>\r\n                    <span style=\"display:inline\">\r\n                        {{currTrip.startFishingReport.confirmationNumber}}\r\n                    </span>\r\n                </h6>\r\n                <h6 class=\"field-label\">\r\n                    <span style=\"display:inline; font-weight:700;\"> \r\n                        Transmission Status: \r\n                    </span>\r\n                    <span style=\"display:inline\"\r\n                        *ngIf=\"currTrip.startFishingReport.isTransmitted\">\r\n                        Sent To DFO\r\n                    </span>\r\n                    <span style=\"display:inline\"\r\n                        *ngIf=\"!currTrip.startFishingReport.isTransmitted\"\r\n                        class=\"not-transmitted\">\r\n                        Not Sent To DFO\r\n                    </span>\r\n                </h6>\r\n        </mat-expansion-panel>\r\n\r\n        <!-- Pause Fishing Reports -->\r\n\r\n        <mat-expansion-panel *ngIf=\"currTrip.pauseFishingReports.length>0\">\r\n            <mat-expansion-panel-header>\r\n            <mat-panel-title class=\"panel-title\">\r\n               Pause Reports &nbsp;\r\n               <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                (count: {{currTrip.pauseFishingReports.length}})\r\n              </span>\r\n            </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n                \r\n                <mat-expansion-panel *ngFor=\"let pauseReport of currTrip.pauseFishingReports.reverse()\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            <span class=\"panel-date\">\r\n                                {{formatDate(pauseReport.pauseDate)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Date Submitted: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{getDate(pauseReport.submissionDate)}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Confirmation Number: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{pauseReport.confirmationNumber}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Transmission Status: \r\n                            </span>\r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"pauseReport.isTransmitted\">\r\n                                Sent To DFO\r\n                            </span>\r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"!pauseReport.isTransmitted\"\r\n                                class=\"not-transmitted\">\r\n                                Not Sent To DFO\r\n                            </span>\r\n                        </h6>\r\n                </mat-expansion-panel>\r\n\r\n        </mat-expansion-panel>\r\n\r\n        <!-- Daily Catch Reports -->\r\n\r\n        <mat-expansion-panel *ngIf=\"currTrip.dailyCatchReports.length>0\">\r\n            <mat-expansion-panel-header>\r\n            <mat-panel-title class=\"panel-title\">\r\n                 Catch Reports &nbsp;\r\n                 <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                    (count: {{currTrip.dailyCatchReports.length}})\r\n                 </span>\r\n            </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n                \r\n                <mat-expansion-panel *ngFor=\"let catchReport of currTrip.dailyCatchReports.reverse()\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            <span class=\"panel-date\">\r\n                                {{formatDate(catchReport.dateFished)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Date Submitted: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{getDate(catchReport.submissionDate)}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Confirmation Number: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{catchReport.confirmationNumber}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Transmission Status: \r\n                            </span> \r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"catchReport.isTransmitted\">\r\n                                Sent To DFO\r\n                            </span>\r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"!catchReport.isTransmitted\"\r\n                                class=\"not-transmitted\">\r\n                                Not Sent To DFO\r\n                            </span>\r\n                        </h6>\r\n                </mat-expansion-panel>\r\n\r\n        </mat-expansion-panel>\r\n\r\n         <!-- Offload Catch Reports --> \r\n\r\n         <mat-expansion-panel *ngIf=\"currTrip.offloadReports.length>0\">\r\n            <mat-expansion-panel-header>\r\n            <mat-panel-title class=\"panel-title\">\r\n                Offload Reports &nbsp;\r\n                <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                    (count: {{currTrip.offloadReports.length}})\r\n                 </span>\r\n            </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n                \r\n                <mat-expansion-panel *ngFor=\"let offloadReport of currTrip.offloadReports.reverse()\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            <span class=\"panel-date\">\r\n                                {{formatDate(offloadReport.offloadDate)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Date Submitted: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{getDate(offloadReport.submissionDate)}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Confirmation Number: \r\n                            </span>\r\n                            <span style=\"display:inline\">\r\n                                {{offloadReport.confirmationNumber}}\r\n                            </span>\r\n                        </h6>\r\n                        <h6 class=\"field-label\">\r\n                            <span style=\"display:inline; font-weight:700;\"> \r\n                                Transmission Status: \r\n                            </span>\r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"offloadReport.isTransmitted\">\r\n                                Sent To DFO\r\n                            </span>\r\n                            <span style=\"display:inline\"\r\n                                *ngIf=\"!offloadReport.isTransmitted\"\r\n                                class=\"not-transmitted\">\r\n                                Not Sent To DFO\r\n                            </span>\r\n                        </h6>\r\n                </mat-expansion-panel>\r\n\r\n        </mat-expansion-panel>\r\n\r\n    </div>\r\n\r\n    <!-- Past Trip Records -->\r\n\r\n      <div class=\"row\"\r\n            *ngIf=\"userDetails.prevTrips.length > 0\">\r\n\r\n        <div class=\"col\" align=\"left\">\r\n            <h3 class=\"blue-subheading\">\r\n                Past Trips\r\n            </h3>\r\n        </div>\r\n\r\n        <!-- Filter Tool -->\r\n\r\n        <div class=\"col\" align=\"right\">\r\n          <button mat-button\r\n                  type=\"button\"\r\n                  class=\"filter-tool\"\r\n                  [matMenuTriggerFor]=\"filterMenu\">\r\n            <mat-icon class=\"filter-button\">\r\n              filter_list\r\n            </mat-icon>\r\n            <span class=\"panel-date\" style=\"margin-top: 10px;\">\r\n              Filter Trips\r\n            </span>\r\n          </button>\r\n          </div>   \r\n          \r\n          <mat-menu #filterMenu=\"matMenu\" class=\"filter-menu\">\r\n            <button mat-menu-item [matMenuTriggerFor]=\"gearMenu\">\r\n                <span class=\"filter-menu-item\"> Gears ({{selectedGearCount}}) </span>\r\n            </button>\r\n            <button mat-menu-item [matMenuTriggerFor]=\"licenseAreaMenu\">\r\n                <span class=\"filter-menu-item\"> License Areas ({{selectedLicenseAreaCount}}) </span>\r\n            </button>\r\n            <button mat-menu-item [matMenuTriggerFor]=\"vesselMenu\">\r\n                <span class=\"filter-menu-item\"> Vessels ({{selectedVesselCount}}) </span> \r\n            </button>\r\n          </mat-menu>\r\n\r\n          <mat-menu #gearMenu=\"matMenu\" class=\"filter-menu\">\r\n            <button mat-menu-item *ngFor=\"let gear of gears\" (click)=\"selectItem($event, gear)\">\r\n                <mat-icon color=\"{{gear.isChecked ? 'primary' : ''}}\"\r\n                          class=\"checkbox-icon\">\r\n                    {{gear.isChecked ? 'check_box' : 'check_box_outline_blank'}}\r\n                </mat-icon>\r\n                <span class=\"filter-menu-item\"> \r\n                    {{gear.name}} \r\n                </span>\r\n              </button>\r\n          </mat-menu>\r\n\r\n          <mat-menu #licenseAreaMenu=\"matMenu\" class=\"filter-menu\">\r\n            <button mat-menu-item *ngFor=\"let area of licenseAreas\" (click)=\"selectItem($event, area)\">\r\n                <mat-icon color=\"{{area.isChecked ? 'primary' : ''}}\"\r\n                          class=\"checkbox-icon\">\r\n                    {{area.isChecked?'check_box':'check_box_outline_blank'}}\r\n                </mat-icon>\r\n                <span class=\"filter-menu-item\">\r\n                     {{area.licenseName}} ({{area.licenseLocation}}) \r\n                    </span>\r\n              </button>\r\n          </mat-menu>\r\n\r\n          <mat-menu #vesselMenu=\"matMenu\" class=\"filter-menu\">\r\n            <button mat-menu-item *ngFor=\"let vessel of vessels\" (click)=\"selectItem($event, vessel)\">\r\n                <mat-icon color=\"{{vessel.isChecked?'primary':''}}\"\r\n                          class=\"checkbox-icon\">\r\n                    {{vessel.isChecked?'check_box':'check_box_outline_blank'}}\r\n                </mat-icon>\r\n                <span class=\"filter-menu-item\"> \r\n                    {{vessel.vesselName}} (VRN: {{vessel.vesselCoastNumber}}) \r\n                </span>\r\n              </button>\r\n          </mat-menu>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\" *ngIf=\"filtersApplied()\"> \r\n\r\n        <div class=\"outer\">\r\n\r\n            <div class=\"inner\">\r\n                <button mat-flat-button\r\n                        *ngIf=\"selectedGearCount>0\"\r\n                        class=\"filter-item-button\"\r\n                        (click)=\"clearGearFilter()\">\r\n                    Gears: {{selectedGearCount}}\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"inner\">\r\n                <button mat-flat-button\r\n                        *ngIf=\"selectedLicenseAreaCount>0\"\r\n                        class=\"filter-item-button\"\r\n                        (click)=\"clearAreaFilter()\">\r\n                     License Areas: {{selectedLicenseAreaCount}}\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"inner\">\r\n                <button mat-flat-button\r\n                        *ngIf=\"selectedVesselCount>0\"\r\n                        class=\"filter-item-button\"\r\n                        (click)=\"clearVesselFilter()\">\r\n                    Vessels: {{selectedVesselCount}}\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div *ngFor=\"let trip of userDetails.prevTrips.reverse()\">\r\n\r\n        <mat-expansion-panel *ngIf=\"determineTripVisibility(trip)\"\r\n                              class=\"past-trips\">\r\n\r\n            <!-- Trip Panel -->\r\n\r\n            <mat-expansion-panel-header>\r\n            <mat-panel-title class=\"panel-title\"\r\n                             style=\"font-size:18px\">\r\n                Trip #{{trip.tripID}}&nbsp;&nbsp;&nbsp;\r\n                <span class=\"panel-date\"\r\n                    style=\"font-size: 16px; font-weight: 500;\">\r\n                    {{formatDate(trip.startFishingReport.startDate)}}&nbsp; \r\n                </span>\r\n                <span span style=\"display: inline;\r\n                                  font-size: 16px;\r\n                                  font-weight: 500;\"\r\n                    class=\"panel-date\"\r\n                    *ngIf=\"trip.endFishingReport.isComplete && !trip.cancelFishingReport.isComplete\">\r\n                    - {{formatDate(trip.endFishingReport.endDate)}}\r\n                </span>\r\n                <span span style=\"display: inline; \r\n                                  font-size: 16px;\r\n                                  font-weight: 500;\"\r\n                    class=\"panel-date\"\r\n                    *ngIf=\"trip.cancelFishingReport.isComplete && !trip.endFishingReport.isComplete\">\r\n                    - {{formatDate(trip.startFishingReport.startDate)}}\r\n                </span>\r\n            </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n                <!-- General Trip Information -->\r\n\r\n                <div class=\"trip-info\" align=\"center\">\r\n                    <h6 class=\"descriptive-text\">\r\n                    Gear Type:\r\n                    <span style=\"display: inline; font-weight: 400; color: #005d87;\">\r\n                        {{trip.gear.name}} (Logbook #{{trip.gear.logbookID}})\r\n                    </span>\r\n                    </h6>\r\n                </div>\r\n                \r\n                <div class=\"trip-info\" align=\"center\">\r\n                    <h6 class=\"descriptive-text\">\r\n                    Vessel Master:\r\n                    <span style=\"display: inline; font-weight: 400; color: #005d87;\">\r\n                        {{trip.master}} (FIN: {{trip.fin}})\r\n                    </span>\r\n                    </h6>\r\n                </div>\r\n                \r\n                <div class=\"trip-info\" align=\"center\">\r\n                    <h6 class=\"descriptive-text\">\r\n                    Vessel:\r\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\r\n                        {{trip.vessel.vesselName}} (VRN: {{trip.vessel.vesselCoastNumber}})\r\n                    </span>\r\n                    </h6>\r\n                </div>\r\n                \r\n                <div class=\"trip-info\" align=\"center\">\r\n                    <h6 class=\"descriptive-text\">\r\n                    License Area:\r\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\r\n                        {{trip.licenseArea.licenseName}} ({{trip.licenseArea.licenseLocation}})\r\n                    </span>\r\n                    </h6>\r\n                </div>\r\n\r\n\r\n                <!-- Start Report -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel>\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            Start Report &nbsp; \r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                {{formatDate(trip.startFishingReport.startDate)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                            <h6 class=\"field-label\"> \r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Date Submitted: \r\n                                </span>\r\n                                <span style=\"display:inline\">\r\n                                    {{getDate(trip.startFishingReport.submissionDate)}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Confirmation Number: \r\n                                </span>\r\n                                <span style=\"display:inline\">\r\n                                    {{trip.startFishingReport.confirmationNumber}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Transmission Status: \r\n                                </span>\r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"trip.startFishingReport.isTransmitted\">\r\n                                    Sent To DFO\r\n                                </span>\r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"!trip.startFishingReport.isTransmitted\"\r\n                                    class=\"not-transmitted\">\r\n                                    Not Sent To DFO\r\n                                </span>\r\n                            </h6>\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n                <!-- End Report -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel *ngIf=\"trip.endFishingReport.isComplete\">\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            End Report &nbsp;\r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                {{formatDate(trip.endFishingReport.endDate)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Date Submitted: \r\n                                </span>\r\n                                <span style=\"display:inline\">\r\n                                    {{getDate(trip.endFishingReport.submissionDate)}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Confirmation Number: \r\n                                </span>\r\n                                <span style=\"display:inline\">\r\n                                    {{trip.endFishingReport.confirmationNumber}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Transmission Status: \r\n                                </span> \r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"trip.endFishingReport.isTransmitted\">\r\n                                    Sent To DFO\r\n                                </span>\r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"!trip.endFishingReport.isTransmitted\"\r\n                                    class=\"not-transmitted\">\r\n                                    Not Sent To DFO\r\n                                </span>\r\n                            </h6>\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n                <!-- Cancel Report -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel *ngIf=\"trip.cancelFishingReport.isComplete\">\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            Cancel Report &nbsp;\r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                {{formatDate(trip.startFishingReport.startDate)}}\r\n                            </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Date Submitted: \r\n                                </span>\r\n                                <span style=\"display:inline\">\r\n                                    {{getDate(trip.cancelFishingReport.submissionDate)}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Confirmation Number: \r\n                                </span>  \r\n                                <span style=\"display:inline\">\r\n                                    {{trip.cancelFishingReport.confirmationNumber}}\r\n                                </span>\r\n                            </h6>\r\n                            <h6 class=\"field-label\">\r\n                                <span style=\"display:inline; font-weight:700;\"> \r\n                                    Transmission Status: \r\n                                </span>\r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"trip.cancelFishingReport.isTransmitted\">\r\n                                    Sent To DFO\r\n                                </span>\r\n                                <span style=\"display:inline\"\r\n                                    *ngIf=\"!trip.cancelFishingReport.isTransmitted\"\r\n                                    class=\"not-transmitted\">\r\n                                    Not Sent To DFO\r\n                                </span>\r\n                            </h6>\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n                <!-- Pause Fishing Reports -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel *ngIf=\"trip.pauseFishingReports.length>0\">\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            Pause Reports &nbsp;\r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                (count: {{trip.pauseFishingReports.length}})\r\n                             </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n\r\n                            <div class=\"sub-trips\"\r\n                            *ngFor=\"let pauseReport of trip.pauseFishingReports.reverse()\">\r\n                            \r\n                                <mat-expansion-panel>\r\n                                    <mat-expansion-panel-header>\r\n                                        <mat-panel-title class=\"panel-title\">\r\n                                            <span class=\"panel-date\">\r\n                                                {{formatDate(pauseReport.pauseDate)}}\r\n                                            </span>\r\n                                        </mat-panel-title>\r\n                                    </mat-expansion-panel-header>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Date Submitted: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{getDate(pauseReport.submissionDate)}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Confirmation Number: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{pauseReport.confirmationNumber}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Transmission Status: \r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"pauseReport.isTransmitted\">\r\n                                                Sent To DFO\r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"!pauseReport.isTransmitted\"\r\n                                                class=\"not-transmitted\">\r\n                                                Not Sent To DFO\r\n                                            </span>\r\n                                        </h6>\r\n                                </mat-expansion-panel>\r\n\r\n                           </div>\r\n\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n                <!-- Daily Catch Reports -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel *ngIf=\"trip.dailyCatchReports.length>0\">\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            Catch Reports &nbsp;\r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                (count: {{trip.dailyCatchReports.length}})\r\n                             </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n\r\n                            <div class=\"sub-trips\" \r\n                                *ngFor=\"let catchReport of trip.dailyCatchReports.reverse()\">\r\n                            \r\n                                <mat-expansion-panel>\r\n                                    <mat-expansion-panel-header>\r\n                                        <mat-panel-title class=\"panel-title\">\r\n                                            <span class=\"panel-date\">\r\n                                                {{formatDate(catchReport.dateFished)}}\r\n                                            </span>\r\n                                        </mat-panel-title>\r\n                                    </mat-expansion-panel-header>\r\n                                        <h6 class=\"field-label\"> \r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Date Submitted: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{getDate(catchReport.submissionDate)}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Confirmation Number: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{catchReport.confirmationNumber}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Transmission Status: \r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"catchReport.isTransmitted\">\r\n                                                Sent To DFO\r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"!catchReport.isTransmitted\"\r\n                                                class=\"not-transmitted\">\r\n                                                Not Sent To DFO\r\n                                            </span>\r\n                                        </h6>\r\n                                </mat-expansion-panel>\r\n\r\n                             </div>\r\n\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n                <!-- Offload Catch Reports -->\r\n\r\n                <div class=\"sub-trips\">\r\n\r\n                    <mat-expansion-panel *ngIf=\"trip.offloadReports.length>0\">\r\n                        <mat-expansion-panel-header>\r\n                        <mat-panel-title class=\"panel-title\">\r\n                            Offload Reports &nbsp;\r\n                            <span class=\"panel-date\" style=\"font-weight: 500\">\r\n                                (count: {{trip.offloadReports.length}})\r\n                             </span>\r\n                        </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n\r\n                            <div class=\"sub-trips\"\r\n                                 *ngFor=\"let offloadReport of trip.offloadReports.reverse()\">\r\n                            \r\n                                <mat-expansion-panel>\r\n                                    <mat-expansion-panel-header>\r\n                                        <mat-panel-title class=\"panel-title\">\r\n                                            <span class=\"panel-date\">\r\n                                                {{formatDate(offloadReport.offloadDate)}}\r\n                                            </span> \r\n                                        </mat-panel-title>\r\n                                    </mat-expansion-panel-header>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Date Submitted: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{getDate(offloadReport.submissionDate)}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Confirmation Number: \r\n                                            </span>\r\n                                            <span style=\"display:inline\">\r\n                                                {{offloadReport.confirmationNumber}}\r\n                                            </span>\r\n                                        </h6>\r\n                                        <h6 class=\"field-label\">\r\n                                            <span style=\"display:inline; font-weight:700;\"> \r\n                                                Transmission Status: \r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"offloadReport.isTransmitted\">\r\n                                                Sent To DFO\r\n                                            </span>\r\n                                            <span style=\"display:inline\"\r\n                                                *ngIf=\"!offloadReport.isTransmitted\"\r\n                                                class=\"not-transmitted\">\r\n                                                Not Sent To DFO\r\n                                            </span>\r\n                                        </h6>\r\n                                </mat-expansion-panel>\r\n\r\n                            </div>\r\n\r\n                    </mat-expansion-panel>\r\n\r\n                </div>\r\n\r\n        </mat-expansion-panel>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\" style=\"padding-top: 20px;\"></div>\r\n  \r\n  </div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n  }\r\n\r\n // navigate back to the current trip homepage  \r\n  toCurrentHome(): void {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.router.navigate([this.userDetails.currHomepage]);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.router.navigate([this.userDetails.currHomepage]);\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n}\r\n\r\n  // navigate to the profile page\r\n  toProfile(): void {\r\n    this.router.navigate(['profile']);\r\n  }\r\n\r\n  // navigate to the records page\r\n  toRecords(): void {\r\n    this.router.navigate(['records-page']);\r\n  }\r\n\r\n  // navigate to the resources page (not yet implemented)\r\n  toResources(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the fishery notices page (not yet implemented)\r\n  toFisheryNotices(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // log out of account and go back to login screen\r\n  logout(): void {\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n}\r\n","<button mat-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon class=\"menu-button\">menu</mat-icon>\r\n</button>\r\n<mat-menu #menu=\"matMenu\" class=\"menu\">\r\n    <button mat-menu-item\r\n            (click)=\"toCurrentHome()\">\r\n        <mat-icon class=\"item-icon\">home</mat-icon>\r\n        <h6 class=\"menu-item\">Home/My Trip</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toProfile()\">\r\n        <mat-icon class=\"item-icon\">person</mat-icon>\r\n        <h6 class=\"menu-item\">Profile</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toRecords()\">\r\n        <mat-icon class=\"item-icon\">folder</mat-icon>\r\n        <h6 class=\"menu-item\">Records</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toResources()\">\r\n        <mat-icon class=\"item-icon\">description</mat-icon>\r\n        <h6 class=\"menu-item\">Resources</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toFisheryNotices()\">\r\n        <mat-icon class=\"item-icon\">notifications</mat-icon>\r\n        <h6 class=\"menu-item\">Fishery Notices</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"logout()\">\r\n        <mat-icon class=\"item-icon\">logout</mat-icon>\r\n        <h6 class=\"menu-item\">Logout</h6>\r\n    </button>\r\n</mat-menu>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { CancelReport } from 'src/app/data-models/report-models/cancel-report.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cancel-report',\r\n  templateUrl: './cancel-report.component.html',\r\n  styleUrls: ['./cancel-report.component.css']\r\n})\r\nexport class CancelReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  cancelReport: CancelReport = new CancelReport();\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n    this.currTrip = this.userDetails.currTrip;\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n  // send cancel report to DFO\r\n  sendToDFO(): void {\r\n    this.saveReport();\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      console.log(\"User data saved to PouchDB\");\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Cancel Fishing Report' } });\r\n    });\r\n  }\r\n\r\n  saveReport(): void {\r\n    this.cancelReport.submissionDate = new Date(); // get current date/time\r\n    this.cancelReport.isComplete = true; // set submission flag\r\n    this.currTrip.cancelFishingReport = this.cancelReport; // copy over the report\r\n\r\n    // save current trip and set homepage to no-trip\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Are you sure you want to cancel this trip?\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Doing so will send a Cancel Fishing Report to DFO. Please refer to the\r\n      <b>\r\n        Resources\r\n      </b>\r\n      page for more information on cancelled trips.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            No\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-2\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"sendToDFO()\">\r\n          <span>\r\n            Yes \r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { EndReport } from 'src/app/data-models/report-models/end-report.model';\r\n\r\n@Component({\r\n  selector: 'app-end-report',\r\n  templateUrl: './end-report.component.html',\r\n  styleUrls: ['./end-report.component.css']\r\n})\r\nexport class EndReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  endFishingReport: EndReport = new EndReport();\r\n\r\n  // report data\r\n  endForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  endDate: Date = new Date(); // page 1\r\n\r\n  // arrival form for \r\n  arrivalForm: UntypedFormGroup = new UntypedFormGroup({\r\n    site: new FormControl<string>('', [Validators.required]) // arrival page (page 4)\r\n  });\r\n  arrivalTime: { hour: number, minute: number } = { hour: 0, minute: 0 };\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize values\r\n  initialize(): void {\r\n\r\n    // get current fishing report\r\n    this.currTrip = this.userDetails.currTrip;\r\n\r\n    // set time to current time\r\n    this.arrivalTime = {\r\n      hour: this.endDate.getHours(),\r\n      minute: this.endDate.getMinutes()\r\n    };\r\n\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.endForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // save End Fishing Report and Trip Data\r\n  saveReportData(): void {\r\n\r\n    if (this.currTrip.gear.name === 'Troll' && this.currTrip.licenseArea.licenseName === 'G') {\r\n      this.setDateTime(); // add arrival time to the date\r\n      this.endFishingReport.arrivalSite = this.arrivalForm.get('site')?.value;\r\n    }\r\n    this.endFishingReport.endDate = this.endDate; // save end date to report\r\n    this.endFishingReport.isComplete = true; // set submission flag\r\n    this.endFishingReport.managementArea = this.endForm.get('managementArea')?.value;\r\n    this.endFishingReport.comments = this.endForm.get('comments')?.value;\r\n    this.endFishingReport.submissionDate = new Date(); // get current date/time\r\n    this.currTrip.endFishingReport = this.endFishingReport;\r\n    this.userDetails.currTrip = this.currTrip;\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      console.log(\"User data saved to PouchDB\");\r\n      this.toSubmittedReport();\r\n    });\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    // not on arrival page\r\n    if (this.currPage < 4) {\r\n\r\n      if (this.endForm.valid) {\r\n\r\n        // arrival details for troll gear and license area G\r\n        if (this.currTrip.startFishingReport.isComplete && this.currTrip.gear.name === 'Troll' && this.currTrip.licenseArea.licenseName === 'G') {\r\n\r\n          // set arrival time to current time\r\n          let newDate: Date = new Date();\r\n          this.arrivalTime = {\r\n            hour: newDate.getHours(),\r\n            minute: newDate.getMinutes()\r\n          };\r\n\r\n          // go to arrival page\r\n          this.currPage++;\r\n\r\n        }\r\n        else {\r\n          this.saveReportData();\r\n        }\r\n      }\r\n      else {\r\n        this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n      }\r\n\r\n    }\r\n\r\n    // arrival page\r\n    else {\r\n\r\n      if (this.arrivalForm.valid) {\r\n        this.saveReportData();\r\n      }\r\n      else {\r\n        this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  updateHomepage(homeName: string): void {\r\n    this.userDetails.currHomepage = homeName;\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      this.router.navigate(['submitted-report'], { state: { name: 'End Fishing Report' } });\r\n    });\r\n  }\r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let arrivalHours: number = this.arrivalTime.hour;\r\n    let arrivalMinutes: number = this.arrivalTime.minute;\r\n\r\n    this.endDate.setHours(arrivalHours ? arrivalHours : this.endDate.getHours());\r\n    this.endDate.setMinutes(arrivalMinutes ? arrivalMinutes : this.endDate.getMinutes());\r\n    this.endDate.setSeconds(0);\r\n    this.endDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  toSubmittedReport(): void {\r\n    if (this.currTrip.offloadNeeded) {\r\n      this.updateHomepage('offload-home');\r\n    } else {\r\n      this.updateHomepage('no-trip-home');\r\n    }\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage === 3\"\r\n                  class=\"top-icon\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n        <mat-icon *ngIf=\"currPage === 4\"\r\n                  class=\"top-icon\">\r\n          priority_high\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"endForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you end fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"endDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"endForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            End Date:\r\n          </b>\r\n          {{ endDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{endForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{endForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Troll and G -->\r\n  <form [formGroup]=\"arrivalForm\">\r\n\r\n    <div *ngIf=\"currPage === 4\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Your license area and gear type require you to provide additional information.\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Please Provide Arrival Details\r\n          </b>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Designated Landing Site\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Site Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"site\">\r\n          <mat-error *ngIf=\"arrivalForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Estimated Arrival Time (24hr)\r\n        </h6>\r\n      \r\n        <ngb-timepicker class=\"time-picker\"\r\n                        [spinners]=\"false\"\r\n                        [ngModelOptions]=\"{ standalone: true }\"\r\n                        [(ngModel)]=\"arrivalTime\">\r\n       </ngb-timepicker>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { OffloadReport } from 'src/app/data-models/report-models/offload-report.model';\r\nimport { OffloadTableDialogComponent } from 'src/app/dialogs/offload-table-dialog/offload-table-dialog.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-offload-report',\r\n  templateUrl: './offload-report.component.html',\r\n  styleUrls: ['./offload-report.component.css']\r\n})\r\nexport class OffloadReportComponent {\r\n\r\n  // table data\r\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>; // for updating the table\r\n  offloadTable: TableRules = new TableRules(); // used in add species dialog\r\n  tableDataSource: SpeciesData[] = []; // all species data currently in the table\r\n  displayedColumns: string[] = []; // columns currently being displayed in the table\r\n  weightUnitOptions: string[] = ['Lbs', 'Kgs']; //hardcoded values to be used in the form\r\n\r\n  // data preambles\r\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n  userDetails: UserData = new UserData('', '');\r\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species\r\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n\r\n  currTrip: Trip = new Trip();\r\n  offloadReport: OffloadReport = new OffloadReport();\r\n\r\n  offloadForm: UntypedFormGroup = new UntypedFormGroup({\r\n    fishSlipIssued: new FormControl<string>('', [Validators.required]), // page 2\r\n    fishSlipNumber: new FormControl<string>(''), // page 2 (conditionally validated)\r\n    weightUnits: new FormControl<string>(''), // page 2 (always auto-selected so no need for validation)\r\n  });\r\n  offloadDate: Date = new Date(); // page 1\r\n  offloadTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 1\r\n\r\n  // page controls\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onFishSlipChange();\r\n  }\r\n\r\n  onFishSlipChange(): void {\r\n    this.offloadForm.get('fishSlipIssued')?.valueChanges.subscribe((value: string) => {\r\n      const fishSlipControl: AbstractControl<any, any> | null = this.offloadForm.get('fishSlipNumber');\r\n\r\n      if(value === 'Yes'){\r\n        fishSlipControl?.setValidators([Validators.required]);\r\n      }else{\r\n        fishSlipControl?.clearValidators();\r\n      }\r\n      fishSlipControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  initialize(): void {\r\n\r\n    // get all required data\r\n    this.currTrip = this.userDetails.currTrip;\r\n    this.unfilteredFishList = LocalStorageService.getSpeciesList();\r\n    this.setTableRules(); \r\n    this.filterSpeciesData(); // filter species list available to the user\r\n\r\n    // initialize the table \r\n    this.offloadForm.patchValue({ weightUnits: 'Lbs' }); // automatically set to lbs (most common unit)\r\n    this.setDisplayedColumns();\r\n\r\n    // set the start time to the current time\r\n    this.offloadTime = {\r\n      hour: this.offloadDate.getHours(),\r\n      minute: this.offloadDate.getMinutes()\r\n    };\r\n\r\n    this.numPages = 3;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  offloadTableDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<OffloadTableDialogComponent, any> = this.dialog.open(OffloadTableDialogComponent, {\r\n      width: '500px',\r\n      height: '550px',\r\n      data: { catchReports: this.userDetails.currTrip.dailyCatchReports, tableData: this.tableDataSource }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        this.tableDataSource = result;\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // table rules will be the same as they are for the current gear's Daily Catch Report with a couple differences:\r\n    // tableType will instead be 'offload-catch' and containsSpecies list will be cleared since we are getting that info from the daily catch reports\r\n  setTableRules(): void {\r\n    this.offloadTable = LocalStorageService.getTableRules(this.currTrip.gear.name);\r\n    this.offloadTable.tableType = 'offload-catch';\r\n    this.offloadTable.containsSpecies.length = 0; // clear contains list\r\n  }\r\n\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      if(this.currPage === 1) {\r\n        this.setDateTime();\r\n      }\r\n      this.currPage++;\r\n      this.spinnerProgress += this.spinnerIncrement;\r\n    } else {\r\n      this.sendToDFO();\r\n    }\r\n  \r\n  }\r\n\r\n  toPreviousPage(): void {\r\n    if(this.currPage === 1) {\r\n      this.toHome();\r\n    }\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n  }\r\n\r\n  setDateTime(): void {\r\n\r\n    let startHours: number = this.offloadTime.hour;\r\n    let startMinutes: number = this.offloadTime.minute;\r\n\r\n    this.offloadDate.setHours(startHours ? startHours : this.offloadDate.getHours());\r\n    this.offloadDate.setMinutes(startMinutes ? startMinutes : this.offloadDate.getMinutes());\r\n    this.offloadDate.setSeconds(0);\r\n    this.offloadDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  setDisplayedColumns(): void {\r\n    if(this.getCurrentGearType() === 'Seine'){\r\n      this.displayedColumns = ['speciesName', 'weight', 'pieces'];\r\n    } else { // will be Gill Net in this case\r\n      this.displayedColumns = ['speciesName', 'pieces'];\r\n    }\r\n  \r\n  }\r\n\r\n  fishSlipVal(): string { // returns the the response to the fish slip issues question\r\n    return this.offloadForm.get('fishSlipIssued')?.value;\r\n  }\r\n\r\n  getWeightUnits(): string {\r\n    return this.offloadForm.get('weightUnits')?.value;\r\n  }\r\n\r\n  getCurrentGearType(): string {\r\n    return this.currTrip.gear.name;\r\n  }\r\n\r\n  filterSpeciesData(): void {  // filters the species list accessible to the user in the add species dialog\r\n    for (let species of this.unfilteredFishList) {\r\n      let excludeFlag: boolean = false;\r\n      for (let tableSpecies of this.tableDataSource) {\r\n        if (species.speciesName === tableSpecies.speciesName) {\r\n          excludeFlag = true; // we only want to add species to the list that are not already in the table\r\n        }\r\n      }\r\n      if (!excludeFlag) { // if the species is not already in the table\r\n        if(!this.offloadTable.excludesSpecies.includes(species.speciesName) && // only add the species if it is not excluded from in the gear type\r\n        !this.offloadTable.releaseOnlySpecies.includes(species.speciesName)) { // only add the species if it is not release-only\r\n          this.fishList.push(species);\r\n        }\r\n      } \r\n      excludeFlag = false; // reset flag\r\n    }\r\n  }\r\n\r\n   // add to, edit or delete from species catch list\r\n   addSpeciesDialog(index: number = -1): void {\r\n\r\n    // editing or deleting a species\r\n    if (index > -1) {\r\n          this.editSpecies(this.tableDataSource, index);\r\n      }\r\n\r\n    // adding a species\r\n    else {\r\n          this.addSpecies(this.tableDataSource);\r\n      }\r\n\r\n  }\r\n\r\n  // add new species to the catch\r\n  addSpecies(fishListDetails: SpeciesData[]): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.offloadTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // adding a species to the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails.push(this.getNewSpecies(result));\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n   // edit or delete a species from the catch\r\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'edit', species: this.tableDataSource[index], currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.offloadTable  }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // editing a species in the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails[index] = this.getNewSpecies(result);\r\n        }\r\n\r\n        // delete a species in the catch\r\n        else {\r\n          fishListDetails.splice(index, 1);\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  determineCellStyling(value: number): string {\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } \r\n    return 'faded-cell';\r\n  }\r\n\r\n  // get new species data from result\r\n  getNewSpecies(result: SpeciesData): SpeciesData {\r\n\r\n    let weight: number = result.offloadWeight ? +result.offloadWeight : 0;\r\n    let pieces: number = result.offloadPieces ? +result.offloadPieces : 0;\r\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n    newSpeciesData.offloadWeight = weight;\r\n    newSpeciesData.offloadPieces = pieces;\r\n\r\n    return newSpeciesData;\r\n\r\n  }\r\n\r\n  calculateTotalFish(type: string): number {\r\n\r\n    let totalFish = 0;\r\n\r\n    if(type === 'weight'){\r\n      for(var i=0; i<this.tableDataSource.length; i++){\r\n        totalFish += this.tableDataSource[i].offloadWeight;\r\n      }\r\n    }else if(type === 'pieces'){\r\n      for(var i=0; i<this.tableDataSource.length; i++){\r\n        totalFish += this.tableDataSource[i].offloadPieces;\r\n      }\r\n    }\r\n    return totalFish;\r\n  }\r\n\r\n   // update the specified species catch table\r\n   updateTable(): void {\r\n    this.table.renderRows();\r\n  }\r\n\r\n  toHome(): void { \r\n    // navigate to the user's current homepage (may be offload-home or active-trip-home)\r\n    this.router.navigate([this.userDetails.currHomepage]); \r\n  }\r\n\r\n   // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.offloadForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.tableDataSource) {\r\n      if (fish.offloadWeight > 0 || fish.offloadPieces > 0) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n\r\n  }\r\n\r\n  saveReportData(): void {\r\n\r\n    // copy relevant data to offload report object\r\n    this.offloadReport.offloadDate = this.offloadDate;\r\n    this.offloadReport.fishSlip = this.offloadForm.get('fishSlipIssued')?.value;\r\n    this.offloadReport.fishSlipNumber = this.offloadForm.get('fishSlipNumber')?.value;\r\n    this.offloadReport.speciesDataList = this.determineSpeciesData();\r\n    this.offloadReport.catchWeightUnits = this.offloadForm.get('weightUnits')?.value;\r\n    this.offloadReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.offloadReports.push(this.offloadReport);\r\n\r\n    // save to PouchDB\r\n    this.userDetails.currTrip = this.currTrip;\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      console.log(\"User data saved to PouchDB\");\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Offload Catch Report' } });\r\n    });\r\n  }\r\n\r\n  sendToDFO(): void {\r\n\r\n    if (this.offloadForm.valid) {\r\n      this.saveReportData();\r\n    }\r\n    else {\r\n      this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n    <form [formGroup]=\"offloadForm\">\r\n\r\n        <!-- Spinner & Page Count -->\r\n\r\n        <div class=\"container\"\r\n        style=\"padding-top: 20px;\">\r\n        <div class=\"row\"\r\n            align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n            <small class=\"text-muted\">\r\n            Question {{currPage}} of {{numPages}}\r\n            </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n            <small class=\"text-muted\">\r\n            Offload Catch Report\r\n            </small>\r\n        </h6>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n            align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n            <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                        mode=\"determinate\"\r\n                        [diameter]=\"50\"\r\n                        [strokeWidth]=\"6\"\r\n                        [value]=\"spinnerProgress\">\r\n            </mat-spinner>\r\n\r\n            <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color: #3ebfb9\">\r\n            check_circle_outline\r\n            </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Offload Date & Time -->\r\n\r\n        <div *ngIf=\"currPage === 1\"\r\n            class=\"container details\">\r\n\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n                When did you offload?\r\n            </h5>\r\n            </div>\r\n\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n                <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\r\n                <mat-calendar [(selected)]=\"offloadDate\"></mat-calendar>\r\n                </mat-card>\r\n                <div class=\"outer\">\r\n                  <div class=\"inner\">\r\n                    <h6 class=\"blue-label\">\r\n                      Time (24hr): &nbsp;\r\n                    </h6>\r\n                  </div>\r\n                  <div class=\"inner\">\r\n                    <ngb-timepicker class=\"time-picker\"\r\n                                    [spinners]=\"false\"\r\n                                    [ngModelOptions]=\"{ standalone: true }\"\r\n                                    [(ngModel)]=\"offloadTime\">\r\n                  </ngb-timepicker>\r\n                 </div>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Fish Slip & Units Information -->\r\n        <div *ngIf=\"currPage === 2\">\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n                Were you issued a fish slip or sale slip?\r\n                </h5>\r\n                <mat-form-field appearance=\"outline\"\r\n                                    class=\"form-field\"\r\n                                    style=\"padding-top: 15px;\">\r\n                        <mat-label>\r\n                        Select\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"fishSlipIssued\">\r\n                        <mat-option *ngFor=\"let response of responseOptions\"\r\n                                    [value]=\"response\">\r\n                            {{response}}\r\n                        </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                        </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n            <div *ngIf=\"fishSlipVal() === 'Yes'\">\r\n                    <div class=\"row\"\r\n                        align=\"center\">\r\n                \r\n                        <h5 class=\"blue-heading-title\">\r\n                        Please provide the slip number.\r\n                        </h5>\r\n                        <mat-form-field appearance=\"outline\"\r\n                                        class=\"form-field\"\r\n                                        style=\"padding-top: 15px;\">\r\n                            <mat-label>\r\n                            Slip number\r\n                            </mat-label>\r\n                            <input matInput\r\n                                inputmode=\"numeric\"\r\n                                formControlName=\"fishSlipNumber\"\r\n                                (input)=\"forbidNonNumeric('fishSlipNumber')\">\r\n                            <mat-error *ngIf=\"offloadForm.invalid\">\r\n                            Required\r\n                            </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Weight Units -->\r\n\r\n            <div class=\"row\"\r\n                    *ngIf=\"getCurrentGearType() === 'Seine'\"\r\n                    align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n               How would you like to record catch weight?\r\n                </h5>\r\n             \r\n              <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\"\r\n                                style=\"padding-top: 15px;\">\r\n                     <mat-label>\r\n                        Select Units\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"weightUnits\">\r\n                        <mat-option *ngFor=\"let weightUnit of weightUnitOptions\"\r\n                                    [value]=\"weightUnit\">\r\n                            {{weightUnit}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Catch Table Page -->\r\n        <div *ngIf=\"currPage === 3\">\r\n\r\n              <!-- Table -->\r\n\r\n              <div class=\"row\"\r\n                    align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n               Offload Catch Table\r\n                </h5>\r\n              </div>\r\n             <h6 class=\"blue-label\"\r\n                *ngIf=\"getCurrentGearType() === 'Seine'\">\r\n                Please record total catch for each species in \r\n                <b>either </b> <i>weight </i> <b>or </b> <i>pieces</i>.\r\n              </h6>\r\n              <h6 class=\"blue-label\"\r\n                *ngIf=\"getCurrentGearType() === 'Gill Net'\">\r\n                Please record total catch for each species in <i>pieces</i>.\r\n              </h6>\r\n\r\n              <button mat-raised-button\r\n                        class=\"fishing-button-light-blue\"\r\n                         type=\"button\"\r\n                         (click)=\"offloadTableDialog()\">\r\n                <span>\r\n                   Populate Table\r\n                </span>\r\n              </button>\r\n\r\n              <table mat-table\r\n              [dataSource]=\"tableDataSource\"\r\n              class=\"mat-elevation-z8 margin-table\">\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"speciesName\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef\r\n                        class=\"heading-cell\">\r\n                    Name\r\n                    </th>\r\n                    <td mat-cell\r\n                        *matCellDef=\"let element\">\r\n                    {{element.speciesName}}\r\n                    </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Weight Column (Seine only) -->\r\n                <ng-container *ngIf=\"getCurrentGearType() === 'Seine'\"\r\n                              matColumnDef=\"weight\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef\r\n                        class=\"heading-cell\">\r\n                        Weight <small>({{getWeightUnits()}})</small>\r\n                    </th>\r\n                        <td mat-cell [ngClass]=\"determineCellStyling(element.offloadWeight)\"\r\n                            *matCellDef=\"let element\">\r\n                        {{element.offloadWeight}}\r\n                        </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Pieces Column -->\r\n                <ng-container matColumnDef=\"pieces\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef\r\n                        class=\"heading-cell\">\r\n                    Pieces\r\n                    </th>\r\n                    <td mat-cell [ngClass]=\"determineCellStyling(element.offloadPieces)\"\r\n                        *matCellDef=\"let element\">\r\n                    {{element.offloadPieces}}\r\n                    </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Rows -->\r\n\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n                    (click)=\"addSpeciesDialog(index)\"></tr>\r\n                    \r\n            </table>  \r\n\r\n             <!-- Fish Totals -->\r\n\r\n            <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n                <h6 *ngIf=\"getCurrentGearType() === 'Seine'\"\r\n                     style=\"color: #003F61\">\r\n                    <b>\r\n                        Total Weight:\r\n                    </b>\r\n                    {{calculateTotalFish('weight')}}\r\n                </h6>\r\n                <h6 style=\"color: #003F61\">\r\n                    <b>\r\n                        Total Pieces:\r\n                    </b>\r\n                    {{calculateTotalFish('pieces')}}\r\n                </h6>\r\n             </div>\r\n\r\n            \r\n            <div class=\"row add-item\" style=\"padding-top: 15px;\"\r\n                align=\"center\">\r\n                <div class=\"col-2\"></div>\r\n                <div class=\"col-8\">\r\n                <div class=\"row\">\r\n                  <button mat-raised-button\r\n                          class=\"fishing-button-red\"\r\n                          type=\"button\"\r\n                          (click)=\"addSpeciesDialog()\">\r\n                    <span>\r\n                      Add New Species\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                </div>\r\n                <div class=\"col-2\"></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Confirmation Page -->\r\n        <div *ngIf=\"currPage > numPages\"\r\n            class=\"container\">\r\n            <div class=\"row\" align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n                  Is all information complete and ready to be submitted to DFO?\r\n                </h5>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Offload Date:\r\n                  </b>\r\n                  {{ offloadDate | date }}\r\n                </h6>\r\n              </div>\r\n        \r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Offload Time:\r\n                  </b>\r\n                  {{ offloadDate | date:'h:mm a' }}\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Fish Slip Issued?:\r\n                  </b>\r\n                  <span *ngIf=\"offloadForm.get('fishSlipIssued')?.errors?.required\"\r\n                        class=\"invalid-field\">\r\n                    [Required]\r\n                  </span>\r\n                  <span *ngIf=\"!offloadForm.get('fishSlipIssued')?.errors?.required\">\r\n                    {{offloadForm.get('fishSlipIssued')?.value}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\" *ngIf=\"fishSlipVal()==='Yes'\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Slip Number:\r\n                  </b>\r\n                  <span *ngIf=\"offloadForm.get('fishSlipNumber')?.errors?.required\"\r\n                        class=\"invalid-field\">\r\n                    [Required]\r\n                  </span>\r\n                  <span *ngIf=\"!offloadForm.get('fishSlipNumber')?.errors?.required\">\r\n                    {{offloadForm.get('fishSlipNumber')?.value}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\" *ngIf=\"getCurrentGearType() === 'Seine'\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>Total Weight <small>({{offloadForm.get('weightUnits')?.value}}): </small></b>\r\n                  <span>\r\n                    {{calculateTotalFish('weight')}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n      \r\n              <div class=\"row\">\r\n                  <h6 class=\"blue-label\">\r\n                   <b>Total Pieces:</b> \r\n                    <span>\r\n                      {{calculateTotalFish('pieces')}}\r\n                    </span>\r\n                  </h6>\r\n                </div>\r\n\r\n        </div>\r\n    </form>\r\n\r\n\r\n\r\n    <!-- Page navigation buttons -->\r\n    <div class=\"row bottom-buttons\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-4\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-blue\"\r\n                    type=\"button\"\r\n                    (click)=\"toPreviousPage()\">\r\n            <span>\r\n                Back\r\n            </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-4\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"submit\"\r\n                    (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n                Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n                Send to DFO\r\n            </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { PauseReport } from 'src/app/data-models/report-models/pause-report.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\n\r\n@Component({\r\n  selector: 'app-pause-report',\r\n  templateUrl: './pause-report.component.html',\r\n  styleUrls: ['./pause-report.component.css']\r\n})\r\nexport class PauseReportComponent {\r\n\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  pauseReport: PauseReport = new PauseReport();\r\n\r\n  // report data\r\n  pauseForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  pauseDate: Date = new Date(); // page 1\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n\r\n    this.currTrip = this.userDetails.currTrip;\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.pauseForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  saveReportData(): void { \r\n\r\n    // save relevant information gathered in the form\r\n    this.pauseReport.pauseDate = this.pauseDate;\r\n    this.pauseReport.managementArea = this.pauseForm.get('managementArea')?.value;\r\n    this.pauseReport.comments = this.pauseForm.get('comments')?.value;\r\n    this.pauseReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.pauseFishingReports.push(this.pauseReport);\r\n    \r\n    // save currTrip to PouchDB\r\n    this.userDetails.currTrip = this.currTrip;\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      console.log(\"User data saved to PouchDB\");\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Pause Fishing Report' } });\r\n    }); \r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n    if (this.pauseForm.valid) {\r\n      this.saveReportData();\r\n    }\r\n    else {\r\n      this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n    }\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"pauseForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When did you not fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"pauseDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"pauseForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Pause Date:\r\n          </b>\r\n          {{ pauseDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{pauseForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{pauseForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Gear } from '../../data-models/trip-models/gear-models/gear.model';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../../data-models/trip-models/license-area.model';\r\nimport { AddVesselDialogComponent } from '../../dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\n\r\n@Component({\r\n  selector: 'app-start-report',\r\n  templateUrl: './start-report.component.html',\r\n  styleUrls: ['./start-report.component.css']\r\n})\r\nexport class StartReportComponent {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // data preambles\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  gears: Gear[] = [];\r\n  userVessels: VesselData[] = [];\r\n  licenseAreas: LicenseArea[] = [];\r\n  emptyGear: Gear = new Gear('', '');\r\n  emptyVessel: VesselData = new VesselData('', '');\r\n  emptyArea: LicenseArea = new LicenseArea('', '');\r\n  prevTrips: Trip[] = [];\r\n  \r\n  // report data\r\n  startForm: UntypedFormGroup = new UntypedFormGroup({\r\n    gear: new FormControl<Gear>(this.emptyGear, [Validators.required]), // page 1\r\n    vessel: new FormControl<VesselData>(this.emptyVessel, [Validators.required]), // page 2\r\n    licenseArea: new FormControl<LicenseArea>(this.emptyArea, [Validators.required]), // page 3\r\n    master: new FormControl<string>('', [Validators.required]), // page 4\r\n    fin: new FormControl<string>('', [Validators.required]), // page 4\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 5\r\n    name: new FormControl<string>('', [Validators.required]), // page 6\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]), // page 6\r\n    comments: new FormControl<string>('') // page 7\r\n  });\r\n  startDate: Date = new Date(); // page 5\r\n  startTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 5\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n            this.initialize();\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                    this.initialize();\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    // get all gears, vessels, license areas\r\n    this.gears = this.userDetails.gears;\r\n    this.userVessels = this.userDetails.vessels;\r\n    this.licenseAreas = LocalStorageService.getLicenseAreas();\r\n\r\n    // initialize form upon first entry, or populate with completed fishing report\r\n    this.currTrip = this.userDetails.currTrip;\r\n    let currGear: Gear = this.emptyGear;\r\n    let currVessel: VesselData = this.emptyVessel;\r\n    let currArea: LicenseArea = this.emptyArea;\r\n    let currMaster: string = this.currTrip.master;\r\n    let currFin: string = this.currTrip.fin;\r\n    let currManagementArea: string = this.currTrip.startFishingReport.managementArea;\r\n    let currName: string = this.currTrip.contactName;\r\n    let currPhoneNum: Tel = this.currTrip.phoneNum;\r\n    let currComments: string = this.currTrip.startFishingReport.comments;\r\n\r\n    // set the start time to the current time\r\n    this.startTime = {\r\n      hour: this.startDate.getHours(),\r\n      minute: this.startDate.getMinutes()\r\n    };\r\n\r\n    // fishing report already has gear, vessel and area data\r\n    if (this.currTrip.startFishingReport.isInProgress || this.currTrip.startFishingReport.isComplete) {\r\n\r\n      currGear = this.setSelectedGear(new Gear('', ''));\r\n      currVessel = this.setSelectedVessel(new VesselData('', ''));\r\n      currArea = this.setSelectedArea(new LicenseArea('', ''));\r\n\r\n    }\r\n\r\n    // fishing report does not yet have gear, vessel or area data\r\n    else {\r\n      currGear = this.gears?.length ? this.gears[0] : this.emptyGear;\r\n      currVessel = this.userVessels?.length ? this.userVessels[0] : this.emptyVessel;\r\n      currArea = this.licenseAreas?.length ? this.licenseAreas[0] : this.emptyArea;\r\n    }\r\n\r\n    // populate report\r\n    this.startForm.patchValue({\r\n      gear: currGear,\r\n      vessel: currVessel,\r\n      licenseArea: currArea,\r\n      master: currMaster,\r\n      fin: currFin,\r\n      managementArea: currManagementArea,\r\n      name: currName,\r\n      phoneNum: currPhoneNum,\r\n      comments: currComments\r\n    });\r\n\r\n    // clear old data from the previous trip and save current trip\r\n    this.clearTripData();\r\n    this.saveCurrTrip();\r\n    LocalStorageService.saveUser(this.userDetails).then(() => {\r\n      this.numPages = 7;\r\n      this.spinnerIncrement = 100 / this.numPages;\r\n      this.toNextPage();\r\n    });\r\n\r\n  }\r\n\r\n  // set the radio buttons to the currently selected gear in the fishing report\r\n  setSelectedGear(currGear: Gear): Gear {\r\n    currGear = this.currTrip.gear;\r\n    for (let gear of this.gears) {\r\n      gear.isChecked = (gear.logbookID === currGear.logbookID);\r\n    }\r\n    return currGear;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected vessel in the fishing report\r\n  setSelectedVessel(currVessel: VesselData): VesselData {\r\n    currVessel = this.currTrip.vessel;\r\n    for (let vessel of this.userVessels) {\r\n      vessel.isChecked = (vessel.vesselCoastNumber === currVessel.vesselCoastNumber);\r\n    }\r\n    return currVessel;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected license area in the fishing report\r\n  setSelectedArea(currArea: LicenseArea): LicenseArea {\r\n    currArea = this.currTrip.licenseArea;\r\n    for (let licenseArea of this.licenseAreas) {\r\n      licenseArea.isChecked = (licenseArea.licenseName === currArea.licenseName);\r\n    }\r\n    return currArea;\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n\r\n      switch (this.currPage) {\r\n\r\n        // to vessel page\r\n        case 1:\r\n          let currVessel: VesselData = new VesselData('', '');\r\n          currVessel = this.setSelectedVessel(currVessel);\r\n          this.startForm.patchValue({\r\n            vessel: currVessel\r\n          });\r\n          break;\r\n\r\n        // to license area page\r\n        case 2:\r\n          let currArea: LicenseArea = new LicenseArea('', '');\r\n          currArea = this.setSelectedArea(currArea);\r\n          this.startForm.patchValue({\r\n            licenseArea: currArea\r\n          });\r\n          break;\r\n\r\n        // save date in date page\r\n        case 5:\r\n          this.setDateTime();\r\n          break;\r\n\r\n        // save phone number in contact details page\r\n        case 6:\r\n          this.telInput.touched = true;\r\n          this.telInput.stateChanges.next();\r\n          this.startForm.get('phoneNum')?.updateValueAndValidity();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n\r\n      }\r\n\r\n      this.saveCurrTrip();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        this.incrementPage();\r\n      });\r\n    }\r\n\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.saveCurrTrip();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        this.toHome();\r\n      });\r\n    }\r\n\r\n    else {\r\n\r\n      switch (this.currPage) {\r\n\r\n        // to gear page\r\n        case 2:\r\n          let currGear: Gear = new Gear('', '');\r\n          currGear = this.setSelectedGear(currGear);\r\n          this.startForm.patchValue({\r\n            gear: currGear\r\n          });\r\n          break;\r\n\r\n        // to vessel page\r\n        case 3:\r\n          let currVessel: VesselData = new VesselData('', '');\r\n          currVessel = this.setSelectedVessel(currVessel);\r\n          this.startForm.patchValue({\r\n            vessel: currVessel\r\n          });\r\n          break;\r\n\r\n        // to license area page\r\n        case 4:\r\n          let currArea: LicenseArea = new LicenseArea('', '');\r\n          currArea = this.setSelectedArea(currArea);\r\n          this.startForm.patchValue({\r\n            licenseArea: currArea\r\n          });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n\r\n      }\r\n\r\n      this.saveCurrTrip();\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        this.currPage--;\r\n        this.spinnerProgress -= this.spinnerIncrement;\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // save the current trip & Start Fishing Report information\r\n  saveCurrTrip(): void {\r\n    this.currTrip.gear = this.startForm.get('gear')?.value;\r\n    this.currTrip.vessel = this.startForm.get('vessel')?.value;\r\n    this.currTrip.licenseArea = this.startForm.get('licenseArea')?.value;\r\n    this.currTrip.master = this.startForm.get('master')?.value;\r\n    this.currTrip.fin = this.startForm.get('fin')?.value;\r\n    this.currTrip.startFishingReport.startDate = this.startDate;\r\n    this.currTrip.startFishingReport.managementArea = this.startForm.get('managementArea')?.value;\r\n    this.currTrip.contactName = this.startForm.get('name')?.value;\r\n    this.currTrip.phoneNum = this.startForm.get('phoneNum')?.value;\r\n    this.currTrip.startFishingReport.comments = this.startForm.get('comments')?.value;\r\n    this.currTrip.startFishingReport.submissionDate = new Date(); // get the current date\r\n    this.userDetails.currTrip = this.currTrip;\r\n  }\r\n\r\n  clearTripData(): void { \r\n    this.currTrip = new Trip(); //create a new trip\r\n    this.userDetails.currTrip = this.currTrip;\r\n  }\r\n\r\n  // sets flag in trip data if this trip may need an offload report\r\n  determineOffloadReport(): void {\r\n    // we only need an offload report if the trip is Seine in Area B, or Gill Net in Area C, D, or, E\r\n    let licenseName: string = this.currTrip.licenseArea.licenseName;\r\n    let gearName: string = this.currTrip.gear.name;\r\n    let isSeineOffload: boolean = gearName === 'Seine' && licenseName === 'B';\r\n    let isGillOffload: boolean = gearName === 'Gill Net' && (licenseName === 'C' || licenseName === 'D' || licenseName === 'E');\r\n    this.currTrip.offloadNeeded = isSeineOffload || isGillOffload;\r\n    this.userDetails.currTrip = this.currTrip; // save flag changes\r\n  }\r\n  \r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let startHours: number = this.startTime.hour;\r\n    let startMinutes: number = this.startTime.minute;\r\n\r\n    this.startDate.setHours(startHours ? startHours : this.startDate.getHours());\r\n    this.startDate.setMinutes(startMinutes ? startMinutes : this.startDate.getMinutes());\r\n    this.startDate.setSeconds(0);\r\n    this.startDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  // add vessels\r\n  addVesselDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddVesselDialogComponent, any> = this.dialog.open(AddVesselDialogComponent, {\r\n      width: '500px',\r\n      height: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected vessel as new vessel added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let vessel of this.userVessels) {\r\n            vessel.isChecked = false;\r\n          }\r\n          let newVessel: VesselData = new VesselData(result.vesselName, result.vesselNumber, true);\r\n          this.startForm.patchValue({\r\n            vessel: newVessel\r\n          });\r\n          this.userDetails.vessels.push(newVessel);\r\n          LocalStorageService.saveUser(this.userDetails).then(() => {\r\n            this.toNextPage();\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // check if gear value is invalid\r\n  gearInvalid(): boolean {\r\n    let gear: Gear = this.startForm.get('gear')?.value;\r\n    return !gear || !gear.isValid();\r\n  }\r\n\r\n  // check if master values are invalid\r\n  masterInvalid(): boolean {\r\n    return this.startForm.get('master')?.errors?.required || this.startForm.get('fin')?.errors?.required;\r\n  }\r\n\r\n  // check if management area is invalid\r\n  vesselInvalid(): boolean {\r\n    let vessel: VesselData = this.startForm.get('vessel')?.value;\r\n    return !vessel || !vessel.isValid();\r\n  }\r\n\r\n  // check if license area is invalid\r\n  licenseAreaInvalid(): boolean {\r\n    let licenseArea: LicenseArea = this.startForm.get('licenseArea')?.value;\r\n    return !licenseArea || !licenseArea.isValid();\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.startForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // check if contact details are invalid\r\n  contactDetailsInvalid(): boolean {\r\n    return this.startForm.get('name')?.errors?.required || this.startForm.get('phoneNum')?.errors?.required;\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    if (this.startForm.valid && !this.gearInvalid() && !this.vesselInvalid() && !this.licenseAreaInvalid()) {\r\n      this.currTrip.startFishingReport.isInProgress = false;\r\n      this.currTrip.startFishingReport.isComplete = true;\r\n      this.saveCurrTrip(); // update the user's active trip\r\n      this.determineOffloadReport(); // check if we will need an offload report for this trip\r\n      this.updateHomepage(); // update the user's active homepage\r\n      LocalStorageService.saveUser(this.userDetails).then(() => {\r\n        this.router.navigate(['submitted-report'], { state: { name: 'Trip' } });\r\n      });\r\n    }\r\n    else {\r\n      this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n    }\r\n\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'active-trip-home';\r\n  }\r\n\r\n  // go back to the home screen with no active trip\r\n  toHome(): void {\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          Start Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"startForm\">\r\n\r\n    <!-- Choose gear -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What type of gear are you using?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h5 class=\"blue-heading-subtitle\">\r\n          My available logbooks:\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"gear\">\r\n            <mat-radio-button *ngFor=\"let gear of gears\"\r\n                              [value]=\"gear\"\r\n                              [checked]=\"gear.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{gear}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose or add vessel -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Choose or add your vessel\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"vessel\">\r\n            <mat-radio-button *ngFor=\"let vessel of userVessels\"\r\n                              [value]=\"vessel\"\r\n                              [checked]=\"vessel.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{vessel}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n\r\n      <div class=\"row add-item\"\r\n           align=\"center\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addVesselDialog()\">\r\n              <span>\r\n                Add New Vessel\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose license area -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What is your License Area?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"licenseArea\">\r\n            <mat-radio-button *ngFor=\"let area of licenseAreas\"\r\n                              [value]=\"area\"\r\n                              [checked]=\"area.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{area}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 4\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Who is the vessel master?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"master\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          FIN (Fisher Identification Number)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Fisher Identification Number\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"fin\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 5\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you start fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"startDate\"></mat-calendar>\r\n          </mat-card>\r\n          <div class=\"outer\">\r\n            <div class=\"inner\">\r\n              <h6 class=\"blue-label\">\r\n                Time (24hr): &nbsp;\r\n              </h6>\r\n            </div>\r\n            <div class=\"inner\">\r\n              <ngb-timepicker class=\"time-picker\"\r\n                              [spinners]=\"false\"\r\n                              [ngModelOptions]=\"{ standalone: true }\"\r\n                              [(ngModel)]=\"startTime\">\r\n            </ngb-timepicker>\r\n           </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where will you fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 6\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Please provide onboard contact details.\r\n        </h5>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Contact Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"name\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 7\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 8\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Gear Type:\r\n          </b>\r\n          <span *ngIf=\"gearInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!gearInvalid()\">\r\n            {{startForm.get('gear')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel Master:\r\n          </b>\r\n          <span *ngIf=\"masterInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!masterInvalid()\">\r\n            {{startForm.get('master')?.value}} (FIN: {{startForm.get('fin')?.value}})\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel:\r\n          </b>\r\n          <span *ngIf=\"vesselInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!vesselInvalid()\">\r\n            {{startForm.get('vessel')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            License Area:\r\n          </b>\r\n          <span *ngIf=\"licenseAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!licenseAreaInvalid()\">\r\n            {{startForm.get('licenseArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Date:\r\n          </b>\r\n          {{ startDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Time:\r\n          </b>\r\n          {{ startDate | date:'h:mm a' }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{startForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Contact Details:\r\n          </b>\r\n          <span *ngIf=\"contactDetailsInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!contactDetailsInvalid()\">\r\n            {{startForm.get('name')?.value}}, {{startForm.get('phoneNum')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{startForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Page navigation buttons -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-submitted-report',\r\n  templateUrl: './submitted-report.component.html',\r\n  styleUrls: ['./submitted-report.component.css']\r\n})\r\nexport class SubmittedReportComponent {\r\n\r\n  // data preambles\r\n  reportName: string = \"\";\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    // get report name for submission success message\r\n    this.reportName = this.router.getCurrentNavigation()?.extras.state?.name;\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currUsername: string = LocalStorageService.getCurrUsername();\r\n      if (currUsername) {\r\n        LocalStorageService.getUserOffline(currUsername).then(() => {\r\n          let error: string = LocalStorageService.error;\r\n          if (error) {\r\n            this.authenticationService.userDataLogout(error);\r\n          }\r\n          let currUser: UserData = LocalStorageService.currUser;\r\n          if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n            this.authenticationService.userDataLogout(\"User ID or Email not defined\");\r\n          }\r\n          else {\r\n            this.userDetails = currUser;\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.authenticationService.userDataLogout(\"Username not saved to storage\");\r\n      }\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n              let email: string | undefined = user.email;\r\n              if (id && email) {\r\n                LocalStorageService.getUserOnline(id, email).then(() => {\r\n                  let error: string = LocalStorageService.error;\r\n                  if (error) {\r\n                    this.authenticationService.userDataLogout(error);\r\n                  }\r\n                  let currUser: UserData = LocalStorageService.currUser;\r\n                  if (!currUser || !currUser.userID || !currUser.userEmail) {\r\n                    this.authenticationService.userDataLogout(\"User ID or Email is undefined\");\r\n                  }\r\n                  else {\r\n                    this.userDetails = currUser;\r\n                  }\r\n                });\r\n              }\r\n              else {\r\n                this.authenticationService.userDataLogout(\"User ID or email is undefined\");\r\n              }\r\n            }\r\n            else {\r\n              this.authenticationService.userDataLogout(\"Cannot get user data\");\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.authenticationService.userDataLogout(\"Not authenticated\");\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // go back to the home screen\r\n  toHome(): void {\r\n    this.router.navigate([this.userDetails.currHomepage]);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Report Submitted!\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Please refer to the\r\n      <b>\r\n        Records\r\n      </b>\r\n      page to ensure the report has been received and to view your\r\n      <i>\r\n        {{reportName}} Confirmation Number.\r\n      </i>\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n    <div class=\"col-2\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            OK\r\n          </span>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n\r\n  }\r\n\r\n  // if a user data error occurs, log out of the app\r\n  public userDataLogout(header: string): void {\r\n    this.toastr.error(\"Returning to login...\", header);\r\n    this.logout();\r\n  }\r\n\r\n  // log out of account and go back to login screen\r\n  public logout(): void {\r\n    LocalStorageService.clearCurrUser();\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.router.navigate(['login']);\r\n      return;\r\n    }\r\n    this.auth.logout({\r\n      logoutParams: {\r\n        returnTo: this.document.location.origin\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport PouchDB from 'pouchdb';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\nimport { VesselData } from '../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../data-models/trip-models/license-area.model';\r\nimport { SpeciesData } from '../data-models/catch-table-models/species-data.model';\r\nimport { Gear } from '../data-models/trip-models/gear-models/gear.model';\r\nimport { Trip } from '../data-models/trip-models/trip.model';\r\nimport { Tel } from '../tel-input/tel-input.component';\r\nimport { Net } from '../data-models/trip-models/gear-models/net.model';\r\nimport { TableRules } from '../data-models/catch-table-models/table-rules.model';\r\nimport { StartReport } from '../data-models/report-models/start-report.model';\r\nimport { EndReport } from '../data-models/report-models/end-report.model';\r\nimport { CancelReport } from '../data-models/report-models/cancel-report.model';\r\nimport { PauseReport } from '../data-models/report-models/pause-report.model';\r\nimport { DailyCatchReport } from '../data-models/report-models/daily-catch-report.model';\r\nimport { OffloadReport } from '../data-models/report-models/offload-report.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  public static storage: PouchDB.Database;\r\n  public static currUser: UserData = new UserData('', '');\r\n  public static error: string = '';\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // save data to local storage through [key, value] pair\r\n  private static saveData(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  // get local storage data from key\r\n  private static getData(key: string): any {\r\n    let item: string | null = localStorage.getItem(key);\r\n    if (item) {\r\n      return JSON.parse(item);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // open PouchDB\r\n  public static openPouchDB(): void {\r\n    LocalStorageService.storage = new PouchDB('srif-pouchdb', { revs_limit: 500, auto_compaction: true });\r\n  }\r\n\r\n  // get current user or create new user in PouchDB online\r\n  public static getUserOnline(id: string, email: string): Promise<boolean> {\r\n\r\n    return new Promise<boolean>((res) => {\r\n      LocalStorageService.storage.get(email).then((doc: any) => {\r\n        console.log(\"User:\", doc);\r\n        LocalStorageService.validateGetUserOnline(doc, id, email);\r\n        res(true);\r\n      }).catch(function (err: { name: string }) {\r\n        LocalStorageService.error = err.name;\r\n        console.log(\"Error:\", LocalStorageService.error);\r\n        if (err.name === 'not_found') {\r\n          console.log(\"User not found, creating user...\");\r\n          let newUser: UserData = new UserData(id, email);\r\n          newUser.gears = LocalStorageService.setGears();\r\n          newUser.currHomepage = LocalStorageService.setHomepage();\r\n          LocalStorageService.saveCurrUsername(email);\r\n          LocalStorageService.currUser = newUser;\r\n          LocalStorageService.storage.put({\r\n            _id: email,\r\n            user: newUser\r\n          });\r\n          res(true);\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  // get current user or create new user in PouchDB\r\n  public static getUserOffline(email: string): Promise<boolean> {\r\n\r\n    return new Promise<boolean>((res) => {\r\n      LocalStorageService.storage.get(email).then((doc: any) => {\r\n        console.log(\"User:\", doc);\r\n        LocalStorageService.validateGetUserOffline(doc);\r\n        res(true);\r\n      }).catch(function (err: { name: string }) {\r\n        LocalStorageService.error = err.name;\r\n        console.log(\"Error:\", LocalStorageService.error);\r\n        if (err.name === 'not_found') {\r\n          console.log(\"User not found\");\r\n          LocalStorageService.currUser = new UserData('', '');\r\n          res(false);\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  // ensure that user data exists\r\n  private static validateGetUserOnline(doc: any, id: string, email: string): void {\r\n\r\n    let user: any = doc.user;\r\n    let thisUser: UserData = new UserData('', '');\r\n\r\n    if (!user || !user.userID || !user.userEmail) {\r\n      console.log(\"User data corrupted... creating new user data\");\r\n      thisUser.userID = id;\r\n      thisUser.userEmail = email;\r\n      thisUser.gears = LocalStorageService.setGears();\r\n      thisUser.currHomepage = LocalStorageService.setHomepage();\r\n      LocalStorageService.saveCurrUsername(thisUser.userEmail);\r\n      LocalStorageService.currUser = thisUser;\r\n      doc.user = thisUser;\r\n      LocalStorageService.storage.put(doc);\r\n      return;\r\n    }\r\n\r\n    // get user data\r\n    LocalStorageService.parseUserData(user, thisUser);\r\n\r\n  }\r\n\r\n  // ensure that user data exists\r\n  private static validateGetUserOffline(doc: any): void {\r\n\r\n    let user: any = doc.user;\r\n    let thisUser: UserData = new UserData('', '');\r\n\r\n    if (!user || !user.userID || !user.userEmail) {\r\n      console.log(\"User data corrupted\");\r\n      LocalStorageService.currUser = thisUser;\r\n      return;\r\n    }\r\n\r\n    // get user data\r\n    LocalStorageService.parseUserData(user, thisUser);\r\n\r\n  }\r\n\r\n  // parse all of the possible data from PouchDB into a UserData object\r\n  private static parseUserData(user: any, thisUser: UserData): void {\r\n    thisUser.userID = user.userID;\r\n    thisUser.userEmail = user.userEmail;\r\n    thisUser.firstName = user.firstName ?? '';\r\n    thisUser.lastName = user.lastName ?? '';\r\n    thisUser.contactEmail = user.contactEmail ?? '';\r\n    thisUser.address = user.address ?? '';\r\n    thisUser.city = user.city ?? '';\r\n    thisUser.postalCode = user.postalCode ?? '';\r\n    thisUser.phoneNum = LocalStorageService.validatePhoneNum(user.phoneNum);\r\n    thisUser.gears = LocalStorageService.validateGears(user.gears);\r\n    thisUser.vessels = LocalStorageService.validateVessels(user.vessels);\r\n    thisUser.currTrip = LocalStorageService.validateCurrTrip(user.currTrip);\r\n    thisUser.currTrip.startFishingReport = LocalStorageService.validateStartFishingReport(user.currTrip.startFishingReport);\r\n    thisUser.prevTrips = LocalStorageService.validatePrevTrips(user.prevTrips);\r\n    thisUser.nets = LocalStorageService.validateNets(user.nets);\r\n    thisUser.currHomepage = LocalStorageService.validateHomepage(user.currHomepage);\r\n    LocalStorageService.saveCurrUsername(thisUser.userEmail);\r\n    LocalStorageService.currUser = thisUser;\r\n    LocalStorageService.error = '';\r\n  }\r\n\r\n  // save user data to PouchDB\r\n  public static saveUser(userData: UserData): Promise<boolean> {\r\n\r\n    return new Promise<boolean>((res) => {\r\n      let email: string = userData.userEmail;\r\n      LocalStorageService.storage.get(email).then((doc: any) => {\r\n        console.log(\"User:\", doc);\r\n        LocalStorageService.validateSaveUser(doc, userData);\r\n        res(true);\r\n      }).catch(function (err: { name: string }) {\r\n        LocalStorageService.error = err.name;\r\n        console.log(\"Error:\", LocalStorageService.error);\r\n        if (err.name === 'not_found') {\r\n          console.log(\"User not found, creating user...\");\r\n          LocalStorageService.storage.put({\r\n            _id: email,\r\n            user: userData\r\n          });\r\n          res(true);\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  // ensure that user data exists\r\n  private static validateSaveUser(doc: any, userData: UserData): void {\r\n    LocalStorageService.saveCurrUsername(userData.userEmail);\r\n    LocalStorageService.currUser = userData;\r\n    doc.user = userData;\r\n    LocalStorageService.storage.put(doc);\r\n  }\r\n\r\n  // save the current user Auth0 email for offline data retrieval\r\n  public static saveCurrUsername(username: string): void {\r\n    LocalStorageService.saveData('username', username);\r\n  }\r\n\r\n  // get the current user ID for offline data retrieval\r\n  public static getCurrUsername(): string {\r\n    return LocalStorageService.getData('username');\r\n  }\r\n\r\n  // clear current username from local storage\r\n  public static clearCurrUser(): void {\r\n    LocalStorageService.currUser = new UserData('', '');\r\n    LocalStorageService.saveData('username', '');\r\n  }\r\n\r\n  // check if homepage is defined\r\n  private static validateHomepage(homepage: string | null): string {\r\n    if (!homepage) {\r\n      return LocalStorageService.setHomepage();\r\n    }\r\n    return homepage;\r\n  }\r\n\r\n  // check if the user phone number is defined\r\n  private static validatePhoneNum(phoneNum: any): Tel {\r\n    if (!phoneNum) {\r\n      return new Tel('', '', '');\r\n    }\r\n    return LocalStorageService.getPhoneNum(phoneNum);\r\n  }\r\n\r\n  // check if the user phone number is defined\r\n  private static validateDate(date: any): Date {\r\n    return new Date(date ?? new Date());\r\n  }\r\n\r\n  // check if user gears are defined\r\n  private static validateGears(gears: any): Gear[] {\r\n\r\n    // if gears do not exist, set the default ones\r\n    if (!gears) {\r\n      return LocalStorageService.setGears();\r\n    }\r\n\r\n    let userGears: Gear[] = [];\r\n    for (let gear of gears) {\r\n      userGears.push(new Gear(gear.name, gear.logbookID, gear.isChecked));\r\n    }\r\n    return userGears;\r\n\r\n  }\r\n\r\n  // check if user vessels are defined\r\n  private static validateVessels(vessels: any): VesselData[] {\r\n\r\n    // if vessels do not exist, return an empty array\r\n    if (!vessels) {\r\n      return [];\r\n    }\r\n\r\n    let userVessels: VesselData[] = [];\r\n    for (let vessel of vessels) {\r\n      userVessels.push(new VesselData(vessel.vesselName, vessel.vesselCoastNumber, vessel.isChecked));\r\n    }\r\n    return userVessels;\r\n\r\n  }\r\n\r\n  // check if user nets are defined\r\n  private static validateNet(net: any): Net {\r\n\r\n    // if nets do not exist, set the default ones\r\n    if (!net) {\r\n      return new Net('', '', '', '', '', '', '', '', '');\r\n    }\r\n\r\n    return new Net(\r\n      net.netType ?? '',\r\n      net.netName ?? '',\r\n      net.length ?? '',\r\n      net.weedlineDepth ?? '',\r\n      net.weedlineDepthUnits ?? '',\r\n      net.hangRatio ?? '',\r\n      net.meshSize ?? '',\r\n      net.meshSizeUnits ?? '',\r\n      net.numMeshes ?? '',\r\n      net.numStrands ?? '',\r\n      net.isChecked ?? false\r\n    );\r\n\r\n  }\r\n\r\n  // check if user nets are defined\r\n  private static validateNets(nets: any): Net[] {\r\n\r\n    // if nets do not exist, set the default ones\r\n    if (!nets) {\r\n      return [];\r\n    }\r\n\r\n    let userNets: Net[] = [];\r\n    for (let net of nets) {\r\n      userNets.push(new Net(\r\n        net.netType ?? '',\r\n        net.netName ?? '',\r\n        net.length ?? '',\r\n        net.weedlineDepth ?? '',\r\n        net.weedlineDepthUnits ?? '',\r\n        net.hangRatio ?? '',\r\n        net.meshSize ?? '',\r\n        net.meshSizeUnits ?? '',\r\n        net.numMeshes ?? '',\r\n        net.numStrands ?? '',\r\n        net.isChecked ?? false\r\n      ));\r\n    }\r\n    return userNets;\r\n\r\n  }\r\n\r\n  // check if species data list is defined\r\n  private static validateSpeciesData(speciesDataList: any): SpeciesData[] {\r\n\r\n    // if list does not exist, set an empty array\r\n    if (!speciesDataList) {\r\n      return [];\r\n    }\r\n\r\n    let thisSpeciesDataList: SpeciesData[] = [];\r\n    for (let speciesData of speciesDataList) {\r\n      let species: SpeciesData = new SpeciesData(speciesData.speciesName ?? '');\r\n      species.kept = speciesData.kept ?? 0;\r\n      species.released = speciesData.released ?? 0;\r\n      species.offloadWeight = speciesData.offloadWeight ?? 0;\r\n      species.offloadPieces = speciesData.offloadPieces ?? 0;\r\n      thisSpeciesDataList.push(species);\r\n    }\r\n    return thisSpeciesDataList;\r\n  }\r\n\r\n  // check if the user's Start Fishing Report is defined\r\n  private static validateStartFishingReport(startReport: any): StartReport {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!startReport) {\r\n      return LocalStorageService.setStartReport();\r\n    }\r\n\r\n    let userStartReport: StartReport = new StartReport();\r\n    userStartReport.startDate = LocalStorageService.validateDate(startReport.startDate);\r\n    userStartReport.managementArea = startReport.managementArea ?? '';\r\n    userStartReport.comments = startReport.comments ?? '';\r\n    userStartReport.confirmationNumber = startReport.confirmationNumber ?? '';\r\n    userStartReport.submissionDate = LocalStorageService.validateDate(startReport.submissionDate);\r\n    userStartReport.isComplete = startReport.isComplete ?? false;\r\n    userStartReport.isInProgress = startReport.isInProgress ?? false;\r\n    userStartReport.isTransmitted = startReport.isTransmitted ?? false;\r\n    return userStartReport;\r\n\r\n  }\r\n\r\n  // check if the user's End Fishing Report is defined\r\n  private static validateEndFishingReport(endReport: any): EndReport {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!endReport) {\r\n      return LocalStorageService.setEndReport();\r\n    }\r\n\r\n    let userEndReport: EndReport = new EndReport();\r\n    userEndReport.endDate = LocalStorageService.validateDate(endReport.endDate);\r\n    userEndReport.managementArea = endReport.managementArea ?? '';\r\n    userEndReport.comments = endReport.comments ?? '';\r\n    userEndReport.confirmationNumber = endReport.confirmationNumber ?? '';\r\n    userEndReport.submissionDate = LocalStorageService.validateDate(endReport.submissionDate);\r\n    userEndReport.arrivalSite = endReport.arrivalSite ?? '';\r\n    userEndReport.isComplete = endReport.isComplete ?? false;\r\n    userEndReport.isTransmitted = endReport.isTransmitted ?? false;\r\n    return userEndReport;\r\n\r\n  }\r\n\r\n  // check if the user's Cancel Fishing Report is defined\r\n  private static validateCancelFishingReport(cancelReport: any): CancelReport {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!cancelReport) {\r\n      return LocalStorageService.setCancelReport();\r\n    }\r\n\r\n    let userCancelReport: CancelReport = new CancelReport();\r\n    userCancelReport.confirmationNumber = cancelReport.confirmationNumber ?? '';\r\n    userCancelReport.submissionDate = LocalStorageService.validateDate(cancelReport.submissionDate);\r\n    userCancelReport.isComplete = cancelReport.isComplete ?? false;\r\n    userCancelReport.isTransmitted = cancelReport.isTransmitted ?? false;\r\n    return userCancelReport;\r\n\r\n  }\r\n\r\n  // check if the user's Pause Fishing Reports are defined\r\n  private static validatePauseFishingReports(pauseReports: any): PauseReport[] {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!pauseReports) {\r\n      return [];\r\n    }\r\n\r\n    let userPauseReports: PauseReport[] = [];\r\n    for (let pauseReport of pauseReports) {\r\n      let userPauseReport: PauseReport = new PauseReport();\r\n      userPauseReport.pauseDate = LocalStorageService.validateDate(pauseReport.pauseDate);\r\n      userPauseReport.managementArea = pauseReport.managementArea ?? '';\r\n      userPauseReport.comments = pauseReport.comments ?? '';\r\n      userPauseReport.confirmationNumber = pauseReport.confirmationNumber ?? '';\r\n      userPauseReport.submissionDate = LocalStorageService.validateDate(pauseReport.submissionDate);\r\n      userPauseReport.isTransmitted = pauseReport.isTransmitted ?? false;\r\n      userPauseReports.push(userPauseReport);\r\n    }\r\n    return userPauseReports;\r\n\r\n  }\r\n\r\n  // check if the user's Daily Catch Reports are defined\r\n  private static validateDailyCatchReports(dailyCatchReports: any): DailyCatchReport[] {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!dailyCatchReports) {\r\n      return [];\r\n    }\r\n\r\n    let userDailyCatchReports: DailyCatchReport[] = [];\r\n    for (let dailyCatchReport of dailyCatchReports) {\r\n      let userDailyCatchReport: DailyCatchReport = new DailyCatchReport();\r\n      userDailyCatchReport.netUsed = LocalStorageService.validateNet(dailyCatchReport.netUsed);\r\n      userDailyCatchReport.dateFished = LocalStorageService.validateDate(dailyCatchReport.dateFished);\r\n      userDailyCatchReport.hoursFished = dailyCatchReport.hoursFished ?? '';\r\n      userDailyCatchReport.managementArea = dailyCatchReport.managementArea ?? '';\r\n      userDailyCatchReport.subArea = dailyCatchReport.subArea ?? '';\r\n      userDailyCatchReport.numSets = dailyCatchReport.numSets ?? '';\r\n      userDailyCatchReport.frozenOrIced = dailyCatchReport.frozenOrIced ?? '';\r\n      userDailyCatchReport.speciesDataList = LocalStorageService.validateSpeciesData(dailyCatchReport.speciesDataList);\r\n      userDailyCatchReport.nonFish = dailyCatchReport.nonFish ?? '';\r\n      userDailyCatchReport.comments = dailyCatchReport.comments ?? '';\r\n      userDailyCatchReport.confirmationNumber = dailyCatchReport.confirmationNumber ?? '';\r\n      userDailyCatchReport.submissionDate = LocalStorageService.validateDate(dailyCatchReport.submissionDate);\r\n      userDailyCatchReport.isTransmitted = dailyCatchReport.isTransmitted ?? false;\r\n      userDailyCatchReports.push(userDailyCatchReport);\r\n    }\r\n    return userDailyCatchReports;\r\n\r\n  }\r\n\r\n  // check if the user's Offload Reports are defined\r\n  private static validateOffloadReports(offloadReports: any): OffloadReport[] {\r\n\r\n    // if it is not defined, set a new one\r\n    if (!offloadReports) {\r\n      return [];\r\n    }\r\n\r\n    let userOffloadReports: OffloadReport[] = [];\r\n    for (let offloadReport of offloadReports) {\r\n      let userOffloadReport: OffloadReport = new OffloadReport();\r\n      userOffloadReport.offloadDate = LocalStorageService.validateDate(offloadReport.offloadDate);\r\n      userOffloadReport.fishSlip = offloadReport.fishSlip ?? '';\r\n      userOffloadReport.fishSlipNumber = offloadReport.fishSlipNumber ?? '';\r\n      userOffloadReport.catchWeightUnits = offloadReport.catchWeightUnits ?? '';\r\n      userOffloadReport.speciesDataList = LocalStorageService.validateSpeciesData(offloadReport.speciesDataList);\r\n      userOffloadReport.confirmationNumber = offloadReport.confirmationNumber ?? '';\r\n      userOffloadReport.submissionDate = LocalStorageService.validateDate(offloadReport.submissionDate);\r\n      userOffloadReport.isTransmitted = offloadReport.isTransmitted ?? false;\r\n      userOffloadReports.push(userOffloadReport);\r\n    }\r\n    return userOffloadReports;\r\n\r\n  }\r\n\r\n  // check if the user's previous trips are defined\r\n  private static validatePrevTrips(prevTrips: any): Trip[] {\r\n\r\n    // if they are not defined, return an empty array\r\n    if (!prevTrips) {\r\n      return [];\r\n    }\r\n\r\n    let prevTripList: Trip[] = [];\r\n    for (let trip of prevTrips) {\r\n      let userPrevTrip: Trip = new Trip();\r\n      userPrevTrip.tripID = trip.tripID ?? '';\r\n      userPrevTrip.gear = trip.gear;\r\n      userPrevTrip.vessel = trip.vessel;\r\n      userPrevTrip.licenseArea = trip.licenseArea;\r\n      userPrevTrip.master = trip.master ?? '';\r\n      userPrevTrip.fin = trip.fin ?? '';\r\n      userPrevTrip.contactName = trip.contactName ?? '';\r\n      userPrevTrip.phoneNum = LocalStorageService.validatePhoneNum(trip.phoneNum);\r\n      userPrevTrip.offloadNeeded = trip.offloadNeeded ?? false;\r\n      userPrevTrip.isSaved = trip.isSaved ?? false;\r\n      userPrevTrip.startFishingReport = LocalStorageService.validateStartFishingReport(trip.startFishingReport);\r\n      userPrevTrip.endFishingReport = LocalStorageService.validateEndFishingReport(trip.endFishingReport);\r\n      userPrevTrip.cancelFishingReport = LocalStorageService.validateCancelFishingReport(trip.cancelFishingReport);\r\n      userPrevTrip.pauseFishingReports = LocalStorageService.validatePauseFishingReports(trip.pauseFishingReports);\r\n      userPrevTrip.dailyCatchReports = LocalStorageService.validateDailyCatchReports(trip.dailyCatchReports);\r\n      userPrevTrip.offloadReports = LocalStorageService.validateOffloadReports(trip.offloadReports);\r\n      prevTripList.push(userPrevTrip);\r\n    }\r\n    return prevTrips;\r\n  }\r\n\r\n  // check if user trip is defined\r\n  public static validateCurrTrip(currTrip: any): Trip {\r\n\r\n    // if trip does not exist, set a default one\r\n    if (!currTrip) {\r\n      return LocalStorageService.setCurrTrip();\r\n    }\r\n\r\n    let userCurrTrip: Trip = new Trip();\r\n    userCurrTrip.tripID = currTrip.tripID ?? '';\r\n    userCurrTrip.master = currTrip.master ?? '';\r\n    userCurrTrip.fin = currTrip.fin ?? '';\r\n    userCurrTrip.contactName = currTrip.contactName ?? '';\r\n    userCurrTrip.phoneNum = LocalStorageService.getPhoneNum(currTrip.phoneNum);\r\n\r\n    let userGear: any = currTrip.gear;\r\n    let userVessel: any = currTrip.vessel;\r\n    let userLicenseArea: any = currTrip.licenseArea;\r\n    userCurrTrip.gear = new Gear(userGear.name, userGear.logbookID, userGear.isChecked);\r\n    userCurrTrip.vessel = new VesselData(userVessel.vesselName, userVessel.vesselCoastNumber, userVessel.isChecked);\r\n    userCurrTrip.licenseArea = new LicenseArea(userLicenseArea.licenseName, userLicenseArea.licenseLocation, userLicenseArea.isChecked);\r\n    userCurrTrip.offloadNeeded = currTrip.offloadNeeded ?? false;\r\n    userCurrTrip.isSaved = currTrip.isSaved ?? false;\r\n    userCurrTrip.startFishingReport = LocalStorageService.validateStartFishingReport(currTrip.startFishingReport);\r\n    userCurrTrip.endFishingReport = LocalStorageService.validateEndFishingReport(currTrip.endFishingReport);\r\n    userCurrTrip.cancelFishingReport = LocalStorageService.validateCancelFishingReport(currTrip.cancelFishingReport);\r\n    userCurrTrip.pauseFishingReports = LocalStorageService.validatePauseFishingReports(currTrip.pauseFishingReports);\r\n    userCurrTrip.dailyCatchReports = LocalStorageService.validateDailyCatchReports(currTrip.dailyCatchReports);\r\n    userCurrTrip.offloadReports = LocalStorageService.validateOffloadReports(currTrip.offloadReports);\r\n    return userCurrTrip;\r\n\r\n  }\r\n\r\n  // get phone number from PouchDB\r\n  private static getPhoneNum(phoneNum: any): Tel {\r\n    return new Tel(phoneNum.area.toString(), phoneNum.exchange.toString(), phoneNum.subscriber.toString());\r\n  }\r\n\r\n  // set the sign up page to a new user\r\n  private static setHomepage(): string {\r\n    return 'sign-up';\r\n  }\r\n\r\n  // set a start fishing report to a new user \r\n  private static setStartReport(): StartReport {\r\n    return new StartReport();\r\n  }\r\n\r\n  // set an end fishing report to a new user \r\n  private static setEndReport(): EndReport {\r\n    return new EndReport();\r\n  }\r\n\r\n  // set a cancel fishing report to a new user \r\n  private static setCancelReport(): CancelReport {\r\n    return new CancelReport();\r\n  }\r\n\r\n  // set the default data for the current trip\r\n  private static setCurrTrip(): Trip {\r\n    return new Trip();\r\n  }\r\n\r\n  // set standardized gears\r\n  // will change when we implement purchasable logbooks\r\n  private static setGears(): Gear[] {\r\n    return [\r\n      new Gear('Gill Net', '1111', true),\r\n      new Gear('Seine', '2222'),\r\n      new Gear('Troll', '3333')\r\n    ];\r\n  }\r\n\r\n  public static getLicenseAreas(): LicenseArea[] {\r\n    return [\r\n      new LicenseArea(\"A\", \"Seine North\", true),\r\n      new LicenseArea(\"B\", \"Seine South\"),\r\n      new LicenseArea(\"C\", \"Gillnet North\"),\r\n      new LicenseArea(\"D\", \"Gillnet Vancouver Island\"),\r\n      new LicenseArea(\"E\", \"Gillnet Fraser + VI\"),\r\n      new LicenseArea(\"F\", \"Troll North\"),\r\n      new LicenseArea(\"G\", \"Troll WCVI\"),\r\n      new LicenseArea(\"H\", \"Troll Fraser\")\r\n    ];\r\n  }\r\n\r\n  // NOTE: we will eventually get a species list from the DFO database\r\n  // will need to put this into PouchDB when that happens\r\n  public static getSpeciesList(): SpeciesData[] {\r\n    return [\r\n      new SpeciesData('Sockeye'),\r\n      new SpeciesData('Coho'),\r\n      new SpeciesData('Pink'),\r\n      new SpeciesData('Chum'),\r\n      new SpeciesData('Chinook'),\r\n      new SpeciesData('Steelhead'),\r\n      new SpeciesData('Atlantic'),\r\n      new SpeciesData('Dogfish'),\r\n      new SpeciesData('Green Sturgeon'),\r\n      new SpeciesData('Grilse'),\r\n      new SpeciesData('Jack Chinook'),\r\n      new SpeciesData('Adult Chinook'),\r\n      new SpeciesData('Legal Sized Chinook'),\r\n      new SpeciesData('Sublegal Sized Chinook'),\r\n      new SpeciesData('White Sturgeon'),\r\n      new SpeciesData('Mackerel'),\r\n      new SpeciesData('Lingcod'),\r\n      new SpeciesData('Halibut'),\r\n      new SpeciesData('Aurora Rockfish'),\r\n      new SpeciesData('Canary Rockfish'),\r\n      new SpeciesData('China Rockfish'),\r\n      new SpeciesData('Tiger Rockfish'),\r\n      new SpeciesData('Redbanded Rockfish'),\r\n      new SpeciesData('Unknown Rockfish')\r\n    ];\r\n  }\r\n\r\n  // get table rules for catch table data\r\n  public static getTableRules(gearName: string): TableRules {\r\n\r\n    let newTable: TableRules = new TableRules();\r\n\r\n    // gill net\r\n    if (gearName === 'Gill Net') {\r\n      newTable = new TableRules('daily-catch', 'Gill Net');\r\n      newTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Chinook', 'Steelhead', 'Atlantic', 'Dogfish', 'Green Sturgeon', 'White Sturgeon'];\r\n      newTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n      newTable.releaseOnlySpecies = ['Steelhead', 'White Sturgeon', 'Green Sturgeon'];\r\n    }\r\n\r\n    // seine\r\n    else if (gearName === 'Seine') {\r\n      newTable = new TableRules('daily-catch', 'Seine');\r\n      newTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Steelhead', 'Atlantic', 'Jack Chinook', 'Adult Chinook'];\r\n      newTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n    }\r\n\r\n    // troll\r\n    else if (gearName === 'Troll') {\r\n      newTable = new TableRules('daily-catch', 'Troll');\r\n      newTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Atlantic', 'Grilse', 'Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n      newTable.excludesSpecies = ['Jack Chinook'];\r\n      newTable.releaseOnlySpecies = ['Sublegal Sized Chinook', 'Grilse'];\r\n    }\r\n\r\n    return newTable;\r\n\r\n  }\r\n\r\n  // get the net types for gill net reports\r\n  public static getNetTypes(): string[] {\r\n    return [\r\n      'Alaska Twist',\r\n      'Multi Strand',\r\n      'Combination'\r\n    ];\r\n  }\r\n\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Component, ElementRef, Inject, Input, OnDestroy, Optional, Self, ViewChild } from '@angular/core';\r\nimport { FormBuilder, NgControl, AbstractControl, ControlValueAccessor, Validators } from '@angular/forms';\r\nimport { MatFormField, MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\n\r\n/*\r\n  Much thanks to https://material.angular.io/guide/creating-a-custom-form-field-control for the entirety of this component\r\n*/\r\n\r\nexport class Tel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) { }\r\n\r\n  public toString() {\r\n    return this.area + this.exchange + this.subscriber;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tel-input',\r\n  templateUrl: './tel-input.component.html',\r\n  styleUrls: ['./tel-input.component.css'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: TelInputComponent }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class TelInputComponent implements ControlValueAccessor, MatFormFieldControl<Tel>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('area') areaInput!: HTMLInputElement;\r\n  @ViewChild('exchange') exchangeInput!: HTMLInputElement;\r\n  @ViewChild('subscriber') subscriberInput!: HTMLInputElement;\r\n\r\n  parts = this._formBuilder.group({\r\n    area: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    exchange: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    subscriber: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\r\n  });\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  touched = false;\r\n  controlType = 'example-tel-input';\r\n  id = `example-tel-input-${TelInputComponent.nextId++}`;\r\n  onChange = (_: any) => { };\r\n  onTouched = () => { };\r\n\r\n  get empty() {\r\n    const {\r\n      value: { area, exchange, subscriber },\r\n    } = this.parts;\r\n\r\n    return !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy!: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string = '';\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: BooleanInput) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: BooleanInput) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): Tel | null {\r\n    if (this.parts.valid) {\r\n      const {\r\n        value: { area, exchange, subscriber },\r\n      } = this.parts;\r\n      return new Tel(area!, exchange!, subscriber!);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: Tel | null) {\r\n    const { area, exchange, subscriber } = tel || new Tel('', '', '');\r\n    this.parts.setValue({ area, exchange, subscriber });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.touched;\r\n  }\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n  ) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  onFocusIn(event: FocusEvent) {\r\n    if (!this.focused) {\r\n      this.focused = true;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  onFocusOut(event: FocusEvent) {\r\n    if (!this._elementRef.nativeElement.contains(event.relatedTarget as Element)) {\r\n      this.touched = true;\r\n      this.focused = false;\r\n      this.onTouched();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program');\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement.querySelector(\r\n      '.example-tel-input-container',\r\n    )!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    if (this.parts.controls.subscriber.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.exchange.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.area.valid) {\r\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\r\n    } else {\r\n      this._focusMonitor.focusVia(this.areaInput, 'program');\r\n    }\r\n  }\r\n\r\n  writeValue(tel: Tel | null): void {\r\n    this.value = tel;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''), { onlySelf: true, emitEvent: false });\r\n    this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n}\r\n","<div role=\"group\" class=\"example-tel-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField.getLabelId()\"\r\n     (focusin)=\"onFocusIn($event)\"\r\n     (focusout)=\"onFocusOut($event)\">\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"area\" size=\"3\"\r\n         maxLength=\"3\"\r\n         aria-label=\"Area code\"\r\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\r\n         #area>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"exchange\"\r\n         maxLength=\"3\"\r\n         size=\"3\"\r\n         aria-label=\"Exchange code\"\r\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\r\n         #exchange>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (input)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  auth0: {\r\n    domain: 'dev-5eiy2cesgxurrngi.us.auth0.com',\r\n    clientId: 'JLatVELLRM16M3zBNhUZi27hZXGe5jci',\r\n    redirect_uri: window.location.origin,\r\n    audience: 'https://dev-5eiy2cesgxurrngi.us.auth0.com/userinfo'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"names":["RouterModule","StartReportComponent","EndReportComponent","PauseReportComponent","CancelReportComponent","OffloadReportComponent","SubmittedReportComponent","LoginComponent","SignUpComponent","GillNetReportComponent","SeineReportComponent","TrollReportComponent","NoTripHomeComponent","ActiveTripHomeComponent","OffloadHomeComponent","ProfileComponent","RecordsPageComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","LocalStorageService","AppComponent","constructor","openPouchDB","selectors","decls","vars","template","i0","isDevMode","BrowserModule","MaterialModule","FormsModule","ReactiveFormsModule","ToastrModule","AuthModule","ServiceWorkerModule","BrowserAnimationsModule","AddVesselDialogComponent","NgbTimepickerModule","AddSpeciesDialogComponent","OnlineStatusModule","TelInputComponent","environment","env","AddNetDialogComponent","MenuComponent","MatIconModule","DatePipe","OffloadTableDialogComponent","ContactInfoDialogComponent","AppModule","bootstrap","domain","auth0","clientId","authorizationParams","redirect_uri","audience","cacheLocation","register","enabled","registrationStrategy","declarations","UntypedFormGroup","FormControl","Validators","OnlineStatusType","DOCUMENT","auth","router","onlineStatusService","toastr","document","email","required","getStatus","ONLINE","isOnline","onlineStatus","loginButton","ngOnInit","loginForm","get","valueChanges","subscribe","emailErrors","errors","emailError","attemptLogin","window","location","reload","isAuthenticated$","authd","query","search","shouldParseResult","includes","handleRedirectCallback","value","console","log","err","history","replaceState","title","loginWithPopup","user$","user","id","sub","getUserOnline","then","error","currUser","userID","userEmail","currHomepage","navigate","valid","username","getUserOffline","consts","ctx","UserData","generalValidator","Tel","authenticationService","firstName","lastName","contactEmail","address","city","postalCode","pattern","postalRegex","phoneNum","signupForm","contactEmailErrors","postalCodeErrors","postalError","phoneNumValid","area","exchange","subscriber","backToLogin","OFFLINE","logout","attemptSignUp","telInput","touched","stateChanges","next","updateValueAndValidity","sending","userDetails","saveUser","viewQuery","MatTable","SpeciesData","Net","TableRules","DailyCatchReport","Trip","dialog","net","emptyNet","hoursFished","mgmtArea","zoneArea","numSets","comments","nonFish","Date","currUsername","getCurrUsername","userDataLogout","initialize","onNonFishChange","gillnetForm","commentControl","setValidators","clearValidators","currTrip","userNets","nets","unfilteredFishList","getSpeciesList","gillNetTable","getTableRules","filterTableData","populateReport","pages","numPages","spinnerIncrement","displayedColumns","toNextPage","currNet","getSelectedNet","patchValue","numReports","dailyCatchReports","length","prevReport","managementArea","subArea","species","containsSpecies","speciesName","fishListDetails","push","excludesSpecies","fishList","determineCellStyling","name","isReleaseOnly","releaseOnlySpecies","isChecked","setSelectedNet","netName","saveUserNets","currPage","incrementPage","sendToDFO","spinnerProgress","toPreviousPage","toHome","addNetDialog","dialogRef","open","width","height","afterClosed","result","newNet","netType","netLength","netDepth","netUnits","hangRatio","meshSize","meshUnits","numMeshes","numStrands","updateTable","table","renderRows","calculateTotalFish","type","totalFish","i","kept","released","getNewSpecies","newSpeciesData","addSpecies","data","identifier","currentFishList","filteredFishList","tableInfo","editSpecies","index","splice","addSpeciesDialog","netInvalid","isValid","managementAreaInvalid","nonFishInvalid","saveCatchReport","state","forbidNonNumeric","controlName","control","setValue","replace","validateHoursFished","regex","test","determineSpeciesData","tempFishArray","fish","catchReport","netUsed","dateFished","catchDate","speciesDataList","submissionDate","seineForm","seineTable","frozenOrIced","trollForm","trollTable","frozenOrIcedInvalid","toString","gearName","tableType","CancelReport","confirmationNumber","EndReport","endDate","OffloadReport","offloadDate","PauseReport","pauseDate","StartReport","isComplete","startDate","Gear","checked","logbookID","isEqual","inputGear","depth","depthUnits","ratio","mesh","strands","weedlineDepth","weedlineDepthUnits","meshSizeUnits","baseValid","LicenseArea","licenseName","licenseLocation","inputArea","VesselData","gear","vessel","licenseArea","vname","vcoastNum","vesselName","vesselCoastNumber","Validator","invalid","speciesValidator","speciesList","toLowerCase","MAT_DIALOG_DATA","netTypes","getNetTypes","netTypeVal","netForm","onNetTypeChange","strandControl","addNet","clearInputs","close","markAllAsTouched","deleteNet","controls","reset","stringList","offloadWeight","offloadPieces","speciesData","speciesForm","fillSpecies","setDialogConfig","speciesChange","filteredSpecies","displayedTitle","speciesIsReadOnly","currentSpeciesList","checkSpecies","getCurrentFormSpecies","deleteSpecies","vesselNumber","vesselForm","addVessel","deleteVessel","profileForm","updateContactInfo","update","attemptUpdate","datePipe","dataType","piecesIncluded","selectionType","catchReportData","catchReports","tableData","offloadForm","onDataTypeChange","onSelectionTypeChange","selectionTypeControl","selectReports","dateSelection","listSelection","getDate","date","evaluateDateInfo","clearTime","getTime","evaluateSelectedInfo","catchReportList","report","date1","date2","addSpeciesToData","speciesNamesList","pieces","tempSpecies","currSpecies","getTableData","select","list","isIncluded","currDate","setHours","setMinutes","setSeconds","setMilliseconds","closeDialog","populateTable","includePieces","getGearName","toCatchReport","gearType","toEndReport","toPauseReport","toCancelReport","toOffloadReport","saveDailyCatchReports","tempTrip","tempReport","saveOldReport","isSaved","startFishingReport","master","fin","contactName","offloadNeeded","endFishingReport","cancelFishingReport","pauseFishingReports","offloadReports","prevTrips","toStartReport","setNewTripFlag","requestToStartNewTrip","clearNewTripFlag","toNoTripHome","A11yModule","ClipboardModule","DragDropModule","PortalModule","ScrollingModule","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatRippleModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","OverlayModule","logbooks","gears","vessels","logbook","containsGillNet","contactInfoDialog","success","addVesselDialog","newVessel","formatDate","formattedDate","transform","makeGearList","makeLicenseAreaList","getLicenseAreas","makeVesselList","vesselList","currVessel","gearList","currGear","areas","currArea","licenseAreas","determineButtonStyling","filtersApplied","selectedGearCount","selectedLicenseAreaCount","selectedVesselCount","selectItem","$event","item","stopPropagation","preventDefault","updateSelectedItems","filter","g","l","v","determineTripVisibility","trip","checkedGears","checkedAreas","checkedVessels","gearFlag","licenseAreaFlag","vesselFlag","clearGearFilter","clearAreaFilter","clearVesselFilter","toCurrentHome","toProfile","toRecords","toResources","toFisheryNotices","saveReport","cancelReport","site","hour","minute","arrivalTime","getHours","getMinutes","endForm","saveReportData","setDateTime","arrivalSite","arrivalForm","toSubmittedReport","newDate","updateHomepage","homeName","arrivalHours","arrivalMinutes","fishSlipIssued","fishSlipNumber","weightUnits","onFishSlipChange","fishSlipControl","setTableRules","filterSpeciesData","setDisplayedColumns","offloadTime","offloadTableDialog","tableDataSource","offloadTable","startHours","startMinutes","getCurrentGearType","fishSlipVal","getWeightUnits","excludeFlag","tableSpecies","weight","offloadReport","fishSlip","catchWeightUnits","pauseForm","pauseReport","emptyGear","emptyVessel","emptyArea","userVessels","currMaster","currFin","currManagementArea","currName","currPhoneNum","currComments","startTime","isInProgress","setSelectedGear","setSelectedVessel","setSelectedArea","startForm","clearTripData","saveCurrTrip","determineOffloadReport","isSeineOffload","isGillOffload","gearInvalid","masterInvalid","vesselInvalid","licenseAreaInvalid","contactDetailsInvalid","reportName","getCurrentNavigation","extras","AuthenticationService","header","clearCurrUser","logoutParams","returnTo","origin","factory","providedIn","PouchDB","saveData","key","localStorage","setItem","JSON","stringify","getData","getItem","parse","storage","revs_limit","auto_compaction","Promise","res","doc","validateGetUserOnline","catch","newUser","setGears","setHomepage","saveCurrUsername","put","_id","validateGetUserOffline","thisUser","parseUserData","validatePhoneNum","validateGears","validateVessels","validateCurrTrip","validateStartFishingReport","validatePrevTrips","validateNets","validateHomepage","userData","validateSaveUser","homepage","getPhoneNum","validateDate","userGears","validateNet","validateSpeciesData","thisSpeciesDataList","startReport","setStartReport","userStartReport","isTransmitted","validateEndFishingReport","endReport","setEndReport","userEndReport","validateCancelFishingReport","setCancelReport","userCancelReport","validatePauseFishingReports","pauseReports","userPauseReports","userPauseReport","validateDailyCatchReports","userDailyCatchReports","dailyCatchReport","userDailyCatchReport","validateOffloadReports","userOffloadReports","userOffloadReport","prevTripList","userPrevTrip","tripID","setCurrTrip","userCurrTrip","userGear","userVessel","userLicenseArea","newTable","coerceBooleanProperty","MatFormFieldControl","MAT_FORM_FIELD","Subject","_formBuilder","_focusMonitor","_elementRef","_formField","ngControl","group","minLength","maxLength","nextId","_","valueAccessor","empty","parts","shouldLabelFloat","focused","placeholder","_placeholder","_required","disabled","_disabled","disable","enable","tel","errorState","ngOnDestroy","complete","stopMonitoring","onFocusIn","event","onFocusOut","nativeElement","contains","relatedTarget","onTouched","autoFocusNext","nextElement","focusVia","autoFocusPrev","prevElement","setDescribedByIds","ids","controlElement","querySelector","setAttribute","join","onContainerClick","subscriberInput","exchangeInput","areaInput","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_handleInput","onlySelf","emitEvent","provide","useExisting","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}