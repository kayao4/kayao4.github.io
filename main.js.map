{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/sign-up/sign-up.component.ts","./src/app/authentication/sign-up/sign-up.component.html","./src/app/catch/gill-net-report/gill-net-report.component.ts","./src/app/catch/gill-net-report/gill-net-report.component.html","./src/app/catch/seine-report/seine-report.component.ts","./src/app/catch/seine-report/seine-report.component.html","./src/app/catch/troll-report/troll-report.component.ts","./src/app/catch/troll-report/troll-report.component.html","./src/app/data-models/catch-table-models/species-data.model.ts","./src/app/data-models/catch-table-models/table-rules.model.ts","./src/app/data-models/report-models/cancel-report.model.ts","./src/app/data-models/report-models/daily-catch-report.model.ts","./src/app/data-models/report-models/end-report.model.ts","./src/app/data-models/report-models/offload-report.model.ts","./src/app/data-models/report-models/pause-report.model.ts","./src/app/data-models/report-models/start-report.model.ts","./src/app/data-models/trip-models/gear-models/gear.model.ts","./src/app/data-models/trip-models/gear-models/net.model.ts","./src/app/data-models/trip-models/license-area.model.ts","./src/app/data-models/trip-models/trip.model.ts","./src/app/data-models/user-models/user-data.model.ts","./src/app/data-models/user-models/vessel-data.model.ts","./src/app/data-models/validator.model.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.ts","./src/app/dialogs/add-net-dialog/add-net-dialog.component.html","./src/app/dialogs/add-species-dialog/add-species-dialog.component.ts","./src/app/dialogs/add-species-dialog/add-species-dialog.component.html","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.ts","./src/app/dialogs/add-vessel-dialog/add-vessel-dialog.component.html","./src/app/home/active-trip-home/active-trip-home.component.ts","./src/app/home/active-trip-home/active-trip-home.component.html","./src/app/home/no-trip-home/no-trip-home.component.ts","./src/app/home/no-trip-home/no-trip-home.component.html","./src/app/home/offload-home/offload-home.component.ts","./src/app/home/offload-home/offload-home.component.html","./src/app/material/material.module.ts","./src/app/menu-items/records-page/records-page.component.ts","./src/app/menu-items/records-page/records-page.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/reports/cancel-report/cancel-report.component.ts","./src/app/reports/cancel-report/cancel-report.component.html","./src/app/reports/end-report/end-report.component.ts","./src/app/reports/end-report/end-report.component.html","./src/app/reports/offload-report/offload-report.component.ts","./src/app/reports/offload-report/offload-report.component.html","./src/app/reports/pause-report/pause-report.component.ts","./src/app/reports/pause-report/pause-report.component.html","./src/app/reports/start-report/start-report.component.ts","./src/app/reports/start-report/start-report.component.html","./src/app/reports/submitted-report/submitted-report.component.ts","./src/app/reports/submitted-report/submitted-report.component.html","./src/app/services/local-storage.service.ts","./src/app/tel-input/tel-input.component.ts","./src/app/tel-input/tel-input.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\r\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\r\nimport { RecordsPageComponent } from './menu-items/records-page/records-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'sign-up', component: SignUpComponent },\r\n  { path: 'start-report', component: StartReportComponent },\r\n  { path: 'end-report', component: EndReportComponent },\r\n  { path: 'pause-report', component: PauseReportComponent },\r\n  { path: 'cancel-report', component: CancelReportComponent },\r\n  { path: 'offload-report', component: OffloadReportComponent },\r\n  { path: 'submitted-report', component: SubmittedReportComponent },\r\n  { path: 'gill-net-report', component: GillNetReportComponent },\r\n  { path: 'seine-report', component: SeineReportComponent }, \r\n  { path: 'troll-report', component: TrollReportComponent },\r\n  { path: 'no-trip-home', component: NoTripHomeComponent },\r\n  { path: 'active-trip-home', component: ActiveTripHomeComponent },\r\n  { path: 'offload-home', component: OffloadHomeComponent },\r\n  { path: 'records-page', component: RecordsPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bcsrif-elog';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from '@auth0/auth0-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { AddVesselDialogComponent } from './dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { NgbTimepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddSpeciesDialogComponent } from './dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { OnlineStatusModule } from 'ngx-online-status';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { TelInputComponent } from './tel-input/tel-input.component';\r\nimport { environment as env } from '../environments/environment';\r\nimport { PauseReportComponent } from './reports/pause-report/pause-report.component';\r\nimport { CancelReportComponent } from './reports/cancel-report/cancel-report.component';\r\nimport { SubmittedReportComponent } from './reports/submitted-report/submitted-report.component';\r\nimport { StartReportComponent } from './reports/start-report/start-report.component';\r\nimport { EndReportComponent } from './reports/end-report/end-report.component';\r\nimport { GillNetReportComponent } from './catch/gill-net-report/gill-net-report.component';\r\nimport { AddNetDialogComponent } from './dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { SeineReportComponent } from './catch/seine-report/seine-report.component';\r\nimport { TrollReportComponent } from './catch/troll-report/troll-report.component';\r\nimport { NoTripHomeComponent } from './home/no-trip-home/no-trip-home.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ActiveTripHomeComponent } from './home/active-trip-home/active-trip-home.component';\r\nimport { OffloadHomeComponent } from './home/offload-home/offload-home.component';\r\nimport { OffloadReportComponent } from './reports/offload-report/offload-report.component';\r\nimport { RecordsPageComponent } from './menu-items/records-page/records-page.component';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AddVesselDialogComponent,\r\n    AddSpeciesDialogComponent,\r\n    SignUpComponent,\r\n    TelInputComponent,\r\n    PauseReportComponent,\r\n    CancelReportComponent,\r\n    SubmittedReportComponent,\r\n    StartReportComponent,\r\n    EndReportComponent,\r\n    GillNetReportComponent,\r\n    AddNetDialogComponent,\r\n    SeineReportComponent,\r\n    TrollReportComponent,\r\n    NoTripHomeComponent,\r\n    MenuComponent,\r\n    ActiveTripHomeComponent,\r\n    OffloadHomeComponent,\r\n    OffloadReportComponent,\r\n    RecordsPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MaterialModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    OnlineStatusModule,\r\n    ToastrModule.forRoot(),\r\n    AppRoutingModule,\r\n    AuthModule.forRoot({\r\n      domain: env.auth0.domain,\r\n      clientId: env.auth0.clientId,\r\n      authorizationParams: {\r\n        redirect_uri: env.auth0.redirect_uri,\r\n        audience: env.auth0.audience\r\n      },\r\n      cacheLocation: 'localstorage'\r\n    }),\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: !isDevMode(),\r\n      // Register the ServiceWorker as soon as the application is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerImmediately'\r\n    }),\r\n    BrowserAnimationsModule,\r\n    NgbTimepickerModule\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // check online status\r\n  isOnline: boolean = false;\r\n  onlineStatus: string = '';\r\n  loginButton: string = '';\r\n\r\n  // form validator error messages\r\n  emailError: string = 'Required';\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    email: new FormControl<string>('', [Validators.required, Validators.email])\r\n  });\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.isOnline = true;\r\n      this.onlineStatus = 'online';\r\n      this.loginButton = 'Login or Sign Up with Auth0';\r\n    }\r\n    else {\r\n      this.isOnline = false;\r\n      this.onlineStatus = 'offline';\r\n      this.loginButton = 'Login Offline';\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // email validation\r\n    this.form.get('email')?.valueChanges.subscribe(() => {\r\n      let emailErrors: ValidationErrors | null | undefined = this.form.get('email')?.errors;\r\n      if (emailErrors?.required) {\r\n        this.emailError = 'Required';\r\n      }\r\n      else if (emailErrors?.email) {\r\n        this.emailError = 'Invalid email format';\r\n      }\r\n      else {\r\n        this.emailError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // press the login button\r\n  attemptLogin(): void {\r\n\r\n    // attempt to login with the entered credentials\r\n    // solution from https://community.auth0.com/t/isauthenticated-is-always-false/84794/3\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n\r\n      // if went offline while on page, reload app\r\n      if (!this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      this.auth.isAuthenticated$.subscribe((value: boolean) => {\r\n        if (!value) {\r\n          let query: string = window.location.search;\r\n          let shouldParseResult: boolean = query.includes(\"code=\") && query.includes(\"state=\");\r\n          if (shouldParseResult) {\r\n            try {\r\n              this.auth.handleRedirectCallback().subscribe((value) => {\r\n                console.log(\"Logged in!\", value);\r\n              });\r\n            } catch (err: unknown) {\r\n              console.log(\"Error parsing redirect:\", err);\r\n            }\r\n            window.history.replaceState({}, this.document.title, \"/\");\r\n          }\r\n          else {\r\n            this.auth.loginWithPopup().subscribe((value: void) => {\r\n              console.log(\"Logging in...\", value);\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              let id: string | undefined = user.sub;\r\n\r\n              // check if user is new\r\n              if (id && this.isNewUser(id)) {\r\n                this.localStorageService.createNewUser(user);\r\n              }\r\n\r\n              this.localStorageService.saveData('currID', id);\r\n              let currHomepage: string = this.localStorageService.getUser(user).currHomepage;\r\n              this.router.navigate([currHomepage]);\r\n              return;\r\n            }\r\n            this.toastr.error(\"Try logging in again\", \"Login error\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // offline login\r\n    else {\r\n\r\n      // if went online while on page, reload app\r\n      if (this.isOnline) {\r\n        window.location.reload();\r\n        return;\r\n      }\r\n\r\n      if (this.form.valid) {\r\n        let userIDs: string[] = this.localStorageService.getAllUserIDs();\r\n        for (let id of userIDs) {\r\n          let thisUser: UserData = this.localStorageService.getUserByID(id);\r\n          if (thisUser.userEmail === this.form.get('email')?.value) {\r\n            this.localStorageService.saveData('currID', id);\r\n            let currHomepage: string = this.localStorageService.getUserByID(id).currHomepage;\r\n            this.router.navigate([currHomepage]);\r\n            return;\r\n          }\r\n        }\r\n        this.toastr.error(\"User email does not exist\", \"Invalid email\");\r\n      }\r\n    }\r\n  }\r\n\r\n  // check if user is a new user\r\n  isNewUser(id: string): boolean {\r\n\r\n    let ids: string[] = this.localStorageService.getAllUserIDs();\r\n    for (let existingID of ids) {\r\n      if (id === existingID) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container login-container\">\r\n\r\n  <div class=\"row\">\r\n    <h1 align=\"center\">\r\n      BC SRIF Login\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h2 align=\"center\">\r\n      You are currently {{onlineStatus}}\r\n    </h2>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\"\r\n        *ngIf=\"!isOnline\"\r\n        class=\"row\">\r\n\r\n    <h6 class=\"blue-heading\">\r\n      Email\r\n    </h6>\r\n\r\n    <mat-form-field appearance=\"outline\"\r\n                    class=\"form-field\">\r\n      <mat-label>\r\n        Email\r\n      </mat-label>\r\n      <input matInput\r\n             required\r\n             formControlName=\"email\">\r\n      <mat-error>\r\n        {{emailError}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n  </form>\r\n\r\n  <div class=\"row justify-content-center\">\r\n    <button mat-flat-button\r\n            class=\"login-button\"\r\n            type=\"submit\"\r\n            (click)=\"attemptLogin()\">\r\n      {{loginButton}}\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\nimport { FormControl, UntypedFormGroup, Validators, ValidationErrors } from '@angular/forms';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // show error message when field is invalid\r\n  finError: string = '';\r\n\r\n  // disable all buttons when authenticating\r\n  sending: boolean = false;\r\n\r\n  // regular expression for validation\r\n  regex: string = '^([a-zA-Z]|[0-9]|\\.|@)+$';\r\n\r\n  signupForm: UntypedFormGroup = new UntypedFormGroup({\r\n    firstName: new FormControl<string>('', [Validators.required]),\r\n    lastName: new FormControl<string>('', [Validators.required]),\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]),\r\n    fin: new FormControl<string>('', [Validators.minLength(5), Validators.maxLength(8), Validators.pattern(this.regex)])\r\n  });\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // license number validation\r\n    this.signupForm.get('fin')?.valueChanges.subscribe(() => {\r\n      let finErrors: ValidationErrors | null | undefined = this.signupForm.get('fin')?.errors;\r\n      if (finErrors?.minlength || finErrors?.maxlength) {\r\n        this.finError = '5 - 8 characters required';\r\n      }\r\n      else if (finErrors?.pattern) {\r\n        this.finError = 'Invalid characters detected, numbers and letters only';\r\n      }\r\n      else {\r\n        this.finError = '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // for testing\r\n  toHome(): void {\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n  // go back to the login screen\r\n  toLogin(): void {\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.toastr.error(\"Cannot log out while offline\", \"Logout failed\");\r\n      return;\r\n    }\r\n    this.auth.logout({\r\n      logoutParams: {\r\n        returnTo: this.document.location.origin\r\n      }\r\n    });\r\n  }\r\n\r\n  // attempt to sign up for an account\r\n  attemptSignUp(): void {\r\n\r\n    this.sending = true;\r\n\r\n    this.telInput.touched = true;\r\n    this.telInput.stateChanges.next();\r\n    this.signupForm.get('phoneNum')?.updateValueAndValidity();\r\n\r\n    // check username and password validity\r\n    if (this.signupForm.valid) {\r\n\r\n      if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n        this.toastr.error(\"Cannot sign up while offline\", \"Sign up failed\");\r\n        return;\r\n      }\r\n\r\n      // navigate to home screen\r\n      this.router.navigate(['home']);\r\n\r\n    }\r\n    else {\r\n      this.toastr.error(\"Missing credentials\", \"Sign up failed\");\r\n    }\r\n\r\n    this.sending = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container sign-up-container\">\r\n\r\n  <!-- Page title -->\r\n  <div class=\"row\">\r\n    <h1 align=\"center\">\r\n      BC SRIF Sign Up\r\n    </h1>\r\n  </div>\r\n\r\n  <div class=\"row justify-content-center center\">\r\n\r\n    <!-- Sign up form -->\r\n    <form class=\"form-sign-up\"\r\n          [formGroup]=\"signupForm\"\r\n          (ngSubmit)=\"attemptSignUp()\">\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-heading\">\r\n          Vessel Master First Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Vessel Master First Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"firstName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Vessel Master Last Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Vessel Master Last Name\r\n          </mat-label>\r\n          <input matInput\r\n                 required\r\n                 formControlName=\"lastName\">\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"signupForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <h6 class=\"blue-heading\">\r\n          FIN (Fisher Identification Number)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\"\r\n                        class=\"form-field\">\r\n          <mat-label>\r\n            Fisher Identification Number\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"fin\">\r\n          <mat-error>\r\n            {{finError}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <!-- Sign Up to continue account creation -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-orange\"\r\n                    type=\"submit\"\r\n                    aria-label=\"Sign Up\"\r\n                    [disabled]=\"sending\">\r\n              <span>\r\n                Sign Up\r\n                <mat-icon>\r\n                  arrow_forward\r\n                </mat-icon>\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Back to log in screen -->\r\n      <div class=\"row button-sign-up\">\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"color-button-blue\"\r\n                    type=\"button\"\r\n                    [disabled]=\"sending\"\r\n                    (click)=\"toHome()\">\r\n              <span>\r\n                <mat-icon>\r\n                  arrow_back\r\n                </mat-icon>\r\n                Return to Home\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { Net } from '../../data-models/trip-models/gear-models/net.model';\r\nimport { AddNetDialogComponent } from '../../dialogs/add-net-dialog/add-net-dialog.component';\r\nimport { TableRules } from '../../data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from '../../data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gill-net-report',\r\n  templateUrl: './gill-net-report.component.html',\r\n  styleUrls: ['./gill-net-report.component.css']\r\n})\r\nexport class GillNetReportComponent {\r\n\r\n  // for updating the table\r\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n  fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n\r\n  // data preambles\r\n  catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n  userNets: Net[] = [];\r\n  emptyNet: Net = new Net('', '', '', '', '', '', '', '', '');\r\n  gillNetTable: TableRules = new TableRules(); // used to filter table data\r\n\r\n  // values associated with each page\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n\r\n    net: new FormControl<Net>(this.emptyNet, [Validators.required]), //page 1\r\n    hoursFished: new FormControl<string>(''), //page 2\r\n\r\n    //page 3\r\n    mgmtArea: new FormControl<string>('', [Validators.required]),\r\n    zoneArea: new FormControl<string>(''),\r\n    numSets: new FormControl<string>(''),\r\n\r\n    //page 5\r\n    comments: new FormControl<string>(''), // conditional validation\r\n    nonFish: new FormControl<string>('', [Validators.required]) \r\n  });\r\n\r\n  catchDate: Date = new Date(); //page 2 \r\n  displayedColumns: string[] = []; // page 4\r\n\r\n\r\n  // section to section\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onNonFishChange();\r\n  }\r\n\r\n  onNonFishChange(): void {\r\n    this.form.get('nonFish')?.valueChanges.subscribe((value: string) => {\r\n      const commentControl: AbstractControl<any, any> | null = this.form.get('comments');\r\n\r\n      if(value === 'Yes'){\r\n        commentControl?.setValidators([Validators.required]);\r\n      }\r\n      else {\r\n        commentControl?.clearValidators();\r\n      }\r\n      commentControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    // get all required data\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n    this.userNets = this.userDetails.nets;\r\n    this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n    this.gillNetTable = this.localStorageService.getTableRules('Gill Net');\r\n\r\n    this.filterTableData(); // filters table data as well as species list accessible to the user\r\n    this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n    // fill catch page details\r\n    let pages: number = 5; \r\n    this.numPages = pages;\r\n    this.spinnerIncrement = 100 / pages;\r\n\r\n\r\n    this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n\r\n    // go to first screen\r\n    this.toNextPage();\r\n  }\r\n\r\n  populateReport(): void {\r\n\r\n    // initialize form with net data\r\n    let currNet: Net = this.getSelectedNet();\r\n    this.form.patchValue({\r\n      net: currNet\r\n    });\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.form.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  filterTableData(): void {  // filters table data as well as species list accessible to the user\r\n    for(let species of this.unfilteredFishList) {\r\n      if(this.gillNetTable.containsSpecies.includes(species.speciesName)) {\r\n        this.fishListDetails.push(species);\r\n      }\r\n      if(!this.gillNetTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n    }\r\n  }\r\n\r\n  determineCellStyling(value: number, name: string = ''): string {\r\n\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } else if (this.isReleaseOnly(name)) { \r\n      return 'release-only-cell';\r\n    }\r\n\r\n    return 'faded-cell';\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.gillNetTable.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  // save current user data to local storage\r\n  saveUserDetails(): void {\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // get the currently selected net\r\n  getSelectedNet(): Net {\r\n    for (let net of this.userNets) {\r\n      if (net.isChecked) {\r\n        return net;\r\n      }\r\n    }\r\n    return this.userNets[0];\r\n  }\r\n\r\n  // set the radio buttons to the currently selected net in the catch report\r\n  setSelectedNet(currNet: Net): void {\r\n    for (let net of this.userNets) {\r\n      net.isChecked = (net.netName === currNet.netName);\r\n    }\r\n  }\r\n\r\n  // save the selected user nets for UI\r\n  saveUserNets(): void {\r\n    let currNet: Net = this.form.get('net')?.value;\r\n    this.setSelectedNet(currNet);\r\n    this.form.patchValue({\r\n      net: currNet\r\n    });\r\n    this.saveUserDetails();\r\n  }\r\n\r\n  // go to the next page\r\n  toNextPage(): void {\r\n\r\n    // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n      this.saveUserNets();\r\n      this.incrementPage();\r\n    }\r\n\r\n    // page is final page\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // go forward a page, changing the current page number and the spinner progress\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // go back to previous page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.saveUserNets();\r\n      this.toHome();\r\n    }\r\n    else {\r\n      this.currPage--;\r\n      this.spinnerProgress -= this.spinnerIncrement;\r\n    }\r\n\r\n  }\r\n\r\n  // add a new net\r\n  addNetDialog(): void {\r\n\r\n    const dialogRef: MatDialogRef<AddNetDialogComponent, any> = this.dialog.open(AddNetDialogComponent, {\r\n      width: '500px',\r\n      height: '550px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected net as new net added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let net of this.userNets) { // un-check other nets\r\n            net.isChecked = false;\r\n          }\r\n          let newNet: Net = new Net(result.netType, result.netName, result.netLength, result.netDepth, result.netUnits, \r\n            result.hangRatio, result.meshSize, result.meshUnits, result.numMeshes, result.numStrands, true); \r\n           this.form.patchValue({\r\n             net: newNet\r\n           });\r\n           this.userDetails.nets.push(newNet);\r\n           this.saveUserDetails(); //updating local storage\r\n           this.toNextPage();\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // update the specified species catch table\r\n  updateTable(): void {\r\n    this.table.renderRows();\r\n  }\r\n\r\n  calculateTotalFish(type: string): number {\r\n\r\n    let totalFish = 0;\r\n\r\n    if(type === 'kept'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].kept;\r\n      }\r\n    }else if(type === 'released'){\r\n      for(var i=0; i<this.fishListDetails.length; i++){\r\n        totalFish += this.fishListDetails[i].released;\r\n      }\r\n    }\r\n    return totalFish;\r\n  }\r\n\r\n  // get new species data from result\r\n  getNewSpecies(result: SpeciesData): SpeciesData {\r\n\r\n    let kept: number = result.kept ? +result.kept : 0;\r\n    let released: number = result.released ? +result.released : 0;\r\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n    newSpeciesData.kept = kept;\r\n    newSpeciesData.released = released;\r\n\r\n    return newSpeciesData;\r\n\r\n  }\r\n\r\n  // add new species to the catch\r\n  addSpecies(fishListDetails: SpeciesData[]): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // adding a species to the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails.push(this.getNewSpecies(result));\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // edit or delete a species from the catch\r\n  editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.gillNetTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // editing a species in the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails[index] = this.getNewSpecies(result);\r\n        }\r\n\r\n        // delete a species in the catch\r\n        else {\r\n          fishListDetails.splice(index, 1);\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // add to, edit or delete from species catch list\r\n  addSpeciesDialog(index: number = -1): void {\r\n\r\n    // editing or deleting a species\r\n    if (index > -1) {\r\n          this.editSpecies(this.fishListDetails, index);\r\n      }\r\n\r\n    // adding a species\r\n    else {\r\n          this.addSpecies(this.fishListDetails);\r\n      }\r\n\r\n  }\r\n\r\n  // send catch to DFO\r\n  sendToDFO(): void {\r\n\r\n    if (this.form.valid) {\r\n      this.saveCatchReport();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n  }\r\n\r\n  // back to home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n  // forbid non-numeric inputs\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  // only allow one decimal place with 0 or 5 as the tenth digit\r\n  validateHoursFished(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n    if(!regex.test(control.value)){ // if we don't find a match\r\n      control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n    }\r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them \r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept > 0 || fish.released > 0) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n  // saves all Daily Catch Report information pertinent to Gill Net\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.netUsed = this.form.get('net')?.value;\r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.form.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n    this.catchReport.comments = this.form.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n    this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport);\r\n\r\n    // save currTrip to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Gill Net Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1: Select or Add Net -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Which net did you use to fish?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n              <mat-radio-group class=\"radio\"\r\n                               aria-label=\"Select or add net\"\r\n                               formControlName=\"net\">\r\n                <mat-radio-button *ngFor=\"let net of userNets\"\r\n                                  [value]=\"net\"\r\n                                  [checked]=\"net.isChecked\">\r\n                  <h6 style=\"font-weight:bold\">\r\n                    <small class=\"text-muted text-small\">\r\n                      {{net}}\r\n                    </small>\r\n                  </h6>\r\n                </mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n          </div>\r\n  \r\n        <div class=\"row add-item\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <div class=\"row\">\r\n              <button mat-raised-button\r\n                      class=\"fishing-button-red\"\r\n                      type=\"button\"\r\n                      (click)=\"addNetDialog()\">\r\n                Add Net\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Q2 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 2\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q3: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 3\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- may need to modify the data in sub area, or change the input to allow for multiple -->\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Subarea(s)\r\n            </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you cast?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q4: Catch Table -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n              <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                  *matCellDef=\"let element\">\r\n              {{element.kept}}\r\n              </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q5: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 5\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-label\">\r\n            <b>Net Used:</b>\r\n            <small *ngIf=\"!form.get('net')?.errors?.required\"\r\n                   class=\"blue-label\">\r\n              {{form.get('net')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('net')?.errors?.required\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n          </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b>Hours Fished:</b>\r\n              <small class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n              <small class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('numSets')?.value}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-seine-report',\r\n  templateUrl: './seine-report.component.html',\r\n  styleUrls: ['./seine-report.component.css']\r\n})\r\nexport class SeineReportComponent {\r\n\r\n   // for updating the table\r\n   @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n   responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n \r\n   fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n \r\n   // data preambles\r\n   catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n   currTrip: Trip = new Trip();\r\n   userDetails: UserData = new UserData('', '');\r\n   unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n   fishList: SpeciesData[] = []; // filtered list of species data, will comprise the user's look-up list\r\n   seineTable: TableRules = new TableRules(); // used to filter table data\r\n \r\n   // values associated with each page\r\n   form: UntypedFormGroup = new UntypedFormGroup({\r\n \r\n     hoursFished: new FormControl<string>(''), //page 1\r\n \r\n     //page 2\r\n     mgmtArea: new FormControl<string>('', [Validators.required]),\r\n     zoneArea: new FormControl<string>(''),\r\n     numSets: new FormControl<string>(''),\r\n \r\n     //page 4\r\n     comments: new FormControl<string>(''), // conditional validation\r\n     nonFish: new FormControl<string>('', [Validators.required]) \r\n   });\r\n \r\n   catchDate: Date = new Date(); //page 1 \r\n   displayedColumns: string[] = []; // page 3\r\n \r\n \r\n   // section to section\r\n   numPages: number = 0;\r\n   currPage: number = 0;\r\n   spinnerProgress: number = 0;\r\n   spinnerIncrement: number = 0;\r\n \r\n   constructor(\r\n     public dialog: MatDialog,\r\n     public auth: AuthService,\r\n     private router: Router,\r\n     private onlineStatusService: OnlineStatusService,\r\n     private toastr: ToastrService,\r\n     private localStorageService: LocalStorageService\r\n   ) {\r\n \r\n     if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n       let currID: string = this.localStorageService.getCurrID();\r\n       this.userDetails = this.localStorageService.getUserByID(currID);\r\n       this.initialize();\r\n     }\r\n\r\n     else {\r\n       this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n         if (authd) {\r\n           this.auth.user$.subscribe((user: User | null | undefined) => {\r\n             if (user) {\r\n\r\n               // fill trip, net, license area, net and species lists\r\n               this.userDetails = this.localStorageService.getUser(user);\r\n               this.initialize();\r\n\r\n             }\r\n             else {\r\n               this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n               this.localStorageService.logout();\r\n               return;\r\n             }\r\n           });\r\n         }\r\n         else {\r\n           this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n           this.localStorageService.logout();\r\n           return;\r\n         }\r\n       });\r\n     }\r\n \r\n   }\r\n \r\n   ngOnInit(): void {\r\n \r\n     this.onNonFishChange();\r\n \r\n   }\r\n \r\n   onNonFishChange(): void {\r\n     this.form.get('nonFish')?.valueChanges.subscribe((value: string) => {\r\n       const commentControl: AbstractControl<any, any> | null = this.form.get('comments');\r\n \r\n       if(value === 'Yes'){\r\n         commentControl?.setValidators([Validators.required]);\r\n       }else{\r\n         commentControl?.clearValidators();\r\n       }\r\n       commentControl?.updateValueAndValidity();\r\n     })\r\n   }\r\n \r\n   // initialize the data\r\n   initialize(): void {\r\n \r\n     // get all required data\r\n     this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n     this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n     this.seineTable = this.localStorageService.getTableRules('Seine');\r\n \r\n     this.filterTableData(); // filters table data as well as species list accessible to the user\r\n     this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n \r\n     // fill catch page details\r\n     let pages: number = 4; \r\n     this.numPages = pages;\r\n     this.spinnerIncrement = 100 / pages;\r\n \r\n \r\n     this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n \r\n     // go to first screen\r\n     this.toNextPage();\r\n   }\r\n\r\n   populateReport(): void {\r\n\r\n    let numReports: number = this.currTrip.dailyCatchReports.length;\r\n    if (numReports > 0) {\r\n      let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n      this.form.patchValue({ // fill report input fields\r\n        hoursFished: prevReport.hoursFished,\r\n        mgmtArea: prevReport.managementArea,\r\n        zoneArea: prevReport.subArea,\r\n        numSets: prevReport.numSets,\r\n        nonFish: prevReport.nonFish,\r\n        comments: prevReport.comments\r\n      });\r\n    }\r\n\r\n  }\r\n \r\n   filterTableData(): void{ // filters table data as well as species list accessible to the user\r\n     for(let species of this.unfilteredFishList){\r\n       if(this.seineTable.containsSpecies.includes(species.speciesName)){\r\n         this.fishListDetails.push(species);\r\n       }\r\n       if(!this.seineTable.excludesSpecies.includes(species.speciesName)) {\r\n        this.fishList.push(species);\r\n      }\r\n     }\r\n   }\r\n\r\n  determineCellStyling(value: number): string {\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    }\r\n    return 'faded-cell';\r\n  }\r\n \r\n   // go to the next page\r\n   toNextPage(): void {\r\n \r\n     // page does not contain date\r\n    if (this.currPage <= this.numPages) {\r\n       this.incrementPage();\r\n     }\r\n \r\n     // page is final page\r\n     else {\r\n       this.sendToDFO();\r\n     }\r\n \r\n   }\r\n \r\n   // go forward a page, changing the current page number and the spinner progress\r\n   incrementPage(): void {\r\n     this.currPage++;\r\n     this.spinnerProgress += this.spinnerIncrement;\r\n   }\r\n \r\n   // go back to previous page\r\n   toPreviousPage(): void {\r\n \r\n     if (this.currPage === 1) {\r\n       this.toHome();\r\n     }\r\n     else {\r\n       this.currPage--;\r\n       this.spinnerProgress -= this.spinnerIncrement;\r\n     }\r\n \r\n   }\r\n \r\n \r\n   // update the specified species catch table\r\n   updateTable(): void {\r\n     this.table.renderRows();\r\n   }\r\n \r\n   calculateTotalFish(type: string): number {\r\n \r\n     let totalFish = 0;\r\n \r\n     if(type === 'kept'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].kept;\r\n       }\r\n     }else if(type === 'released'){\r\n       for(var i=0; i<this.fishListDetails.length; i++){\r\n         totalFish += this.fishListDetails[i].released;\r\n       }\r\n     }\r\n     return totalFish;\r\n   }\r\n \r\n   // get new species data from result\r\n   getNewSpecies(result: SpeciesData): SpeciesData {\r\n \r\n     let kept: number = result.kept ? +result.kept : 0;\r\n     let released: number = result.released ? +result.released : 0;\r\n     let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n     newSpeciesData.kept = kept;\r\n     newSpeciesData.released = released;\r\n \r\n     return newSpeciesData;\r\n \r\n   }\r\n \r\n   // add new species to the catch\r\n   addSpecies(fishListDetails: SpeciesData[]): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // adding a species to the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails.push(this.getNewSpecies(result));\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // edit or delete a species from the catch\r\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n \r\n     const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n       width: '500px',\r\n       height: '450px',\r\n       data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n       filteredFishList: this.fishList, tableInfo: this.seineTable }\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe((result: any) => {\r\n       if (result) {\r\n \r\n         // editing a species in the catch\r\n         if (result !== 'delete') {\r\n           fishListDetails[index] = this.getNewSpecies(result);\r\n         }\r\n \r\n         // delete a species in the catch\r\n         else {\r\n           fishListDetails.splice(index, 1);\r\n         }\r\n \r\n         // update the table\r\n         this.updateTable();\r\n \r\n       }\r\n     });\r\n \r\n   }\r\n \r\n   // add to, edit or delete from species catch list\r\n   addSpeciesDialog(index: number = -1): void {\r\n \r\n     // editing or deleting a species\r\n     if (index > -1) {\r\n           this.editSpecies(this.fishListDetails, index);\r\n       }\r\n \r\n     // adding a species\r\n     else {\r\n           this.addSpecies(this.fishListDetails);\r\n       }\r\n \r\n   }\r\n \r\n   // send catch to DFO\r\n   sendToDFO(): void {\r\n     if (this.form.valid) {\r\n      this.saveCatchReport();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n      return;\r\n     }\r\n     this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n   }\r\n \r\n   // back to home screen\r\n   toHome(): void {\r\n     this.router.navigate(['active-trip-home']);\r\n   }\r\n\r\n  // only allow one decimal place with 0 or 5 as the tenth digit\r\n  validateHoursFished(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n    if (!regex.test(control.value)) { // if we don't find a match\r\n      control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n    }\r\n  }\r\n \r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n   let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  // creates a list of all species in the table that have non-zero data associated with them\r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.fishListDetails) {\r\n      if(fish.kept > 0 || fish.released > 0) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n  }\r\n\r\n     // saves all Daily Catch Report information pertinent to Seine\r\n  saveCatchReport(): void {\r\n\r\n    // save relevant information gathered in the form\r\n    this.catchReport.dateFished = this.catchDate;\r\n    this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n    this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n    this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n    this.catchReport.numSets = this.form.get('numSets')?.value;\r\n    this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n    this.catchReport.comments = this.form.get('comments')?.value;\r\n    this.catchReport.speciesDataList = this.determineSpeciesData();\r\n    this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.dailyCatchReports.push(this.catchReport); \r\n\r\n    // save currTrip to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Seine Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Subarea(s) Fished <br>\r\n            (Comma-separate if multiple)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Subarea(s)\r\n            </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            How many sets did you cast?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Number of Sets \r\n            </h6>\r\n            <mat-form-field appearance=\"outline\"\r\n                            class=\"form-field\">\r\n              <mat-label>\r\n                Number of Sets\r\n              </mat-label>\r\n              <input matInput\r\n                     inputmode=\"numeric\"\r\n                     formControlName=\"numSets\"\r\n                     (input)=\"forbidNonNumeric('numSets')\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\"\r\n                              style=\"padding-top: 15px;\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"nonFish\">\r\n                  <mat-option *ngFor=\"let response of responseOptions\"\r\n                              [value]=\"response\">\r\n                    {{response}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b> Hours Fished:</b>\r\n              <small class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Subarea(s) Fished:</b> \r\n              <small class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Number of Sets:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('numSets')?.value}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-troll-report',\r\n  templateUrl: './troll-report.component.html',\r\n  styleUrls: ['./troll-report.component.css']\r\n})\r\nexport class TrollReportComponent {\r\n\r\n     // for updating the table\r\n     @ViewChild(MatTable) table!: MatTable<SpeciesData>;\r\n\r\n     //hardcoded values to be used in the form\r\n     responseOptions: string[] = ['Yes', 'No']; \r\n     stateOptions: string[] = ['Frozen (F)', 'Iced (I)'];\r\n   \r\n     fishListDetails: SpeciesData[] = []; // source for table data - all data currently in the table\r\n     trollTable: TableRules = new TableRules(); // used to filter table data\r\n  \r\n     // data preambles\r\n     catchReport: DailyCatchReport = new DailyCatchReport(); // catch report we will fill out\r\n     currTrip: Trip = new Trip();\r\n     userDetails: UserData = new UserData('', '');\r\n     unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n     fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n   \r\n     // values associated with each page\r\n     form: UntypedFormGroup = new UntypedFormGroup({\r\n   \r\n       hoursFished: new FormControl<string>(''), //page 1\r\n   \r\n       //page 2\r\n       mgmtArea: new FormControl<string>('', [Validators.required]),\r\n       zoneArea: new FormControl<string>(''),\r\n       frozenOrIced: new FormControl<string>('', [Validators.required]),\r\n   \r\n       //page 4\r\n       comments: new FormControl<string>(''), // conditional validation\r\n       nonFish: new FormControl<string>('', [Validators.required]) \r\n     });\r\n   \r\n     catchDate: Date = new Date(); //page 1 \r\n     displayedColumns: string[] = []; // page 3\r\n   \r\n   \r\n     // section to section\r\n     numPages: number = 0;\r\n     currPage: number = 0;\r\n     spinnerProgress: number = 0;\r\n     spinnerIncrement: number = 0;\r\n   \r\n     constructor(\r\n       public dialog: MatDialog,\r\n       public auth: AuthService,\r\n       private router: Router,\r\n       private onlineStatusService: OnlineStatusService,\r\n       private toastr: ToastrService,\r\n       private localStorageService: LocalStorageService\r\n     ) {\r\n   \r\n       if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n         let currID: string = this.localStorageService.getCurrID();\r\n         this.userDetails = this.localStorageService.getUserByID(currID);\r\n         this.initialize();\r\n       }\r\n\r\n       else {\r\n         this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n           if (authd) {\r\n             this.auth.user$.subscribe((user: User | null | undefined) => {\r\n               if (user) {\r\n\r\n                 // fill trip, net, license area, net and species lists\r\n                 this.userDetails = this.localStorageService.getUser(user);\r\n                 this.initialize();\r\n\r\n               }\r\n               else {\r\n                 this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n                 this.localStorageService.logout();\r\n                 return;\r\n               }\r\n             });\r\n           }\r\n           else {\r\n             this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n             this.localStorageService.logout();\r\n             return;\r\n           }\r\n         });\r\n       }\r\n   \r\n     }\r\n   \r\n     ngOnInit(): void {\r\n   \r\n       this.onNonFishChange();\r\n   \r\n     }\r\n   \r\n     onNonFishChange(): void {\r\n       this.form.get('nonFish')?.valueChanges.subscribe((value: string) =>{\r\n         const commentControl: AbstractControl<any, any> | null = this.form.get('comments');\r\n   \r\n         if(value === 'Yes'){\r\n           commentControl?.setValidators([Validators.required]);\r\n         }else{\r\n           commentControl?.clearValidators();\r\n         }\r\n         commentControl?.updateValueAndValidity();\r\n       })\r\n     }\r\n   \r\n     // initialize the data\r\n     initialize(): void {\r\n   \r\n       // get all required data\r\n       this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n       this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n       this.trollTable = this.localStorageService.getTableRules('Troll');\r\n   \r\n       this.filterTableData(); //gets data to fill the table (subset of fishList)\r\n       this.populateReport(); // populate report with data from previous daily catch report\r\n\r\n   \r\n       // fill catch page details\r\n       let pages: number = 4; \r\n       this.numPages = pages;\r\n       this.spinnerIncrement = 100 / pages;\r\n   \r\n   \r\n       this.displayedColumns = ['speciesName', 'kept', 'released'];\r\n   \r\n       // go to first screen\r\n       this.toNextPage();\r\n     }\r\n\r\n     populateReport(): void {\r\n\r\n      let numReports: number = this.currTrip.dailyCatchReports.length;\r\n      if (numReports > 0) {\r\n        let prevReport: DailyCatchReport = this.currTrip.dailyCatchReports[numReports-1]; // get last report\r\n        this.form.patchValue({ // fill report input fields\r\n          hoursFished: prevReport.hoursFished,\r\n          mgmtArea: prevReport.managementArea,\r\n          zoneArea: prevReport.subArea,\r\n          frozenOrIced: prevReport.frozenOrIced,\r\n          nonFish: prevReport.nonFish,\r\n          comments: prevReport.comments\r\n        });\r\n      }\r\n  \r\n    }\r\n   \r\n     filterTableData(): void { // filters table data as well as species list accessible to the user\r\n       for(let species of this.unfilteredFishList){\r\n         if(this.trollTable.containsSpecies.includes(species.speciesName)){\r\n           this.fishListDetails.push(species);\r\n         }\r\n         if(!this.trollTable.excludesSpecies.includes(species.speciesName)) {\r\n          this.fishList.push(species);\r\n        }\r\n       }\r\n     }\r\n\r\n     determineCellStyling(value: number, name: string = ''): string {\r\n\r\n      if(value>0){\r\n        return 'bolded-cell';\r\n      } else if (this.isReleaseOnly(name)) { \r\n        return 'release-only-cell';\r\n      }\r\n      return 'faded-cell';\r\n    }\r\n\r\n    isReleaseOnly(name: string): boolean {\r\n      if(this.trollTable.releaseOnlySpecies.includes(name)){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n   \r\n     // go to the next page\r\n     toNextPage(): void {\r\n   \r\n       // page does not contain date\r\n      if (this.currPage <= this.numPages) {\r\n         this.incrementPage();\r\n       }\r\n   \r\n       // page is final page\r\n       else {\r\n         this.sendToDFO();\r\n       }\r\n   \r\n     }\r\n   \r\n     // go forward a page, changing the current page number and the spinner progress\r\n     incrementPage(): void {\r\n       this.currPage++;\r\n       this.spinnerProgress += this.spinnerIncrement;\r\n     }\r\n   \r\n     // go back to previous page\r\n     toPreviousPage(): void {\r\n   \r\n       if (this.currPage === 1) {\r\n         this.toHome();\r\n       }\r\n       else {\r\n         this.currPage--;\r\n         this.spinnerProgress -= this.spinnerIncrement;\r\n       }\r\n   \r\n     }\r\n   \r\n   \r\n     // update the specified species catch table\r\n     updateTable(): void {\r\n       this.table.renderRows();\r\n     }\r\n   \r\n     calculateTotalFish(type: string): number {\r\n   \r\n       let totalFish = 0;\r\n   \r\n       if(type === 'kept'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].kept;\r\n         }\r\n       }else if(type === 'released'){\r\n         for(var i=0; i<this.fishListDetails.length; i++){\r\n           totalFish += this.fishListDetails[i].released;\r\n         }\r\n       }\r\n       return totalFish;\r\n     }\r\n   \r\n     // get new species data from result\r\n     getNewSpecies(result: SpeciesData): SpeciesData {\r\n   \r\n       let kept: number = result.kept ? +result.kept : 0;\r\n       let released: number = result.released ? +result.released : 0;\r\n       let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n       newSpeciesData.kept = kept;\r\n       newSpeciesData.released = released;\r\n   \r\n       return newSpeciesData;\r\n   \r\n     }\r\n   \r\n     // add new species to the catch\r\n     addSpecies(fishListDetails: SpeciesData[]): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // adding a species to the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails.push(this.getNewSpecies(result));\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // edit or delete a species from the catch\r\n     editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n   \r\n       const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n         width: '500px',\r\n         height: '450px',\r\n         data: { identifier: 'edit', species: fishListDetails[index], currentFishList: fishListDetails, \r\n         filteredFishList: this.fishList, tableInfo: this.trollTable }\r\n       });\r\n   \r\n       dialogRef.afterClosed().subscribe((result: any) => {\r\n         if (result) {\r\n   \r\n           // editing a species in the catch\r\n           if (result !== 'delete') {\r\n             fishListDetails[index] = this.getNewSpecies(result);\r\n           }\r\n   \r\n           // delete a species in the catch\r\n           else {\r\n             fishListDetails.splice(index, 1);\r\n           }\r\n   \r\n           // update the table\r\n           this.updateTable();\r\n   \r\n         }\r\n       });\r\n   \r\n     }\r\n   \r\n     // add to, edit or delete from species catch list\r\n     addSpeciesDialog(index: number = -1): void {\r\n   \r\n       // editing or deleting a species\r\n       if (index > -1) {\r\n             this.editSpecies(this.fishListDetails, index);\r\n         }\r\n   \r\n       // adding a species\r\n       else {\r\n             this.addSpecies(this.fishListDetails);\r\n         }\r\n   \r\n     }\r\n   \r\n     // send catch to DFO\r\n     sendToDFO(): void {\r\n       if (this.form.valid) {\r\n        this.saveCatchReport();\r\n        this.router.navigate(['submitted-report'], { state: { name: 'Daily Catch Report' } });\r\n        return;\r\n       }\r\n       this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n     }\r\n   \r\n     // back to home screen\r\n     toHome(): void {\r\n       this.router.navigate(['active-trip-home']);\r\n     }\r\n\r\n    // only allow one decimal place with 0 or 5 as the tenth digit\r\n    validateHoursFished(controlName: string): void {\r\n      let control: AbstractControl = this.form.get(controlName)!;\r\n      const regex: RegExp = /^\\d+((\\.)|(\\.(0|5))?)$/; // matches inputs like: 23, 3, 4.5, 0.5, 9.0, 12., etc.\r\n      if(!regex.test(control.value)){ // if we don't find a match\r\n        control.setValue(control.value.replace(/.$/, '')); // replace the most recently entered character with ''\r\n      }\r\n    }\r\n   \r\n      // forbid field from entering non-decimal values\r\n      forbidNonNumeric(controlName: string): void {\r\n       let control: AbstractControl = this.form.get(controlName)!;\r\n       control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n     }\r\n\r\n    // creates a list of all species in the table that have non-zero data associated with them \r\n    determineSpeciesData(): SpeciesData[] {\r\n\r\n      let tempFishArray: SpeciesData[] = [];\r\n\r\n      for(let fish of this.fishListDetails) {\r\n        if(fish.kept > 0 || fish.released > 0) {\r\n          tempFishArray.push(fish);\r\n        }\r\n      }\r\n      return tempFishArray;\r\n    }\r\n\r\n      // saves all Daily Catch Report information pertinent to Troll\r\n    saveCatchReport(): void {\r\n\r\n      // save relevant information gathered in the form\r\n      this.catchReport.dateFished = this.catchDate;\r\n      this.catchReport.hoursFished = this.form.get('hoursFished')?.value;\r\n      this.catchReport.managementArea = this.form.get('mgmtArea')?.value;\r\n      this.catchReport.subArea = this.form.get('zoneArea')?.value;\r\n      this.catchReport.frozenOrIced = this.form.get('frozenOrIced')?.value;\r\n      this.catchReport.nonFish = this.form.get('nonFish')?.value;\r\n      this.catchReport.comments = this.form.get('comments')?.value;\r\n      this.catchReport.speciesDataList = this.determineSpeciesData();\r\n      this.catchReport.submissionDate = new Date(); // get current date/time\r\n\r\n      // push the report to currTrip\r\n      this.currTrip.dailyCatchReports.push(this.catchReport); \r\n\r\n      // save currTrip to local storage\r\n      this.userDetails.currTrip = this.currTrip;\r\n      this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n    }\r\n\r\n}\r\n","<div class=\"container catch-container\">\r\n\r\n    <div class=\"container\"\r\n         style=\"padding-top: 20px;\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n          <small class=\"text-muted\">\r\n            Page {{currPage}} of {{numPages}}\r\n          </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n          <small class=\"text-muted\">\r\n            Troll Catch\r\n          </small>\r\n        </h6>\r\n      </div>\r\n  \r\n      <div class=\"row\" align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n  \r\n          <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                       mode=\"determinate\"\r\n                       [diameter]=\"50\"\r\n                       [strokeWidth]=\"6\"\r\n                       [value]=\"spinnerProgress\">\r\n          </mat-spinner>\r\n  \r\n          <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color:#3ebfb9\">\r\n            check_circle_outline\r\n          </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n      </div>\r\n    </div>\r\n  \r\n    <form [formGroup]=\"form\">\r\n  \r\n      <!-- Q1 - Catch Date & Hours Fished -->\r\n      <div *ngIf=\"currPage === 1\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Please provide the catch date.\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <div class=\"col-2\"></div>\r\n          <div class=\"col-8\">\r\n            <mat-card class=\"demo-inline-calendar-card\"\r\n                      style=\"margin-top: 10%\">\r\n              <mat-calendar [(selected)]=\"catchDate\"></mat-calendar>\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"col-2\"></div>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            How many hours did you spend fishing?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Hours (round to the nearest half hour)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Hours\r\n            </mat-label>\r\n            <input matInput\r\n                   inputmode=\"numeric\"\r\n                   formControlName=\"hoursFished\"\r\n                   (input)=\"validateHoursFished('hoursFished')\">\r\n          </mat-form-field>\r\n        </div>\r\n          \r\n      </div>\r\n  \r\n      <!-- Q2: Management Area, Subarea, Number of Sets -->\r\n      <div *ngIf=\"currPage === 2\" class=\"container\">\r\n\r\n         <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Where did you fish?\r\n          </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Management Area(s) <br>\r\n            (Do not include subareas)\r\n          </h6>\r\n          <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Management Area\r\n            </mat-label>\r\n            <input matInput\r\n                   required\r\n                   formControlName=\"mgmtArea\">\r\n            <mat-error *ngIf=\"form.invalid\">\r\n              Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Zone(s) or Subarea(s) Fished <br>\r\n            (Use zones for areas 121-127; comma-separate if multiple)\r\n          </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                          class=\"form-field\">\r\n             <mat-label>\r\n               Zone(s) or Subarea(s)\r\n             </mat-label>\r\n            <input matInput\r\n                   formControlName=\"zoneArea\">\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n        <div class=\"row\" align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Frozen or Iced?\r\n            </h5>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              Frozen or Iced \r\n            </h6>\r\n           <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"frozenOrIced\">\r\n                  <mat-option *ngFor=\"let state of stateOptions\"\r\n                              [value]=\"state\">\r\n                    {{state}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n      </div>\r\n  \r\n      <!-- Q3: Catch Table -->\r\n      <div *ngIf=\"currPage === 3\"\r\n           class=\"container\">\r\n\r\n        <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n            Add or Edit Catch\r\n            </h5>\r\n        </div>\r\n\r\n        <table mat-table\r\n                [dataSource]=\"fishListDetails\"\r\n                class=\"mat-elevation-z8 margin-table\">\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"speciesName\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Name\r\n            </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\">\r\n            {{element.speciesName}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Kept Column -->\r\n        <ng-container matColumnDef=\"kept\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Kept\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.kept, element.speciesName)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.kept}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Released Column -->\r\n        <ng-container matColumnDef=\"released\">\r\n        <tr>\r\n            <th mat-header-cell\r\n                *matHeaderCellDef>\r\n            Released\r\n            </th>\r\n            <td mat-cell [ngClass]=\"determineCellStyling(element.released)\"\r\n                *matCellDef=\"let element\">\r\n            {{element.released}}\r\n            </td>\r\n        </tr>\r\n        </ng-container>\r\n\r\n        <!-- Rows -->\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n            (click)=\"addSpeciesDialog(index)\"></tr>\r\n    </table>\r\n\r\n    <!-- Fish Totals -->\r\n\r\n    <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n            <h6>\r\n                <b>\r\n                    Total Fish Kept:\r\n                </b>\r\n                {{calculateTotalFish('kept')}}\r\n                </h6>\r\n            <h6>\r\n                <b>\r\n                    Total Fish Released:\r\n                </b>\r\n                {{calculateTotalFish('released')}}\r\n            </h6>\r\n    </div>\r\n\r\n    <div class=\"row add-item\"\r\n            align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addSpeciesDialog()\">\r\n            Add New Species\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n  \r\n      <!-- Q4: Non-Fish & Comments -->\r\n      <div *ngIf=\"currPage === 4\"\r\n           class=\"container\">\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Did you catch any birds, marine mammals, or turtles?\r\n          </h5>\r\n          <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\"\r\n                                style=\"padding-top: 15px;\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"nonFish\">\r\n                    <mat-option *ngFor=\"let response of responseOptions\"\r\n                                [value]=\"response\">\r\n                      {{response}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <h6 *ngIf=\"form.get('nonFish')?.value === 'Yes'\" class=\"blue-heading\">\r\n          Please provide the time of capture and species details in the comments.\r\n        </h6>\r\n\r\n        <div class=\"row\"\r\n             align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Would you like to add a comment?\r\n          </h5>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            Comments \r\n          </h6>\r\n          <mat-form-field appearance=\"fill\"\r\n                          class=\"form-field\">\r\n            <mat-label>\r\n              Comments...\r\n            </mat-label>\r\n            <textarea matInput\r\n                      formControlName=\"comments\"\r\n                      rows=\"9\"></textarea>\r\n            <mat-error *ngIf=\"form.invalid\">\r\n             Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <!-- Confirmation Page -->\r\n      <div *ngIf=\"currPage > numPages\"\r\n           class=\"container\">\r\n        <div class=\"row\" align=\"center\">\r\n          <h5 class=\"blue-heading-title\">\r\n            Is all information complete and ready to be submitted to DFO?\r\n          </h5>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n              <b>Date Fished:</b> \r\n                {{ catchDate | date }}\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-label\">\r\n             <b> Hours Fished:</b>\r\n              <small class=\"blue-label\">\r\n                {{form.get('hoursFished')?.value}}\r\n            </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Management Area Fished:</b>\r\n              <small *ngIf=\"!form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('mgmtArea')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('mgmtArea')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n                <b>Zone(s) or Subarea(s) Fished:</b> \r\n              <small class=\"blue-label\">\r\n                {{form.get('zoneArea')?.value}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Frozen or Iced?:</b>\r\n            <small *ngIf=\"!form.get('frozenOrIced')?.errors?.required\"\r\n                   class=\"blue-label\">\r\n              {{form.get('frozenOrIced')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('frozenOrIced')?.errors?.required\"\r\n                   class=\"red-label\">\r\n              [Required]\r\n            </small>\r\n          </h6>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Total Fish Kept:</b>\r\n            <small class=\"blue-label\">\r\n              {{calculateTotalFish('kept')}}\r\n            </small>\r\n          </h6>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n             <b>Total Fish Released:</b> \r\n              <small class=\"blue-label\">\r\n                {{calculateTotalFish('released')}}\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <h6 class=\"blue-heading\">\r\n              <b>Non-fish caught?:</b>\r\n              <small *ngIf=\"!form.get('nonFish')?.errors?.required\"\r\n                     class=\"blue-label\">\r\n                {{form.get('nonFish')?.value}}\r\n              </small>\r\n              <small *ngIf=\"form.get('nonFish')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n            </h6>\r\n          </div>\r\n\r\n  \r\n        <div class=\"row\">\r\n          <h6 class=\"blue-heading\">\r\n            <b>Comments:</b>\r\n            <small class=\"blue-label\">\r\n              {{form.get('comments')?.value}}\r\n            </small>\r\n            <small *ngIf=\"form.get('comments')?.errors?.required\"\r\n                     class=\"red-label\">\r\n                [Required]\r\n              </small>\r\n          </h6>\r\n        </div>\r\n  \r\n      </div>\r\n    </form>\r\n\r\n    <!-- Navigation Buttons -->\r\n  \r\n  \r\n    <div class=\"row\" style=\"margin-top: auto; padding-bottom: 3%; padding-top: 10px\">\r\n      <div class=\"col-1\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-blue\"\r\n                  type=\"button\"\r\n                  (click)=\"toPreviousPage()\">\r\n            <span>\r\n              Back\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\"></div>\r\n      <div class=\"col-4\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"fishing-button-red\"\r\n                  type=\"submit\"\r\n                  (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n              Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n              Send to DFO\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1\"></div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","export class SpeciesData {\r\n\r\n  speciesName: string = '';\r\n\r\n  /* Fields for daily catch reports */\r\n\r\n  kept: number = 0;\r\n\r\n  released: number = 0;\r\n\r\n  /* Fields for offload catch reports */\r\n\r\n  offloadWeight: number = 0;\r\n\r\n  offloadPieces: number = 0; \r\n\r\n  constructor(speciesName: string) {\r\n    this.speciesName = speciesName;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.speciesName;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.speciesName;\r\n  }\r\n\r\n}\r\n","export class TableRules {\r\n\r\n  tableType: string = '';\r\n\r\n  gearName: string = '';\r\n\r\n  containsSpecies: string[] = [];\r\n\r\n  excludesSpecies: string[] = [];\r\n\r\n  releaseOnlySpecies: string[] = [];\r\n\r\n  constructor(type: string = '', name: string = '') {\r\n      this.gearName = name;\r\n      this.tableType = type;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return !!this.gearName && this.containsSpecies.length > 0;\r\n  }\r\n\r\n}\r\n","export class CancelReport {\n\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\n\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\n\n    /* Flags for programmatical use */\n\n    isComplete: boolean = false; // has this report been submitted? \n\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\n\n    constructor() {\n    }\n\n    public toString(): string {\n        return 'Cancel Date: ' + this.submissionDate + '; Confirmation Number: ' + this.confirmationNumber;\n    }\n}\n","import { Net } from \"../trip-models/gear-models/net.model\";\r\nimport { SpeciesData } from \"../catch-table-models/species-data.model\";\r\n\r\nexport class DailyCatchReport {\r\n\r\n    netUsed: Net = new Net('', '', '', '', '', '', '', '', ''); // unique to Gill Net\r\n\r\n    dateFished: Date = new Date();\r\n\r\n    hoursFished: string = '';\r\n\r\n    managementArea: string = '';\r\n\r\n    subArea: string = '';\r\n\r\n    numSets: string = ''; // unique to Gill Net & Seine\r\n\r\n    frozenOrIced: string = ''; // unique to Troll\r\n\r\n    speciesDataList: SpeciesData[] = []; // catch data\r\n\r\n    nonFish: string = '';\r\n\r\n    comments: string = '';\r\n\r\n    confirmationNumber: string = ''; // daily catch report confirmation number (not being used yet)\r\n\r\n    submissionDate: Date = new Date(); \r\n\r\n    /* Flags for programmatical use */\r\n\r\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public toString(): string {\r\n        return 'Date: ' + this.dateFished + '; Daily Catch Report Confirmation Number: ' + this.confirmationNumber;\r\n      }\r\n  \r\n\r\n}\r\n","export class EndReport {\n\n    // if arrival details are required, this date will also contain an arrival time\n    endDate: Date = new Date(); // will be the same as in the trip model\n\n    managementArea: string = ''; \n\n    comments: string = ''; \n\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\n\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\n\n    /* Arrival Details - only needed for certain trips */\n\n    arrivalSite: string = ''; \n\n    /* Flags for programmatical use */\n\n    isComplete: boolean = false; // has this report been submitted?\n\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\n\n    constructor() {\n\n    }\n\n    public toString(): string {\n        return 'End Date: ' + this.endDate + '; Confirmation Number: ' + this.confirmationNumber;\n    }\n\n}\n","import { SpeciesData } from \"../catch-table-models/species-data.model\";\n\nexport class OffloadReport {\n\n    offloadDate: Date = new Date(); // date and time provided by the user\n\n    fishSlip: string = ''; // yes/no answer\n\n    fishSlipNumber: string = ''; // may not always be provided\n\n    catchWeightUnits: string = ''; // only needed for Seine\n\n    speciesDataList: SpeciesData[] = []; // offload data - list of species and their associated weight/pieces\n\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\n\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\n\n    /* Flags for programmatical use */\n\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\n\n\n    constructor() {\n    }\n\n    public toString(): string {\n        return 'Offload Date: ' + this.offloadDate + '; Confirmation Number: ' + this.confirmationNumber;\n    }\n\n}\n","export class PauseReport {\n\n    pauseDate: Date = new Date(); \n\n    managementArea: string = ''; \n\n    comments: string = ''; \n\n    confirmationNumber: string = ''; // not currently used, will be the End Fishing Report Confirmation Number\n\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\n\n    /* Flags for programmatical use */\n\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\n\n    constructor() {\n    }\n\n    public toString(): string {\n        return 'Pause Date: ' + this.pauseDate + '; Confirmation Number: ' + this.confirmationNumber;\n    }\n\n}\n","export class StartReport {\n\n    startDate: Date = new Date(); // same as start date in trip model\n\n    managementArea: string = ''; \n\n    comments: string = ''; \n\n    confirmationNumber: string = ''; // not currently used, will be the same as the trip ID\n\n    submissionDate: Date = new Date(); // not currently used, but app will eventually populate dynamically\n\n    /* Flags for programmatical use */\n\n    isComplete: boolean = false; \n\n    isInProgress: boolean = false; \n\n    isTransmitted: boolean = false; // flag that tells us if the report has been sent to DFO - not currently used\n\n    constructor() {\n\n    }\n\n    public isValid(): boolean {\n        return this.isComplete && this.managementArea != '';\n    }\n\n    public toString(): string {\n        return 'Start Date: ' + this.startDate + '; Confirmation Number: ' + this.confirmationNumber;\n    }\n\n\n}\n","export class Gear {\r\n\r\n  name: string = '';\r\n\r\n  logbookID: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(name: string = '', id: string = '', checked: boolean = false) {\r\n    this.name = name;\r\n    this.logbookID = id;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.name + ' (Logbook #' + this.logbookID + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.name && !!this.logbookID;\r\n  }\r\n\r\n}\r\n","export class Net {\r\n\r\n    netType: string = ''; // will be either Alaska Twist, Multi Strand, or Comibination\r\n\r\n    netName: string = ''; // will only be for the skipper's reference\r\n\r\n    numStrands: string = ''; //only needed for Alaska Twist\r\n\r\n    length: string = '';\r\n\r\n    weedlineDepth: string = '';\r\n\r\n    weedlineDepthUnits: string = '';\r\n\r\n    hangRatio: string = '';\r\n\r\n    meshSize: string = '';\r\n\r\n    meshSizeUnits: string = '';\r\n\r\n    numMeshes: string = '';\r\n\r\n    isChecked: boolean = false; \r\n\r\n    constructor(type: string, name: string, length: string,\r\n        depth: string, depthUnits: string, ratio: string, mesh: string, \r\n        meshUnits: string, numMeshes: string, strands: string = '', checked: boolean = false){\r\n\r\n        this.netType = type;\r\n        this.netName = name;\r\n        this.length = length;\r\n        this.weedlineDepth = depth;\r\n        this.weedlineDepthUnits = depthUnits;\r\n        this.hangRatio = ratio;\r\n        this.meshSize = mesh;\r\n        this.meshSizeUnits = meshUnits;\r\n        this.numMeshes = numMeshes;\r\n        this.numStrands = strands;\r\n        this.isChecked = checked;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.netName + ' (' + this.netType + ')';\r\n    }\r\n\r\n    isValid(): boolean {\r\n\r\n        if(this.netType === \"Alaska Twist\") { // requires numStrands to be set\r\n\r\n            return this.netName != '' && this.numStrands != '' && this.length != '' &&\r\n            this.weedlineDepth != '' && this.weedlineDepthUnits != '' && this.hangRatio != '' && \r\n            this.meshSize != '' && this.meshSizeUnits != '' && this.numMeshes != ''; \r\n\r\n        }else if(this.netType != '') { // does not require a value for numStrands\r\n\r\n            return this.netName != '' && this.length != '' && this.weedlineDepth != '' && \r\n            this.weedlineDepthUnits != '' && this.hangRatio != '' && this.meshSize != '' && \r\n            this.meshSizeUnits != '' && this.numMeshes != ''; \r\n\r\n        }\r\n\r\n        return false; \r\n\r\n      }\r\n\r\n    // transform a data structure into net data\r\n    static transformAnonymous(anon: any[]): Net[] {\r\n        let list: Net[] = [];\r\n        anon.forEach((Net: any) => {\r\n            let item: Net = new Net(Net.netType, Net.netName, Net.numStrands, Net.length, Net.weedlineDepth,\r\n            Net.weedlineDepthUnits, Net.hangRatio, Net.meshSize, Net.meshSizeUnits, Net.numMeshes, Net.isChecked);\r\n            list.push(item);\r\n        });\r\n        return list;\r\n    }\r\n\r\n    \r\n}\r\n","export class LicenseArea {\r\n\r\n  licenseID: string = '';\r\n\r\n  licenseName: string = '';\r\n\r\n  licenseLocation: string = '';\r\n\r\n  isChecked: boolean = false;\r\n\r\n  constructor(licenseName: string, licenseLocation: string, isChecked: boolean = false) {\r\n    this.licenseName = licenseName;\r\n    this.licenseLocation = licenseLocation;\r\n    this.isChecked = isChecked;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.licenseName + ' (' + this.licenseLocation + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.licenseName && !!this.licenseLocation;\r\n  }\r\n\r\n}\r\n","import { Gear } from './gear-models/gear.model';\r\nimport { VesselData } from '../user-models/vessel-data.model';\r\nimport { LicenseArea } from './license-area.model';\r\nimport { Tel } from '../../tel-input/tel-input.component';\r\nimport { DailyCatchReport } from '../report-models/daily-catch-report.model';\r\nimport { StartReport } from '../report-models/start-report.model';\r\nimport { EndReport } from '../report-models/end-report.model';\r\nimport { PauseReport } from '../report-models/pause-report.model';\r\nimport { CancelReport } from '../report-models/cancel-report.model';\r\nimport { OffloadReport } from '../report-models/offload-report.model';\r\n\r\nexport class Trip {\r\n\r\n  /* General Trip Data */\r\n\r\n  gear: Gear = new Gear('', '');\r\n\r\n  vessel: VesselData = new VesselData('', '');\r\n\r\n  licenseArea: LicenseArea = new LicenseArea('', '');\r\n\r\n  master: string = '';\r\n\r\n  fin: string = '';\r\n\r\n  contactName: string = ''; // contact name\r\n\r\n  phoneNum: Tel = new Tel('', '', ''); // contact phone number\r\n\r\n  tripID: string = '123456'; // hardcoded for now, will eventually generate unique ones\r\n\r\n  /* Flags for programmatical use */\r\n\r\n  offloadNeeded: boolean = false; // used to determine if the current trip may require an offload report\r\n\r\n  isSaved: boolean = false; // used to determine whether the report has been saved to the user's prevTrips array\r\n\r\n  /* Fishing Report Data */\r\n\r\n  startFishingReport: StartReport = new StartReport();\r\n\r\n  endFishingReport: EndReport = new EndReport();\r\n\r\n  cancelFishingReport: CancelReport = new CancelReport();\r\n\r\n  pauseFishingReports: PauseReport[] = []; // array of all pause reports submitted for the trip\r\n\r\n  dailyCatchReports: DailyCatchReport[] = []; // array of all daily catch reports submitted for the trip\r\n\r\n  offloadReports: OffloadReport[] = [];  // array of all offload reports submitted for the trip\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public toString(): string {\r\n    return 'Gear: ' + this.gear + '; Vessel: ' + this.vessel + '; License Area: ' + this.licenseArea;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.gear.isValid() && this.vessel.isValid() && this.licenseArea.isValid();\r\n  }\r\n\r\n}\r\n","import { VesselData } from './vessel-data.model';\r\nimport { Trip } from '../trip-models/trip.model';\r\nimport { Net } from '../trip-models/gear-models/net.model';\r\n\r\nexport class UserData {\r\n\r\n  // Auth0 ID\r\n  userID: string = '';\r\n\r\n  // Email for signup\r\n  userEmail: string = '';\r\n\r\n  // current homepage\r\n  currHomepage: string = '';\r\n\r\n  // saved user trips\r\n  prevTrips: Trip[] = [];\r\n\r\n  // saved user vessels\r\n  vessels: VesselData[] = [];\r\n\r\n  // current trip \r\n  currTrip: Trip = new Trip();\r\n\r\n  // saved nets\r\n  nets: Net[] = [];\r\n\r\n  constructor(id: string, email: string) {\r\n    this.userID = id;\r\n    this.userEmail = email;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.userEmail + ', ' + this.userID;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return !!this.userID && !!this.userEmail;\r\n  }\r\n\r\n}\r\n","export class VesselData {\r\n\r\n    // Unique identifier for this vessel\r\n    vesselID: string = '';\r\n\r\n  // Name for this vessel\r\n    vesselName: string = '';\r\n\r\n  // Vessel coast number for this vessel (not sure if vesselCoastNumber is the best name for CFV/VRN - may change later)\r\n    vesselCoastNumber: string = '';\r\n\r\n  // Whether or not the vessel is recognized\r\n  isRecognized: boolean = false;\r\n\r\n  // Whether or not the vessel is checked in a list\r\n  isChecked: boolean = false;\r\n\r\n  constructor(vname: string, vcoastNum: string, checked: boolean = false) {\r\n    this.vesselName = vname;\r\n    this.vesselCoastNumber = vcoastNum;\r\n    this.isChecked = checked;\r\n  }\r\n\r\n  public toString(): string {\r\n      return this.vesselName + ' (VRN: ' + this.vesselCoastNumber + ')';\r\n  }\r\n\r\n  public isValid(): boolean {\r\n      return !!this.vesselName && !!this.vesselCoastNumber;\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\n\r\nexport class Validator {\r\n\r\n}\r\n\r\n// validator for general values\r\nexport function generalValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    return control.value != null && control.valid ? null : { invalid: true };\r\n  }\r\n}\r\n\r\n// choosing a species from a species list\r\nexport function speciesValidator(speciesList: string[]): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    for (let species of speciesList) {\r\n      if (control.value.toLowerCase() === species.toLowerCase()) {\r\n        return null;\r\n      }\r\n    }\r\n    return { value: { error: 'Invalid species' } };\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Net } from 'src/app/data-models/trip-models/gear-models/net.model';\r\n\r\n@Component({\r\n  selector: 'app-add-net-dialog',\r\n  templateUrl: './add-net-dialog.component.html',\r\n  styleUrls: ['./add-net-dialog.component.css']\r\n})\r\nexport class AddNetDialogComponent {\r\n\r\n  //data preambles\r\n  netTypes: string[] = []; // holds values from local storage\r\n  unitTypes: string[] = ['cm', 'in', 'mm']; //hardcoded values to be used in the form\r\n\r\n  dialogReturn: Net = new Net('', '', '', '', '', '', '', '', '');\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    netType: new FormControl<string>('', [Validators.required]),\r\n    numStrands: new FormControl<string>(''), // conditional validation\r\n    netName: new FormControl<string>('', [Validators.required]), \r\n    netLength: new FormControl<string>('', [Validators.required]), \r\n    netDepth: new FormControl<string>('', [Validators.required]), \r\n    netUnits: new FormControl<string>('', [Validators.required]), \r\n    hangRatio: new FormControl<string>('', [Validators.required]), \r\n    meshSize: new FormControl<string>('', [Validators.required]), \r\n    meshUnits: new FormControl<string>('', [Validators.required]), \r\n    numMeshes: new FormControl<string>('', [Validators.required]) \r\n  })\r\n  \r\n  constructor(public dialogRef: MatDialogRef<AddNetDialogComponent>,\r\n    private localStorageService: LocalStorageService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Net) { // don't need injection right now, but leave in for the future possibility of editing the net\r\n\r\n       this.netTypes = this.localStorageService.getStringList('netTypes'); // retrieve net types from local storage\r\n\r\n  }\r\n\r\n  netTypeVal(): string { // returns the net type the user has selected\r\n    return this.form.get('netType')?.value;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.onNetTypeChange();\r\n  }\r\n\r\n  onNetTypeChange(): void {\r\n    this.form.get('netType')?.valueChanges.subscribe((value: string) => {\r\n      const strandControl: AbstractControl<any, any> | null = this.form.get('numStrands');\r\n\r\n      if(value === 'Alaska Twist'){\r\n        strandControl?.setValidators([Validators.required]);\r\n      }else{\r\n        strandControl?.clearValidators();\r\n      }\r\n      strandControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  addNet() { \r\n    if (this.form.valid) {\r\n      this.clearInputs();\r\n      this.dialogRef.close(this.form.value); // return the filled-in values of the form field\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n\r\n  deleteNet(): void { \r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // reset any dead form inputs\r\n  clearInputs(): void {\r\n    if(this.netTypeVal() != 'Alaska Twist'){ // if other gear type, clear any possible input in numStrands\r\n      this.form.controls['numStrands'].reset();\r\n    }\r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: 500;\">Add Net</h3>\r\n\r\n    <!-- FORM QUESTIONS -->\r\n\r\n    <form [formGroup]=\"form\">\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Name (for your reference only)\r\n            </h6>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Net Name</mat-label>\r\n              <input matInput formControlName=\"netName\" required>\r\n              <mat-error *ngIf=\"form.invalid\">\r\n                Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Net Type\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"netType\">\r\n                  <mat-option *ngFor=\"let net of netTypes\"\r\n                              [value]=\"net\">\r\n                    {{net}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n    \r\n          <div class=\"row\">\r\n\r\n    \r\n            <div *ngIf=\"netTypeVal() === 'Alaska Twist'\"\r\n                class=\"container\">\r\n                <h6 class=\"net-small-header\">\r\n                    Number of Strands \r\n                    </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Number of Strands\r\n                    </mat-label>\r\n                    <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numStrands\"\r\n                        (input)=\"forbidNonNumeric('numStrands')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                      Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Length (in fathoms)\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Length\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"netLength\"\r\n                        (input)=\"forbidNonNumeric('netLength')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Weedline Depth\r\n                </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Depth\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"netDepth\"\r\n                            (input)=\"forbidNonNumeric('netDepth')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Weedline Depth Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                  <mat-label>\r\n                    Select\r\n                  </mat-label>\r\n                  <mat-select formControlName=\"netUnits\">\r\n                    <mat-option *ngFor=\"let unit of unitTypes\"\r\n                                [value]=\"unit\">\r\n                      {{unit}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                  </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Hang Ratio ( :1)\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Hang Ratio\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"hangRatio\"\r\n                        (input)=\"forbidNonNumeric('hangRatio')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                Mesh Size\r\n                </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\">\r\n                    <mat-label>\r\n                    Mesh Size\r\n                    </mat-label>\r\n                    <input matInput\r\n                            inputmode=\"numeric\"\r\n                            formControlName=\"meshSize\"\r\n                            (input)=\"forbidNonNumeric('meshSize')\">\r\n                    <mat-error *ngIf=\"form.invalid\">\r\n                    Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n    \r\n            <div class=\"col\">\r\n                <h6 class=\"net-small-header\">\r\n                    Mesh Size Units\r\n                  </h6>\r\n                <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Select\r\n                </mat-label>\r\n                <mat-select formControlName=\"meshUnits\">\r\n                  <mat-option *ngFor=\"let unit of unitTypes\"\r\n                              [value]=\"unit\">\r\n                    {{unit}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n    \r\n          </div>\r\n\r\n          <div class=\"row\" style=\"padding-top: 15px;\">\r\n\r\n            <h6 class=\"net-small-header\">\r\n              Number of Meshes\r\n            </h6>\r\n             <mat-form-field appearance=\"outline\"\r\n                              class=\"form-field\">\r\n                <mat-label>\r\n                  Number of Meshes\r\n                </mat-label>\r\n                <input matInput\r\n                        inputmode=\"numeric\"\r\n                        formControlName=\"numMeshes\"\r\n                        (input)=\"forbidNonNumeric('numMeshes')\">\r\n                <mat-error *ngIf=\"form.invalid\">\r\n                  Required\r\n                </mat-error>\r\n              </mat-form-field>\r\n          </div>\r\n\r\n    </form>\r\n\r\n\r\n    <!-- BACK & ADD BUTTONS -->\r\n\r\n    <!-- TO-DO: GET \"BACK & ADD BUTTONS TO BE ALIGNED PROPERLY\"-->\r\n    \r\n    <div class=\"row\" style=\"display: flex; padding-top: 10px;\">\r\n\r\n        <div class=\"col-3\">\r\n            <button mat-stroked-button\r\n                    type=\"button\"\r\n                    aria-label=\"Back\"\r\n                    style=\"background-color: #005d87; color: white; font-weight: 500;\"\r\n                    (click)=\"deleteNet()\">\r\n                Back\r\n            </button>    \r\n        </div>\r\n\r\n        <div class=\"col\"></div>\r\n\r\n        <div class=\"col-4\">\r\n            <button mat-stroked-button\r\n                    type=\"submit\"\r\n                    aria-label=\"Add Net\"\r\n                    style=\"background-color: #ff6f61; color: white; font-weight: 500;\"\r\n                    (click)=\"addNet()\">\r\n                Add\r\n            </button>                \r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { AbstractControl, FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { speciesValidator } from '../../data-models/validator.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\n\r\n@Component({\r\n  selector: 'app-add-species-dialog',\r\n  templateUrl: './add-species-dialog.component.html',\r\n  styleUrls: ['./add-species-dialog.component.css']\r\n})\r\n\r\nexport class AddSpeciesDialogComponent {\r\n\r\n  // used to determine if the species name can be edited\r\n  speciesIsReadOnly: boolean = false;\r\n\r\n  // species lists\r\n  stringList: string[] = []; // subset of \"list\" - has all species names (used only for validation)\r\n  speciesList: string[] = []; \r\n  filteredSpecies: string[] = []; //what's already in table\r\n  currentSpeciesList: string[] = [];\r\n\r\n  // dialog title\r\n  displayedTitle: string = '';\r\n\r\n  // extracting data from data inject\r\n  identifier: string = '';\r\n  currentFishList: SpeciesData[] = [];\r\n  filteredFishList: SpeciesData[] = [];\r\n  tableInfo: TableRules = new TableRules('', '');\r\n\r\n  // species details\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    speciesName: new FormControl<string>('', [Validators.required, speciesValidator(this.stringList)]),\r\n    kept: new FormControl<string>(''),\r\n    released: new FormControl<string>(''),\r\n    offloadWeight: new FormControl<string>(''),\r\n    offloadPieces: new FormControl<string>('')\r\n  })\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddSpeciesDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { identifier: string, species: SpeciesData, currentFishList: SpeciesData[], \r\n      filteredFishList: SpeciesData[], tableInfo: TableRules }\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    // if editing a species, autofill form with species details\r\n    if (this.data != null) {\r\n\r\n      this.identifier = this.data.identifier;\r\n      this.currentFishList = this.data.currentFishList;\r\n      this.filteredFishList = this.data.filteredFishList;\r\n      this.tableInfo = this.data.tableInfo;\r\n\r\n      if (this.data.species != null) {\r\n        let speciesData: SpeciesData = this.data.species;\r\n        this.form.patchValue({\r\n          speciesName: speciesData.speciesName,\r\n          kept: speciesData.kept,\r\n          released: speciesData.released,\r\n          offloadWeight: speciesData.offloadWeight,\r\n          offloadPieces: speciesData.offloadPieces\r\n        });\r\n      }\r\n    }\r\n\r\n    // fill the species list available to the user\r\n    this.fillSpecies();\r\n\r\n    // set the dialog configuration\r\n    this.setDialogConfig();\r\n\r\n    // change the filtered species list whenever the input field changes\r\n    this.form.get('speciesName')!.valueChanges.subscribe((speciesChange: string) => {\r\n      this.filteredSpecies = [];\r\n      for (let species of this.speciesList) {\r\n        if (species.toLowerCase().includes(speciesChange.toLowerCase())) {\r\n          this.filteredSpecies.push(species);\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // set the title of the dialog and read/write permissions of inputs\r\n  setDialogConfig(): void {\r\n     // set config based on whether the species is being added or edited\r\n     switch (this.identifier) {\r\n      case 'edit':\r\n        this.displayedTitle = \"Edit Species\";\r\n        this.speciesIsReadOnly = true;\r\n        break;\r\n      case 'add':\r\n         this.displayedTitle = \"Add Species\";\r\n         break;\r\n    }\r\n  }\r\n\r\n  // fill up the species list based on what is not already in the table\r\n  fillSpecies(): void { //fishList from local storage is what gets passed in here\r\n    for(let species of this.currentFishList) { // get all species names that are already in the table\r\n      this.currentSpeciesList.push(species.speciesName);\r\n    } \r\n    for (let species of this.filteredFishList) {\r\n      //only add the name to the list if it is not already in the table \r\n      if(!this.currentSpeciesList.includes(species.speciesName)) {\r\n        this.speciesList.push(species.speciesName); \r\n      }\r\n      this.stringList.push(species.speciesName); // fill the string list regardless\r\n    }\r\n    // fill the filtered list\r\n    this.filteredSpecies = this.speciesList;\r\n  }\r\n\r\n  // check if entered species is a valid species\r\n  checkSpecies(name: string): boolean {\r\n    for (let species of this.filteredFishList) {\r\n      if (species.speciesName.toLowerCase().includes(name.toLowerCase())) {\r\n        this.form.patchValue({\r\n          speciesName: species.speciesName,\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isReleaseOnly(name: string): boolean {\r\n    if(this.tableInfo.releaseOnlySpecies.includes(name)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getCurrentFormSpecies(): string {\r\n    return this.form.get('speciesName')?.value;\r\n  }\r\n\r\n  // add new species details\r\n  addSpecies(): void {\r\n    if (this.form.valid && this.checkSpecies(this.form.get('speciesName')!.value)) {\r\n      this.clearInputs(); \r\n      this.dialogRef.close(this.form.value);\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  // clear any possible dead form inputs\r\n  clearInputs(): void {\r\n    if(this.isReleaseOnly(this.getCurrentFormSpecies())){ // if species is release-only, clear any possible previous 'kept' input\r\n      this.form.controls['kept'].reset(); // reset form value\r\n    }\r\n  }\r\n\r\n  // delete current species details\r\n  deleteSpecies(): void {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n  // forbid field from entering non-decimal values\r\n  forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.form.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n}\r\n","<div class=\"container species-container\">\r\n\r\n  <h3 class=\"display-6 species-header\"\r\n      align=\"center\">\r\n    {{displayedTitle}}\r\n  </h3>\r\n\r\n  <form [formGroup]=\"form\">\r\n\r\n    <!-- Select species name -->\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Species Name\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Species\r\n        </mat-label>\r\n        <input matInput\r\n               required\r\n               formControlName=\"speciesName\"\r\n               [matAutocomplete]=\"auto\"\r\n               [readonly]=\"speciesIsReadOnly\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let fSpecies of filteredSpecies\"\r\n                      [value]=\"fSpecies\">\r\n            {{fSpecies}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-error *ngIf=\"form.invalid\">\r\n          Select an item\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Daily Catch Report Fields -->\r\n\r\n    <div *ngIf=\"tableInfo.tableType === 'daily-catch'\">\r\n\r\n      <!-- Kept Catch -->\r\n      <div *ngIf=\"!isReleaseOnly(getCurrentFormSpecies())\"\r\n           class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Kept\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Kept\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"kept\"\r\n                (input)=\"forbidNonNumeric('kept')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <!-- Released Catch -->\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"species-small-header\">\r\n          Released\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Released\r\n          </mat-label>\r\n          <input matInput\r\n                inputmode=\"numeric\"\r\n                formControlName=\"released\"\r\n                (input)=\"forbidNonNumeric('released')\">\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n  </div>\r\n\r\n  <!-- Offload Catch Report Fields -->\r\n\r\n  <div *ngIf=\"tableInfo.tableType === 'offload-catch'\">\r\n\r\n    <!-- Weight (Seine only) -->\r\n\r\n    <div *ngIf=\"tableInfo.gearName === 'Seine'\"\r\n         class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Weight\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Weight\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadWeight\"\r\n              (input)=\"forbidNonNumeric('offloadWeight')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- Pieces -->\r\n\r\n    <div class=\"row\">\r\n\r\n      <h6 class=\"species-small-header\">\r\n        Pieces\r\n      </h6>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>\r\n          Pieces\r\n        </mat-label>\r\n        <input matInput\r\n              inputmode=\"numeric\"\r\n              formControlName=\"offloadPieces\"\r\n              (input)=\"forbidNonNumeric('offloadPieces')\">\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  </form>\r\n\r\n  <!-- Release-only species descriptive text -->\r\n\r\n  <div *ngIf=\"isReleaseOnly(getCurrentFormSpecies())\" class=\"row\">\r\n\r\n    <h6 class=\"species-small-header\">\r\n      This species is non-retainable.\r\n    </h6>\r\n\r\n  </div>\r\n\r\n  <!-- Add & Delete Buttons -->\r\n\r\n  <div class=\"row\" style=\"display: flex;\">\r\n\r\n    <div class=\"col-3\">\r\n      <button mat-stroked-button\r\n              class=\"button-delete\"\r\n              type=\"button\"\r\n              aria-label=\"Delete\"\r\n              (click)=\"deleteSpecies()\">\r\n        Delete\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"col\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <button mat-stroked-button\r\n              class=\"button-add\"\r\n              type=\"submit\"\r\n              align=\"end\"\r\n              aria-label=\"Add Species\"\r\n              (click)=\"addSpecies()\">\r\n        Confirm\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\n\r\n@Component({\r\n  selector: 'app-add-vessel-dialog',\r\n  templateUrl: './add-vessel-dialog.component.html',\r\n  styleUrls: ['./add-vessel-dialog.component.css']\r\n})\r\nexport class AddVesselDialogComponent implements OnInit {\r\n\r\n  dialogReturn: VesselData = new VesselData('', '');\r\n\r\n  form: UntypedFormGroup = new UntypedFormGroup({\r\n    vesselName: new FormControl<string>('', [Validators.required, Validators.pattern('^[A-z0-9 ]+$')]),\r\n    vesselNumber: new FormControl<string>('', [Validators.required, Validators.pattern('^([0-9]{6}|[A-z0-9]{7,8})$')])\r\n  })\r\n  \r\n  constructor(public dialogRef: MatDialogRef<AddVesselDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: VesselData) { // at the moment we don't need to inject data (leave in for the possibility of editing vessels later)\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void { \r\n    if (this.data != null) {\r\n      this.form.patchValue({ // this doesn't do anything at the moment - but may need later for editing vessels\r\n        vesselName: this.data.vesselName,\r\n        vesselNumber: this.data.vesselCoastNumber\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addVessel() {\r\n    if (this.form.valid) {\r\n      this.dialogRef.close(this.form.value);\r\n    } else {\r\n      this.form.markAllAsTouched();\r\n    }    \r\n  }\r\n\r\n\r\n  deleteVessel() {\r\n    this.dialogRef.close('delete');\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\" style=\"display: flex; flex-direction:column; justify-content: space-between; height:90%\">\r\n\r\n    <h3 class=\"display-6\" align=\"center\" style=\"padding-top: 10px; color: #005d87; font-weight: 500;\">Add Vessel</h3>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"row\">\r\n\r\n        <h6 class=\"vessel-small-header\">\r\n          Vessel Name\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Vessel Name</mat-label>\r\n          <input matInput formControlName=\"vesselName\" required>\r\n          <mat-error *ngIf=\"form.get('vesselName')?.errors?.required\">Required</mat-error>\r\n          <mat-error *ngIf=\"form.get('vesselName')?.errors?.pattern\">Invalid character</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    \r\n      <div class=\"row\" style=\"padding-top: 15px;\">\r\n        <h6 class=\"vessel-small-header\">\r\n          VRN (CFV#)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>VRN</mat-label>\r\n          <input matInput formControlName=\"vesselNumber\" required>\r\n          <mat-error *ngIf=\"form.invalid\">Invalid - 6 digit numeric or 7-8 digit alphanumeric required</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    </form>\r\n    \r\n    <div class=\"row\" style=\"display: flex;\">\r\n\r\n        <div class=\"col-3\">\r\n            <button mat-stroked-button\r\n                    type=\"button\"\r\n                    aria-label=\"Back\"\r\n                    style=\"background-color: #005d87; color: white; font-weight: 500;\"\r\n                    (click)=\"deleteVessel()\">\r\n                Back\r\n            </button>    \r\n        </div>\r\n\r\n        <div class=\"col\"></div>\r\n\r\n        <div class=\"col-4\">\r\n            <button mat-stroked-button\r\n                    type=\"submit\"\r\n                    aria-label=\"Add Vessel\"\r\n                    style=\"background-color: #ff6f61; color: white; font-weight: 500;\"\r\n                    align=\"end\"\r\n                    (click)=\"addVessel()\">\r\n                Add\r\n            </button>                \r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\n\r\n@Component({\r\n  selector: 'app-active-trip-home',\r\n  templateUrl: './active-trip-home.component.html',\r\n  styleUrls: ['./active-trip-home.component.css']\r\n})\r\nexport class ActiveTripHomeComponent {\r\n\r\n  //data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor( // same constructor as original homepage\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n    // get current fishing report information\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n  }\r\n\r\n  getGearName(): string {\r\n    return this.currTrip.gear.name;\r\n  }\r\n\r\n  getDate(date: Date): Date {\r\n    return new Date(date);\r\n  }\r\n\r\n  toCatchReport(gearType: string): void {\r\n    switch(gearType){\r\n      case 'Gill Net':\r\n        this.router.navigate(['gill-net-report']);\r\n        break;\r\n      case 'Seine':\r\n        this.router.navigate(['seine-report']);\r\n        break;\r\n      case 'Troll':\r\n        this.router.navigate(['troll-report']);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // go to end a fishing report\r\n  toEndReport(): void {\r\n    this.router.navigate(['end-report']);\r\n  }\r\n\r\n  // go to pause a fishing report  \r\n  toPauseReport(): void {\r\n    this.router.navigate(['pause-report']);\r\n  }\r\n\r\n  // go to cancel the current trip\r\n  toCancelReport(): void {\r\n    this.router.navigate(['cancel-report']);\r\n  }\r\n\r\n  // go to an offload report\r\n  toOffloadReport(): void {\r\n    this.router.navigate(['offload-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"padding-top: 20px;\">\r\n\r\n  <!-- Header -->\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n      <h2 style=\"color: #003F61\">\r\n        #1234\r\n      </h2>\r\n    </div>\r\n\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Trip Information -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Start Date:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{getDate(currTrip.startFishingReport.startDate)}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Gear Type:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.gear}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel Master:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.master}} (FIN: {{currTrip.fin}})\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Vessel:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.vessel}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      License Area:\r\n      <span style=\"display:inline; font-weight:500; color:#005d87;\">\r\n        {{currTrip.licenseArea}}\r\n      </span>\r\n    </h6>\r\n  </div>\r\n\r\n  <!-- Catch Reports -->\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toCatchReport(currTrip.gear.name)\">\r\n      <span>\r\n        Record Catch\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Fishing Report Buttons -->\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h3 class=\"blue-subheading\">\r\n      Submit a Trip Report\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"report-buttons\">\r\n\r\n    <div class=\"row justify-content-center\">\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toPauseReport()\">\r\n            Pause\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                  *ngIf=\"currTrip.dailyCatchReports.length !== 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toEndReport()\">\r\n            End\r\n          </button>\r\n          <button mat-raised-button\r\n                  *ngIf=\"currTrip.dailyCatchReports.length === 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toCancelReport()\">\r\n            Cancel\r\n          </button> \r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-1\"></div>\r\n\r\n      <div class=\"col-3\">\r\n        <div class=\"row\">\r\n          <button mat-raised-button\r\n                 *ngIf=\"currTrip.offloadNeeded && currTrip.dailyCatchReports.length !== 0\"\r\n                  class=\"blue-button\"\r\n                  type=\"button\"\r\n                  (click)=\"toOffloadReport()\">\r\n            Offload\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { UserData } from 'src/app/data-models/user-models/user-data.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-no-trip-home',\r\n  templateUrl: './no-trip-home.component.html',\r\n  styleUrls: ['./no-trip-home.component.css']\r\n})\r\nexport class NoTripHomeComponent {\r\n\r\n  //data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  prevTrips: Trip[] = [];\r\n\r\n  constructor( // same constructor as original homepage\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (!user) {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.initialize(); // POSSIBLY MOVE\r\n\r\n  }\r\n\r\n  saveDailyCatchReports(tempTrip: Trip): void {\r\n\r\n    for(let report of this.currTrip.dailyCatchReports){\r\n      let tempReport: DailyCatchReport = new DailyCatchReport();\r\n      tempReport = report;\r\n      tempTrip.dailyCatchReports.push(tempReport);\r\n    }\r\n\r\n  }\r\n\r\n  saveOldReport(): void { \r\n    if(this.currTrip.isValid() && !this.currTrip.isSaved && this.currTrip.startFishingReport.isComplete) { // check if there is a trip to save\r\n      console.log(\"saving a new trip\");\r\n      let tempTrip: Trip = new Trip();\r\n      this.currTrip.isSaved = true;\r\n      tempTrip.isSaved = this.currTrip.isSaved;\r\n      tempTrip.gear = this.currTrip.gear;\r\n      tempTrip.vessel = this.currTrip.vessel;\r\n      tempTrip.licenseArea = this.currTrip.licenseArea;\r\n      tempTrip.master = this.currTrip.master;\r\n      tempTrip.fin = this.currTrip.fin;\r\n      tempTrip.contactName = this.currTrip.contactName;\r\n      tempTrip.phoneNum = this.currTrip.phoneNum;\r\n      tempTrip.offloadNeeded = this.currTrip.offloadNeeded;\r\n      tempTrip.startFishingReport = this.currTrip.startFishingReport;\r\n      tempTrip.endFishingReport = this.currTrip.endFishingReport;\r\n      tempTrip.cancelFishingReport = this.currTrip.cancelFishingReport;\r\n      tempTrip.pauseFishingReports = this.currTrip.pauseFishingReports;\r\n      this.saveDailyCatchReports(tempTrip);\r\n      tempTrip.offloadReports = this.currTrip.offloadReports;\r\n      this.prevTrips = this.localStorageService.validatePrevTrips(this.userDetails.prevTrips);\r\n      this.prevTrips.push(tempTrip);\r\n      this.userDetails.currTrip = this.currTrip;\r\n      this.userDetails.prevTrips = this.prevTrips;\r\n      this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n    }\r\n  }\r\n\r\n  initialize(): void {\r\n    // get current fishing report information\r\n    let currID: string = this.localStorageService.getCurrID();\r\n    this.userDetails = this.localStorageService.getUserByID(currID);\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n    this.saveOldReport();\r\n  }\r\n\r\n  // go to start a fishing report\r\n  toStartReport(): void {\r\n    this.router.navigate(['start-report']);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <div class=\"row\" style=\"padding-top: 20px;\">\r\n\r\n    <div class=\"col\" align=\"left\">\r\n      <h1 class=\"blue-trip-heading\">\r\n        My Trip\r\n      </h1>\r\n    </div>\r\n\r\n\r\n    <div class=\"col\" align=\"right\">\r\n      <app-menu> </app-menu>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <h3 class=\"blue-subheading\">\r\n      You have no active trip.\r\n    </h3>\r\n  </div>\r\n\r\n  <div class=\"row\" align=\"left\">\r\n    <h6 class=\"descriptive-text\">\r\n      Select the button below to complete a Start Fishing\r\n      Report and activate a new trip.\r\n    </h6>\r\n  </div>\r\n\r\n  <div class=\"button-row\">\r\n    <button mat-raised-button\r\n            class=\"red-button\"\r\n            align=\"center\"\r\n            type=\"button\"\r\n            (click)=\"toStartReport()\">\r\n      <span>\r\n        Start Trip\r\n      </span>\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-offload-home',\r\n  templateUrl: './offload-home.component.html',\r\n  styleUrls: ['./offload-home.component.css']\r\n})\r\nexport class OffloadHomeComponent {\r\n\r\n  // data preambles\r\n  requestToStartNewTrip: boolean = false; // flag that tells us if we should display the confirmation page\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  setNewTripFlag(): void {\r\n    this.requestToStartNewTrip = true;\r\n  }\r\n\r\n  clearNewTripFlag(): void {\r\n    this.requestToStartNewTrip = false;\r\n  }\r\n\r\n  // go to an offload report\r\n  toOffloadReport(): void {\r\n    this.router.navigate(['offload-report']);\r\n  }\r\n\r\n  // go to the new trip homepage\r\n  toNoTripHome(): void {\r\n    this.updateHomepage();\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n  // user wants to start a new trip without submitting an offload report\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n}\r\n","<!-- Offload Report Homepage -->\r\n\r\n<div class=\"container\" style=\"padding-top: 20px;\">\r\n\r\n    <div *ngIf=\"!requestToStartNewTrip\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col\" align=\"left\">\r\n                <h1 class=\"blue-trip-heading\">\r\n                    My Trip\r\n                </h1>\r\n            </div>\r\n\r\n\r\n            <div class=\"col\" align=\"right\">\r\n            <app-menu> </app-menu>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <h3 class=\"blue-subheading\">\r\n                Do you need to submit an offload report?\r\n            </h3>\r\n        </div>\r\n\r\n        <div class=\"row\" align=\"left\">\r\n            <h6 class=\"descriptive-text\">\r\n            Offload Reports completed for this trip: \r\n            <b> {{ userDetails.currTrip.offloadReports.length}} </b>\r\n            </h6>\r\n        </div>\r\n\r\n        <div class=\"row\" align=\"left\">\r\n                <h6 class=\"descriptive-text\">\r\n                This is your final chance to complete an offload report before starting a new trip.\r\n                </h6>\r\n        </div>\r\n\r\n        <div class=\"button-row\">\r\n            <button mat-raised-button\r\n                    class=\"red-button\"\r\n                    align=\"center\"\r\n                    type=\"button\"\r\n                    (click)=\"toOffloadReport()\">\r\n            <span>\r\n            Offload Report\r\n            </span>\r\n            </button> \r\n        </div>\r\n\r\n        <div class=\"button-row\">\r\n            <button mat-raised-button\r\n                    class=\"red-button\"\r\n                    align=\"center\"\r\n                    type=\"button\"\r\n                    (click)=\"setNewTripFlag()\">\r\n            <span>\r\n            Start Another Trip\r\n            </span>\r\n            </button> \r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"requestToStartNewTrip\">\r\n        \r\n    <div class=\"row\"\r\n        align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n        Are you sure you want to start a new trip?\r\n        </h5>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n        align=\"center\">\r\n        <p>\r\n            If you select yes, you will not be able to complete an offload report for this trip \r\n            at <b>any</b> point in the future.\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n\r\n            <div class=\"col-1\"></div>\r\n            <div class=\"col-4\">\r\n                <div class=\"row\">\r\n                <button mat-raised-button\r\n                        class=\"fishing-button-red\"\r\n                        type=\"submit\"\r\n                        (click)=\"clearNewTripFlag()\">\r\n                    <span>\r\n                    No\r\n                    </span>\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-4\">\r\n                <div class=\"row\">\r\n                <button mat-raised-button\r\n                        class=\"fishing-button-red\"\r\n                        type=\"submit\"\r\n                        (click)=\"toNoTripHome()\">\r\n                    Yes\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-1\"></div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService, User } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\nimport { LocalStorageService } from '../../services/local-storage.service';\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserData } from 'src/app/data-models/user-models/user-data.model';\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\nimport { DatePipe } from '@angular/common';\nimport { Gear } from 'src/app/data-models/trip-models/gear-models/gear.model';\n\n@Component({\n  selector: 'app-records-page',\n  templateUrl: './records-page.component.html',\n  styleUrls: ['./records-page.component.css']\n})\nexport class RecordsPageComponent {\n\n   //data preambles\n   userDetails: UserData = new UserData('', '');\n   currTrip: Trip = new Trip();\n\n  constructor( // same constructor as original homepage\n    public auth: AuthService,\n    private router: Router,\n    private datePipe: DatePipe,\n    private onlineStatusService: OnlineStatusService,\n    private localStorageService: LocalStorageService,\n    private toastr: ToastrService,\n    @Inject(DOCUMENT) public document: Document\n  ) { // POSSIBLY CHANGE TO RESEMBLE THE WORK DONE IN TYRELL'S PR\n\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\n        if (authd) {\n          this.auth.user$.subscribe((user: User | null | undefined) => {\n            if (user) {\n              this.localStorageService.saveData('currID', user.sub);\n            }\n          })\n        }\n        else {\n          this.toastr.error(\"Please log in\", \"Not authenticated\");\n          this.router.navigate(['login']);\n        }\n      });\n    }\n\n    this.initialize(); // POSSIBLY MOVE \n\n  }\n\n  formatDate(date: Date): string {\n    let formattedDate = this.datePipe.transform(date, 'shortDate');\n    if(formattedDate != null){\n      return formattedDate\n    }\n    return ''; // throw error here\n  }\n\n  initialize(): void {\n\n    // get current fishing report information\n    let currID: string = this.localStorageService.getCurrID();\n    this.userDetails = this.localStorageService.getUserByID(currID);\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\n\n  }\n\n  getDate(date: Date): Date {\n    return new Date(date);\n  }\n\n  getGear(gear: Gear): string {\n    console.log(gear.toString());\n    return gear.toString();\n  }\n\n}\n","<div class=\"container\" style=\"padding-bottom: 10px;\">\n\n    <div class=\"row\" style=\"padding-top: 20px;\">\n  \n      <div class=\"col\" align=\"left\">\n        <h1 class=\"blue-trip-heading\">\n          Records\n        </h1>\n      </div>\n  \n  \n      <div class=\"col\" align=\"right\">\n        <app-menu> </app-menu>\n      </div>\n  \n    </div>\n\n    <div class=\"row\"\n                *ngIf=\"userDetails.currHomepage=='no-trip-home' && userDetails.prevTrips.length <= 0\">\n        <h3 class=\"blue-subheading\">\n          You have no trip records.\n        </h3>\n      </div>\n\n    <!-- Current Trip Records -->\n\n    <div *ngIf=\"userDetails.currHomepage!='no-trip-home'\">\n  \n        <div class=\"row\">\n        <h3 class=\"blue-subheading\">\n            Current Trip\n            <span style=\"display:inline\">\n                 #{{currTrip.tripID}}:\n            </span>\n        </h3>\n        </div>\n\n        <!-- Start Report -->\n\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n            <mat-panel-title class=\"panel-title\">\n                Start Report &nbsp;\n                <span class=\"panel-date\">\n                    {{formatDate(currTrip.startFishingReport.startDate)}}\n                </span>\n            </mat-panel-title>\n            </mat-expansion-panel-header>\n                <h6 class=\"field-label\">\n                    <span style=\"display:inline; font-weight:500;\"> \n                        Date Submitted: \n                    </span>\n                    <span style=\"display:inline\">\n                        {{getDate(currTrip.startFishingReport.submissionDate)}}\n                    </span>\n                </h6>\n                <h6 class=\"field-label\">\n                    <span style=\"display:inline; font-weight:500;\"> \n                        Confirmation Number: \n                    </span>\n                    <span style=\"display:inline\">\n                        {{currTrip.startFishingReport.confirmationNumber}}\n                    </span>\n                </h6>\n                <h6 class=\"field-label\">\n                    <span style=\"display:inline; font-weight:500;\"> \n                        Transmission Status: \n                    </span>\n                    <span style=\"display:inline\"\n                        *ngIf=\"currTrip.startFishingReport.isTransmitted\">\n                        Sent To DFO\n                    </span>\n                    <span style=\"display:inline\"\n                        *ngIf=\"!currTrip.startFishingReport.isTransmitted\"\n                        class=\"not-transmitted\">\n                        Not Sent To DFO\n                    </span>\n                </h6>\n        </mat-expansion-panel>\n\n        <!-- Pause Fishing Reports -->\n\n        <mat-expansion-panel *ngIf=\"currTrip.pauseFishingReports.length>0\">\n            <mat-expansion-panel-header>\n            <mat-panel-title class=\"panel-title\">\n               Pause Reports &nbsp;\n               <span class=\"panel-date\">\n                (count: {{currTrip.pauseFishingReports.length}})\n              </span>\n            </mat-panel-title>\n            </mat-expansion-panel-header>\n                \n                <mat-expansion-panel *ngFor=\"let pauseReport of currTrip.pauseFishingReports.reverse()\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            <span class=\"panel-date\">\n                                {{formatDate(pauseReport.pauseDate)}}\n                            </span>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Date Submitted: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{getDate(pauseReport.submissionDate)}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Confirmation Number: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{pauseReport.confirmationNumber}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Transmission Status: \n                            </span>\n                            <span style=\"display:inline\"\n                                *ngIf=\"pauseReport.isTransmitted\">\n                                Sent To DFO\n                            </span>\n                            <span style=\"display:inline\"\n                                *ngIf=\"!pauseReport.isTransmitted\"\n                                class=\"not-transmitted\">\n                                Not Sent To DFO\n                            </span>\n                        </h6>\n                </mat-expansion-panel>\n\n        </mat-expansion-panel>\n\n        <!-- Daily Catch Reports -->\n\n        <mat-expansion-panel *ngIf=\"currTrip.dailyCatchReports.length>0\">\n            <mat-expansion-panel-header>\n            <mat-panel-title class=\"panel-title\">\n                 Catch Reports &nbsp;\n                 <span class=\"panel-date\">\n                    (count: {{currTrip.dailyCatchReports.length}})\n                 </span>\n            </mat-panel-title>\n            </mat-expansion-panel-header>\n                \n                <mat-expansion-panel *ngFor=\"let catchReport of currTrip.dailyCatchReports.reverse()\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            <span class=\"panel-date\">\n                                {{formatDate(catchReport.dateFished)}}\n                            </span>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Date Submitted: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{getDate(catchReport.submissionDate)}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Confirmation Number: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{catchReport.confirmationNumber}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Transmission Status: \n                            </span> \n                            <span style=\"display:inline\"\n                                *ngIf=\"catchReport.isTransmitted\">\n                                Sent To DFO\n                            </span>\n                            <span style=\"display:inline\"\n                                *ngIf=\"!catchReport.isTransmitted\"\n                                class=\"not-transmitted\">\n                                Not Sent To DFO\n                            </span>\n                        </h6>\n                </mat-expansion-panel>\n\n        </mat-expansion-panel>\n\n         <!-- Offload Catch Reports --> \n\n         <mat-expansion-panel *ngIf=\"currTrip.offloadReports.length>0\">\n            <mat-expansion-panel-header>\n            <mat-panel-title class=\"panel-title\">\n                Offload Reports &nbsp;\n                <span class=\"panel-date\">\n                    (count: {{currTrip.offloadReports.length}})\n                 </span>\n            </mat-panel-title>\n            </mat-expansion-panel-header>\n                \n                <mat-expansion-panel *ngFor=\"let offloadReport of currTrip.offloadReports.reverse()\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            <span class=\"panel-date\">\n                                {{formatDate(offloadReport.offloadDate)}}\n                            </span>\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Date Submitted: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{getDate(offloadReport.submissionDate)}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Confirmation Number: \n                            </span>\n                            <span style=\"display:inline\">\n                                {{offloadReport.confirmationNumber}}\n                            </span>\n                        </h6>\n                        <h6 class=\"field-label\">\n                            <span style=\"display:inline; font-weight:500;\"> \n                                Transmission Status: \n                            </span>\n                            <span style=\"display:inline\"\n                                *ngIf=\"offloadReport.isTransmitted\">\n                                Sent To DFO\n                            </span>\n                            <span style=\"display:inline\"\n                                *ngIf=\"!offloadReport.isTransmitted\"\n                                class=\"not-transmitted\">\n                                Not Sent To DFO\n                            </span>\n                        </h6>\n                </mat-expansion-panel>\n\n        </mat-expansion-panel>\n\n    </div>\n\n    <!-- Past Trip Records -->\n\n      <div class=\"row\"\n            *ngIf=\"userDetails.prevTrips.length > 0\">\n        <h3 class=\"blue-subheading\">\n          Past Trips:\n        </h3>\n      </div>\n\n      <div *ngFor=\"let trip of userDetails.prevTrips.reverse()\"\n      class=\"past-trips\">\n\n        <mat-expansion-panel>\n\n            <mat-expansion-panel-header>\n            <mat-panel-title class=\"panel-title\"\n                             style=\"font-size:18px\">\n                Trip #{{trip.tripID}}&nbsp;&nbsp;&nbsp;\n                <span class=\"panel-date\"\n                    style=\"font-size:16px\">\n                    {{formatDate(trip.startFishingReport.startDate)}}&nbsp; \n                </span>\n                <span span style=\"display:inline; font-size:16px\"\n                    class=\"panel-date\"\n                    *ngIf=\"trip.endFishingReport.isComplete && !trip.cancelFishingReport.isComplete\">\n                    - {{formatDate(trip.endFishingReport.endDate)}}\n                </span>\n                <span span style=\"display:inline; font-size:16px\"\n                    class=\"panel-date\"\n                    *ngIf=\"trip.cancelFishingReport.isComplete && !trip.endFishingReport.isComplete\">\n                    - {{formatDate(trip.startFishingReport.startDate)}}\n                </span>\n            </mat-panel-title>\n            </mat-expansion-panel-header>\n\n                <!-- General Trip Information -->\n\n                <div class=\"trip-info\" align=\"center\">\n                    <h6 class=\"descriptive-text\">\n                    Gear Type:\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\n                        {{trip.gear.name}} (Logbook #{{trip.gear.logbookID}})\n                    </span>\n                    </h6>\n                </div>\n                \n                <div class=\"trip-info\" align=\"center\">\n                    <h6 class=\"descriptive-text\">\n                    Vessel Master:\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\n                        {{trip.master}} (FIN: {{trip.fin}})\n                    </span>\n                    </h6>\n                </div>\n                \n                <div class=\"trip-info\" align=\"center\">\n                    <h6 class=\"descriptive-text\">\n                    Vessel:\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\n                        {{trip.vessel.vesselName}} (VRN: {{trip.vessel.vesselCoastNumber}})\n                    </span>\n                    </h6>\n                </div>\n                \n                <div class=\"trip-info\" align=\"center\">\n                    <h6 class=\"descriptive-text\">\n                    License Area:\n                    <span style=\"display:inline; font-weight:400; color:#005d87;\">\n                        {{trip.licenseArea.licenseName}} ({{trip.licenseArea.licenseLocation}})\n                    </span>\n                    </h6>\n                </div>\n\n\n                <!-- Start Report -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            Start Report &nbsp; \n                            <span class=\"panel-date\">\n                                {{formatDate(trip.startFishingReport.startDate)}}\n                            </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n                            <h6 class=\"field-label\"> \n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Date Submitted: \n                                </span>\n                                <span style=\"display:inline\">\n                                    {{getDate(trip.startFishingReport.submissionDate)}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Confirmation Number: \n                                </span>\n                                <span style=\"display:inline\">\n                                    {{trip.startFishingReport.confirmationNumber}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Transmission Status: \n                                </span>\n                                <span style=\"display:inline\"\n                                    *ngIf=\"trip.startFishingReport.isTransmitted\">\n                                    Sent To DFO\n                                </span>\n                                <span style=\"display:inline\"\n                                    *ngIf=\"!trip.startFishingReport.isTransmitted\"\n                                    class=\"not-transmitted\">\n                                    Not Sent To DFO\n                                </span>\n                            </h6>\n                    </mat-expansion-panel>\n\n                </div>\n\n                <!-- End Report -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel *ngIf=\"trip.endFishingReport.isComplete\">\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            End Report &nbsp;\n                            <span class=\"panel-date\">\n                                {{formatDate(trip.endFishingReport.endDate)}}\n                            </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Date Submitted: \n                                </span>\n                                <span style=\"display:inline\">\n                                    {{getDate(trip.endFishingReport.submissionDate)}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Confirmation Number: \n                                </span>\n                                <span style=\"display:inline\">\n                                    {{trip.endFishingReport.confirmationNumber}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Transmission Status: \n                                </span> \n                                <span style=\"display:inline\"\n                                    *ngIf=\"trip.endFishingReport.isTransmitted\">\n                                    Sent To DFO\n                                </span>\n                                <span style=\"display:inline\"\n                                    *ngIf=\"!trip.endFishingReport.isTransmitted\"\n                                    class=\"not-transmitted\">\n                                    Not Sent To DFO\n                                </span>\n                            </h6>\n                    </mat-expansion-panel>\n\n                </div>\n\n                <!-- Cancel Report -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel *ngIf=\"trip.cancelFishingReport.isComplete\">\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            Cancel Report &nbsp;\n                            <span class=\"panel-date\">\n                                {{formatDate(trip.startFishingReport.startDate)}}\n                            </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Date Submitted: \n                                </span>\n                                <span style=\"display:inline\">\n                                    {{getDate(trip.cancelFishingReport.submissionDate)}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Confirmation Number: \n                                </span>  \n                                <span style=\"display:inline\">\n                                    {{trip.cancelFishingReport.confirmationNumber}}\n                                </span>\n                            </h6>\n                            <h6 class=\"field-label\">\n                                <span style=\"display:inline; font-weight:500;\"> \n                                    Transmission Status: \n                                </span>\n                                <span style=\"display:inline\"\n                                    *ngIf=\"trip.cancelFishingReport.isTransmitted\">\n                                    Sent To DFO\n                                </span>\n                                <span style=\"display:inline\"\n                                    *ngIf=\"!trip.cancelFishingReport.isTransmitted\"\n                                    class=\"not-transmitted\">\n                                    Not Sent To DFO\n                                </span>\n                            </h6>\n                    </mat-expansion-panel>\n\n                </div>\n\n                <!-- Pause Fishing Reports -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel *ngIf=\"trip.pauseFishingReports.length>0\">\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            Pause Reports &nbsp;\n                            <span class=\"panel-date\">\n                                (count: {{trip.pauseFishingReports.length}})\n                             </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                            <div class=\"sub-trips\"\n                            *ngFor=\"let pauseReport of trip.pauseFishingReports.reverse()\">\n                            \n                                <mat-expansion-panel>\n                                    <mat-expansion-panel-header>\n                                        <mat-panel-title class=\"panel-title\">\n                                            <span class=\"panel-date\">\n                                                {{formatDate(pauseReport.pauseDate)}}\n                                            </span>\n                                        </mat-panel-title>\n                                    </mat-expansion-panel-header>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Date Submitted: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{getDate(pauseReport.submissionDate)}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Confirmation Number: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{pauseReport.confirmationNumber}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Transmission Status: \n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"pauseReport.isTransmitted\">\n                                                Sent To DFO\n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"!pauseReport.isTransmitted\"\n                                                class=\"not-transmitted\">\n                                                Not Sent To DFO\n                                            </span>\n                                        </h6>\n                                </mat-expansion-panel>\n\n                           </div>\n\n                    </mat-expansion-panel>\n\n                </div>\n\n                <!-- Daily Catch Reports -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel *ngIf=\"trip.dailyCatchReports.length>0\">\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            Catch Reports &nbsp;\n                            <span class=\"panel-date\">\n                                (count: {{trip.dailyCatchReports.length}})\n                             </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                            <div class=\"sub-trips\" \n                                *ngFor=\"let catchReport of trip.dailyCatchReports.reverse()\">\n                            \n                                <mat-expansion-panel>\n                                    <mat-expansion-panel-header>\n                                        <mat-panel-title class=\"panel-title\">\n                                            <span class=\"panel-date\">\n                                                {{formatDate(catchReport.dateFished)}}\n                                            </span>\n                                        </mat-panel-title>\n                                    </mat-expansion-panel-header>\n                                        <h6 class=\"field-label\"> \n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Date Submitted: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{getDate(catchReport.submissionDate)}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Confirmation Number: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{catchReport.confirmationNumber}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Transmission Status: \n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"catchReport.isTransmitted\">\n                                                Sent To DFO\n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"!catchReport.isTransmitted\"\n                                                class=\"not-transmitted\">\n                                                Not Sent To DFO\n                                            </span>\n                                        </h6>\n                                </mat-expansion-panel>\n\n                             </div>\n\n                    </mat-expansion-panel>\n\n                </div>\n\n                <!-- Offload Catch Reports -->\n\n                <div class=\"sub-trips\">\n\n                    <mat-expansion-panel *ngIf=\"trip.offloadReports.length>0\">\n                        <mat-expansion-panel-header>\n                        <mat-panel-title class=\"panel-title\">\n                            Offload Reports &nbsp;\n                            <span class=\"panel-date\">\n                                (count: {{trip.offloadReports.length}})\n                             </span>\n                        </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                            <div class=\"sub-trips\"\n                                 *ngFor=\"let offloadReport of trip.offloadReports.reverse()\">\n                            \n                                <mat-expansion-panel>\n                                    <mat-expansion-panel-header>\n                                        <mat-panel-title class=\"panel-title\">\n                                            <span class=\"panel-date\">\n                                                {{formatDate(offloadReport.offloadDate)}}\n                                            </span> \n                                        </mat-panel-title>\n                                    </mat-expansion-panel-header>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Date Submitted: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{getDate(offloadReport.submissionDate)}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Confirmation Number: \n                                            </span>\n                                            <span style=\"display:inline\">\n                                                {{offloadReport.confirmationNumber}}\n                                            </span>\n                                        </h6>\n                                        <h6 class=\"field-label\">\n                                            <span style=\"display:inline; font-weight:500;\"> \n                                                Transmission Status: \n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"offloadReport.isTransmitted\">\n                                                Sent To DFO\n                                            </span>\n                                            <span style=\"display:inline\"\n                                                *ngIf=\"!offloadReport.isTransmitted\"\n                                                class=\"not-transmitted\">\n                                                Not Sent To DFO\n                                            </span>\n                                        </h6>\n                                </mat-expansion-panel>\n\n                            </div>\n\n                    </mat-expansion-panel>\n\n                </div>\n\n        </mat-expansion-panel>\n\n      </div>\n\n  \n  </div>\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from '../services/local-storage.service';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService\r\n    ) {\r\n\r\n  }\r\n\r\n // navigate back to the current trip homepage  \r\n toCurrentHome(): void {\r\n  let currID: string = this.localStorageService.getCurrID();\r\n  this.userDetails = this.localStorageService.getUserByID(currID);\r\n  this.router.navigate([this.userDetails.currHomepage]);\r\n}\r\n\r\n  // navigate to the profile page (not yet implemented)\r\n  toProfile(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the records page\r\n  toRecords(): void {\r\n    this.router.navigate(['records-page']);\r\n  }\r\n\r\n  // navigate to the resources page (not yet implemented)\r\n  toResources(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // navigate to the fishery notices page (not yet implemented)\r\n  toFisheryNotices(): void {\r\n    //To-Do\r\n  }\r\n\r\n  // log out of account and go back to login screen\r\n  logout(): void {\r\n    this.localStorageService.logout();\r\n  }\r\n\r\n}\r\n","<button mat-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon class=\"menu-button\">menu</mat-icon>\r\n</button>\r\n<mat-menu #menu=\"matMenu\" class=\"menu\">\r\n    <button mat-menu-item\r\n            (click)=\"toCurrentHome()\">\r\n        <mat-icon class=\"item-icon\">home</mat-icon>\r\n        <h6 class=\"menu-item\">Home/My Trip</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toProfile()\">\r\n        <mat-icon class=\"item-icon\">person</mat-icon>\r\n        <h6 class=\"menu-item\">Profile</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toRecords()\">\r\n        <mat-icon class=\"item-icon\">folder</mat-icon>\r\n        <h6 class=\"menu-item\">Records</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toResources()\">\r\n        <mat-icon class=\"item-icon\">description</mat-icon>\r\n        <h6 class=\"menu-item\">Resources</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"toFisheryNotices()\">\r\n        <mat-icon class=\"item-icon\">notifications</mat-icon>\r\n        <h6 class=\"menu-item\">Fishery Notices</h6>\r\n    </button>\r\n    <button mat-menu-item\r\n            (click)=\"logout()\">\r\n        <mat-icon class=\"item-icon\">logout</mat-icon>\r\n        <h6 class=\"menu-item\">Logout</h6>\r\n    </button>\r\n</mat-menu>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { CancelReport } from 'src/app/data-models/report-models/cancel-report.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cancel-report',\r\n  templateUrl: './cancel-report.component.html',\r\n  styleUrls: ['./cancel-report.component.css']\r\n})\r\nexport class CancelReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  cancelReport: CancelReport = new CancelReport();\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService,\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n              return;\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    } else { // user is offline\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n  // send cancel report to DFO\r\n  sendToDFO(): void {\r\n    this.saveReportData(); // save data to local storage\r\n    this.updateHomepage();\r\n    this.router.navigate(['submitted-report'], { state: { name: 'Cancel Fishing Report' } });\r\n  }\r\n\r\n  saveReportData(): void {\r\n\r\n    this.cancelReport.submissionDate = new Date(); // get current date/time\r\n    this.cancelReport.isComplete = true; // set submission flag\r\n    this.currTrip.cancelFishingReport = this.cancelReport; // copy over the report\r\n\r\n    console.log(this.currTrip.cancelFishingReport);\r\n    // save currTrip to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Are you sure you want to cancel this trip?\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Doing so will send a Cancel Fishing Report to DFO. Please refer to the\r\n      <b>\r\n        Resources\r\n      </b>\r\n      page for more information on cancelled trips.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"button\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            No\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-2\"></div>\r\n\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"sendToDFO()\">\r\n          <span>\r\n            Yes \r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { EndReport } from 'src/app/data-models/report-models/end-report.model';\r\n\r\n@Component({\r\n  selector: 'app-end-report',\r\n  templateUrl: './end-report.component.html',\r\n  styleUrls: ['./end-report.component.css']\r\n})\r\nexport class EndReportComponent {\r\n\r\n  // data preambles\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n  endFishingReport: EndReport = new EndReport();\r\n\r\n  // report data\r\n  endForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  endDate: Date = new Date(); // page 1\r\n\r\n  // arrival form for \r\n  arrivalForm: UntypedFormGroup = new UntypedFormGroup({\r\n    site: new FormControl<string>('', [Validators.required]) // arrival page (page 4)\r\n  });\r\n  arrivalTime: { hour: number, minute: number } = { hour: 0, minute: 0 };\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize values\r\n  initialize(): void {\r\n\r\n    // get current fishing report\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n\r\n    // set time to current time\r\n    this.arrivalTime = {\r\n      hour: this.endDate.getHours(),\r\n      minute: this.endDate.getMinutes()\r\n    };\r\n\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.endForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // save End Fishing Report and Trip Data\r\n  saveReportData(): void {\r\n\r\n    if(this.currTrip.gear.name === 'Troll' && this.currTrip.licenseArea.licenseName === 'G'){\r\n      this.setDateTime(); // add arrival time to the date\r\n      this.endFishingReport.endDate = this.endDate; // save end date to report\r\n      this.endFishingReport.arrivalSite = this.arrivalForm.get('site')?.value;\r\n    } else {\r\n      this.endFishingReport.endDate = this.endDate; // save end date to report\r\n    }\r\n    this.endFishingReport.isComplete = true; // set submission flag\r\n    this.endFishingReport.managementArea = this.endForm.get('managementArea')?.value;\r\n    this.endFishingReport.comments = this.endForm.get('comments')?.value;\r\n    this.endFishingReport.submissionDate = new Date(); // get current date/time\r\n    this.currTrip.endFishingReport = this.endFishingReport;\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    // not on arrival page\r\n    if (this.currPage < 4) {\r\n\r\n      if (this.endForm.valid) {\r\n\r\n        // arrival details for troll gear and license area G\r\n        if (this.currTrip.startFishingReport.isComplete && this.currTrip.gear.name === 'Troll' && this.currTrip.licenseArea.licenseName === 'G') {\r\n\r\n          // set arrival time to current time\r\n          let newDate: Date = new Date();\r\n          this.arrivalTime = {\r\n            hour: newDate.getHours(),\r\n            minute: newDate.getMinutes()\r\n          };\r\n\r\n          // go to arrival page\r\n          this.currPage++;\r\n          return;\r\n\r\n        }\r\n        this.saveReportData();\r\n        this.toSubmittedReport();\r\n        return;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // arrival page\r\n    else {\r\n\r\n      if (this.arrivalForm.valid) {\r\n        this.saveReportData();\r\n        this.toSubmittedReport();\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n\r\n  }\r\n\r\n  updateHomepage(homeName: string): void {\r\n    this.userDetails.currHomepage = homeName;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let arrivalHours: number = this.arrivalTime.hour;\r\n    let arrivalMinutes: number = this.arrivalTime.minute;\r\n\r\n    this.endDate.setHours(arrivalHours ? arrivalHours : this.endDate.getHours());\r\n    this.endDate.setMinutes(arrivalMinutes ? arrivalMinutes : this.endDate.getMinutes());\r\n    this.endDate.setSeconds(0);\r\n    this.endDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  toSubmittedReport(): void {\r\n    if (this.currTrip.offloadNeeded) {\r\n      this.updateHomepage('offload-home');\r\n    } else {\r\n      this.updateHomepage('no-trip-home');\r\n    }\r\n    this.router.navigate(['submitted-report'], { state: { name: 'End Fishing Report' } });\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage === 3\"\r\n                  class=\"top-icon\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n        <mat-icon *ngIf=\"currPage === 4\"\r\n                  class=\"top-icon\">\r\n          priority_high\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"endForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you end fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"endDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"endForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            End Date:\r\n          </b>\r\n          {{ endDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{endForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{endForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Troll and G -->\r\n  <form [formGroup]=\"arrivalForm\">\r\n\r\n    <div *ngIf=\"currPage === 4\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Your license area and gear type require you to provide additional information.\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Please Provide Arrival Details\r\n          </b>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Designated Landing Site\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Site Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"site\">\r\n          <mat-error *ngIf=\"arrivalForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Estimated Arrival Time\r\n        </h6>\r\n        <ngb-timepicker [meridian]=\"true\"\r\n                        [ngModelOptions]=\"{ standalone: true }\"\r\n                        [(ngModel)]=\"arrivalTime\">\r\n\r\n        </ngb-timepicker>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { SpeciesData } from '../../data-models/catch-table-models/species-data.model';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { AddSpeciesDialogComponent } from '../../dialogs/add-species-dialog/add-species-dialog.component';\r\nimport { TableRules } from 'src/app/data-models/catch-table-models/table-rules.model';\r\nimport { OffloadReport } from 'src/app/data-models/report-models/offload-report.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-offload-report',\r\n  templateUrl: './offload-report.component.html',\r\n  styleUrls: ['./offload-report.component.css']\r\n})\r\nexport class OffloadReportComponent {\r\n\r\n  // table data\r\n  @ViewChild(MatTable) table!: MatTable<SpeciesData>; // for updating the table\r\n  offloadTable: TableRules = new TableRules(); // used in add species dialog\r\n  tableDataSource: SpeciesData[] = []; // all species data currently in the table\r\n  displayedColumns: string[] = []; // columns currently being displayed in the table\r\n  weightUnitOptions: string[] = ['Lbs', 'Kgs']; //hardcoded values to be used in the form\r\n\r\n  // data preambles\r\n  responseOptions: string[] = ['Yes', 'No']; //hardcoded values to be used in the form\r\n  userDetails: UserData = new UserData('', '');\r\n  unfilteredFishList: SpeciesData[] = []; // temporary array to store species contained in local storage\r\n  fishList: SpeciesData[] = []; //filtered list of species data, will comprise the user's look-up list\r\n\r\n  currTrip: Trip = new Trip();\r\n  offloadReport: OffloadReport = new OffloadReport();\r\n\r\n  offloadForm: UntypedFormGroup = new UntypedFormGroup({\r\n    fishSlipIssued: new FormControl<string>('', [Validators.required]), // page 2\r\n    fishSlipNumber: new FormControl<string>(''), // page 2 (conditionally validated)\r\n    weightUnits: new FormControl<string>(''), // page 2 (always auto-selected so no need for validation)\r\n  });\r\n  offloadDate: Date = new Date(); // page 1\r\n  offloadTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 1\r\n\r\n  // page controls\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onFishSlipChange();\r\n  }\r\n\r\n  onFishSlipChange(): void {\r\n    this.offloadForm.get('fishSlipIssued')?.valueChanges.subscribe((value: string) => {\r\n      const fishSlipControl: AbstractControl<any, any> | null = this.offloadForm.get('fishSlipNumber');\r\n\r\n      if(value === 'Yes'){\r\n        fishSlipControl?.setValidators([Validators.required]);\r\n      }else{\r\n        fishSlipControl?.clearValidators();\r\n      }\r\n      fishSlipControl?.updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  initialize(): void {\r\n\r\n    // get all required data\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n    this.unfilteredFishList = this.localStorageService.getSpeciesList('fishList');\r\n    this.setTableRules(); \r\n    this.filterSpeciesData(); // filter species list available to the user\r\n\r\n    // initialize table data\r\n    this.getTableData();\r\n    this.offloadForm.patchValue({ weightUnits: 'Lbs' }); // automatically set to lbs (most common unit)\r\n    this.setDisplayedColumns();\r\n\r\n    // set the start time to the current time\r\n    this.offloadTime = {\r\n      hour: this.offloadDate.getHours(),\r\n      minute: this.offloadDate.getMinutes()\r\n    };\r\n\r\n    this.numPages = 3;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // table rules will be the same as they are for the current gear's Daily Catch Report with a couple differences:\r\n    // tableType will instead be 'offload-catch' and containsSpecies list will be cleared since we are getting that info from the daily catch reports\r\n  setTableRules(): void {\r\n    this.offloadTable = this.localStorageService.getTableRules(this.currTrip.gear.name);\r\n    this.offloadTable.tableType = 'offload-catch';\r\n    this.offloadTable.containsSpecies.length = 0; // clear contains list\r\n  }\r\n\r\n  // gets default table data based on the species that were caught/released during the current trip\r\n  getTableData(): void {\r\n    // loop through each daily catch report in currTrip, and add all species data to the table source\r\n    let speciesNamesList: string[] = []; // temp storage for species names (used for comparison)\r\n    for(let catchReport of this.currTrip.dailyCatchReports) { // loop through each catch report \r\n      console.log(catchReport);\r\n      for(let species of catchReport.speciesDataList) { // loop through each species list\r\n        // only include if the species is not already in our list and it was kept \r\n        if(!speciesNamesList.includes(species.speciesName) && species.kept > 0) { \r\n          console.log(species.speciesName);\r\n          let tempSpecies: SpeciesData = new SpeciesData(species.speciesName); // create new species object \r\n          tempSpecies.kept = 0;\r\n          tempSpecies.released = 0;\r\n          tempSpecies.offloadPieces = 0;\r\n          tempSpecies.offloadWeight = 0;\r\n          this.tableDataSource.push(tempSpecies); // add species to the table\r\n          speciesNamesList.push(species.speciesName);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      if(this.currPage === 1) {\r\n        this.setDateTime();\r\n      }\r\n      this.currPage++;\r\n      this.spinnerProgress += this.spinnerIncrement;\r\n    } else {\r\n      this.sendToDFO();\r\n    }\r\n  \r\n  }\r\n\r\n  toPreviousPage(): void {\r\n    if(this.currPage === 1) {\r\n      this.toHome();\r\n    }\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n  }\r\n\r\n  setDateTime(): void {\r\n\r\n    let startHours: number = this.offloadTime.hour;\r\n    let startMinutes: number = this.offloadTime.minute;\r\n\r\n    this.offloadDate.setHours(startHours ? startHours : this.offloadDate.getHours());\r\n    this.offloadDate.setMinutes(startMinutes ? startMinutes : this.offloadDate.getMinutes());\r\n    this.offloadDate.setSeconds(0);\r\n    this.offloadDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  setDisplayedColumns(): void {\r\n    if(this.getCurrentGearType() === 'Seine'){\r\n      this.displayedColumns = ['speciesName', 'weight', 'pieces'];\r\n    } else { // will be Gill Net in this case\r\n      this.displayedColumns = ['speciesName', 'pieces'];\r\n    }\r\n  \r\n  }\r\n\r\n  fishSlipVal(): string { // returns the the response to the fish slip issues question\r\n    return this.offloadForm.get('fishSlipIssued')?.value;\r\n  }\r\n\r\n  getWeightUnits(): string {\r\n    return this.offloadForm.get('weightUnits')?.value;\r\n  }\r\n\r\n  getCurrentGearType(): string {\r\n    return this.currTrip.gear.name;\r\n  }\r\n\r\n  filterSpeciesData(): void {  // filters the species list accessible to the user in the add species dialog\r\n    for (let species of this.unfilteredFishList) {\r\n      let excludeFlag: boolean = false;\r\n      for (let tableSpecies of this.tableDataSource) {\r\n        if (species.speciesName === tableSpecies.speciesName) {\r\n          excludeFlag = true; // we only want to add species to the list that are not already in the table\r\n        }\r\n      }\r\n      if (!excludeFlag) { // if the species is not already in the table\r\n        if(!this.offloadTable.excludesSpecies.includes(species.speciesName) && // only add the species if it is not excluded from in the gear type\r\n        !this.offloadTable.releaseOnlySpecies.includes(species.speciesName)) { // only add the species if it is not release-only\r\n          this.fishList.push(species);\r\n        }\r\n      } \r\n      excludeFlag = false; // reset flag\r\n    }\r\n  }\r\n\r\n   // add to, edit or delete from species catch list\r\n   addSpeciesDialog(index: number = -1): void {\r\n\r\n    // editing or deleting a species\r\n    if (index > -1) {\r\n          this.editSpecies(this.tableDataSource, index);\r\n      }\r\n\r\n    // adding a species\r\n    else {\r\n          this.addSpecies(this.tableDataSource);\r\n      }\r\n\r\n  }\r\n\r\n  // add new species to the catch\r\n  addSpecies(fishListDetails: SpeciesData[]): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'add', species: new SpeciesData(''), currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.offloadTable }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // adding a species to the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails.push(this.getNewSpecies(result));\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n   // edit or delete a species from the catch\r\n   editSpecies(fishListDetails: SpeciesData[], index: number): void {\r\n\r\n    const dialogRef: MatDialogRef<AddSpeciesDialogComponent, any> = this.dialog.open(AddSpeciesDialogComponent, {\r\n      width: '500px',\r\n      height: '450px',\r\n      data: { identifier: 'edit', species: this.tableDataSource[index], currentFishList: fishListDetails, \r\n      filteredFishList: this.fishList, tableInfo: this.offloadTable  }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // editing a species in the catch\r\n        if (result !== 'delete') {\r\n          fishListDetails[index] = this.getNewSpecies(result);\r\n        }\r\n\r\n        // delete a species in the catch\r\n        else {\r\n          fishListDetails.splice(index, 1);\r\n        }\r\n\r\n        // update the table\r\n        this.updateTable();\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  determineCellStyling(value: number): string {\r\n    if(value>0){\r\n      return 'bolded-cell';\r\n    } \r\n    return 'faded-cell';\r\n  }\r\n\r\n  // get new species data from result\r\n  getNewSpecies(result: SpeciesData): SpeciesData {\r\n\r\n    let weight: number = result.offloadWeight ? +result.offloadWeight : 0;\r\n    let pieces: number = result.offloadPieces ? +result.offloadPieces : 0;\r\n    let newSpeciesData: SpeciesData = new SpeciesData(result.speciesName);\r\n    newSpeciesData.offloadWeight = weight;\r\n    newSpeciesData.offloadPieces = pieces;\r\n\r\n    return newSpeciesData;\r\n\r\n  }\r\n\r\n  calculateTotalFish(type: string): number {\r\n\r\n    let totalFish = 0;\r\n\r\n    if(type === 'weight'){\r\n      for(var i=0; i<this.tableDataSource.length; i++){\r\n        totalFish += this.tableDataSource[i].offloadWeight;\r\n      }\r\n    }else if(type === 'pieces'){\r\n      for(var i=0; i<this.tableDataSource.length; i++){\r\n        totalFish += this.tableDataSource[i].offloadPieces;\r\n      }\r\n    }\r\n    return totalFish;\r\n  }\r\n\r\n   // update the specified species catch table\r\n   updateTable(): void {\r\n    this.table.renderRows();\r\n  }\r\n\r\n  toHome(): void { \r\n    // navigate to the user's current homepage (may be offload-home or active-trip-home)\r\n    this.router.navigate([this.userDetails.currHomepage]); \r\n  }\r\n\r\n   // forbid field from entering non-decimal values\r\n   forbidNonNumeric(controlName: string): void {\r\n    let control: AbstractControl = this.offloadForm.get(controlName)!;\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''));\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'no-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  determineSpeciesData(): SpeciesData[] {\r\n\r\n    let tempFishArray: SpeciesData[] = [];\r\n\r\n    for(let fish of this.tableDataSource) {\r\n      if(fish.offloadWeight != 0 || fish.offloadPieces !=0 ) {\r\n        tempFishArray.push(fish);\r\n      }\r\n    }\r\n    return tempFishArray;\r\n\r\n  }\r\n\r\n  saveReportData(): void {\r\n\r\n    // copy relevant data to offload report object\r\n    this.offloadReport.offloadDate = this.offloadDate;\r\n    this.offloadReport.fishSlip = this.offloadForm.get('fishSlipIssued')?.value;\r\n    this.offloadReport.fishSlipNumber = this.offloadForm.get('fishSlipNumber')?.value;\r\n    this.offloadReport.speciesDataList = this.determineSpeciesData();\r\n    this.offloadReport.catchWeightUnits = this.offloadForm.get('weightUnits')?.value;\r\n    this.offloadReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.offloadReports.push(this.offloadReport);\r\n\r\n    // save to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  sendToDFO(): void {\r\n\r\n    if(this.offloadForm.valid) {\r\n      this.saveReportData();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Offload Catch Report' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n    <form [formGroup]=\"offloadForm\">\r\n\r\n        <!-- Spinner & Page Count -->\r\n\r\n        <div class=\"container\"\r\n        style=\"padding-top: 20px;\">\r\n        <div class=\"row\"\r\n            align=\"center\">\r\n        <h6 *ngIf=\"currPage <= numPages\">\r\n            <small class=\"text-muted\">\r\n            Question {{currPage}} of {{numPages}}\r\n            </small>\r\n        </h6>\r\n        <h6 *ngIf=\"currPage > numPages\">\r\n            <small class=\"text-muted\">\r\n            Offload Catch Report\r\n            </small>\r\n        </h6>\r\n        </div>\r\n\r\n        <div class=\"row\"\r\n            align=\"center\">\r\n        <div class=\"col-5\"></div>\r\n        <div class=\"col-2\">\r\n            <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                        mode=\"determinate\"\r\n                        [diameter]=\"50\"\r\n                        [strokeWidth]=\"6\"\r\n                        [value]=\"spinnerProgress\">\r\n            </mat-spinner>\r\n\r\n            <mat-icon *ngIf=\"currPage > numPages\"\r\n                    style=\"color: #3ebfb9\">\r\n            check_circle_outline\r\n            </mat-icon>\r\n        </div>\r\n        <div class=\"col-5\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Offload Date & Time -->\r\n\r\n        <div *ngIf=\"currPage === 1\"\r\n            class=\"container details\">\r\n\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n            <h5 class=\"blue-heading-title\">\r\n                When did you offload?\r\n            </h5>\r\n            </div>\r\n\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-8\">\r\n                <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\r\n                <mat-calendar [(selected)]=\"offloadDate\"></mat-calendar>\r\n                </mat-card>\r\n                <ngb-timepicker class=\"time-picker\"\r\n                                [meridian]=\"true\"\r\n                                [ngModelOptions]=\"{ standalone: true }\"\r\n                                [(ngModel)]=\"offloadTime\">\r\n                </ngb-timepicker>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Fish Slip & Units Information (not done) -->\r\n        <div *ngIf=\"currPage === 2\">\r\n            <div class=\"row\"\r\n                align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n                Were you issued a fish slip or sale slip?\r\n                </h5>\r\n                <mat-form-field appearance=\"outline\"\r\n                                    class=\"form-field\"\r\n                                    style=\"padding-top: 15px;\">\r\n                        <mat-label>\r\n                        Select\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"fishSlipIssued\">\r\n                        <mat-option *ngFor=\"let response of responseOptions\"\r\n                                    [value]=\"response\">\r\n                            {{response}}\r\n                        </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                        </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n            <div *ngIf=\"fishSlipVal() === 'Yes'\">\r\n                    <div class=\"row\"\r\n                        align=\"center\">\r\n                \r\n                        <h5 class=\"blue-heading-title\">\r\n                        Please provide the slip number.\r\n                        </h5>\r\n                        <mat-form-field appearance=\"outline\"\r\n                                        class=\"form-field\"\r\n                                        style=\"padding-top: 15px;\">\r\n                            <mat-label>\r\n                            Slip number\r\n                            </mat-label>\r\n                            <input matInput\r\n                                inputmode=\"numeric\"\r\n                                formControlName=\"fishSlipNumber\"\r\n                                (input)=\"forbidNonNumeric('fishSlipNumber')\">\r\n                            <mat-error *ngIf=\"offloadForm.invalid\">\r\n                            Required\r\n                            </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Weight Units -->\r\n\r\n            <div class=\"row\"\r\n                    *ngIf=\"getCurrentGearType() === 'Seine'\"\r\n                    align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n               How would you like to record catch weight?\r\n                </h5>\r\n             \r\n              <mat-form-field appearance=\"outline\"\r\n                                class=\"form-field\"\r\n                                style=\"padding-top: 15px;\">\r\n                     <mat-label>\r\n                        Select Units\r\n                    </mat-label>\r\n                    <mat-select formControlName=\"weightUnits\">\r\n                        <mat-option *ngFor=\"let weightUnit of weightUnitOptions\"\r\n                                    [value]=\"weightUnit\">\r\n                            {{weightUnit}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"offloadForm.invalid\">\r\n                        Required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Catch Table Page (not done) -->\r\n        <div *ngIf=\"currPage === 3\">\r\n\r\n              <!-- Table -->\r\n\r\n              <div class=\"row\"\r\n                    align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n               Offload Catch Table\r\n                </h5>\r\n              </div>\r\n             <h6 class=\"blue-label\"\r\n                *ngIf=\"getCurrentGearType() === 'Seine'\">\r\n                Please record total catch for each species in \r\n                <b>either </b> <i>weight </i> <b>or </b> <i>pieces</i>.\r\n              </h6>\r\n              <h6 class=\"blue-label\"\r\n                *ngIf=\"getCurrentGearType() === 'Gill Net'\">\r\n                Please record total catch for each species in <i>pieces</i>.\r\n              </h6>\r\n\r\n\r\n              <table mat-table\r\n              [dataSource]=\"tableDataSource\"\r\n              class=\"mat-elevation-z8 margin-table\">\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"speciesName\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef>\r\n                    Name\r\n                    </th>\r\n                    <td mat-cell\r\n                        *matCellDef=\"let element\">\r\n                    {{element.speciesName}}\r\n                    </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Weight Column (Seine only) -->\r\n                <ng-container *ngIf=\"getCurrentGearType() === 'Seine'\"\r\n                              matColumnDef=\"weight\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef>\r\n                        Weight <small>({{getWeightUnits()}})</small>\r\n                    </th>\r\n                        <td mat-cell [ngClass]=\"determineCellStyling(element.offloadWeight)\"\r\n                            *matCellDef=\"let element\">\r\n                        {{element.offloadWeight}}\r\n                        </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Pieces Column -->\r\n                <ng-container matColumnDef=\"pieces\">\r\n                <tr>\r\n                    <th mat-header-cell\r\n                        *matHeaderCellDef>\r\n                    Pieces\r\n                    </th>\r\n                    <td mat-cell [ngClass]=\"determineCellStyling(element.offloadPieces)\"\r\n                        *matCellDef=\"let element\">\r\n                    {{element.offloadPieces}}\r\n                    </td>\r\n                </tr>\r\n                </ng-container>\r\n\r\n                <!-- Rows -->\r\n\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns; let index=index;\"\r\n                    (click)=\"addSpeciesDialog(index)\"></tr>\r\n                    \r\n            </table>  \r\n\r\n             <!-- Fish Totals -->\r\n\r\n            <div class=\"row\" style=\"padding-top: 10px;\">\r\n\r\n                <h6 *ngIf=\"getCurrentGearType() === 'Seine'\">\r\n                    <b>\r\n                        Total Weight:\r\n                    </b>\r\n                    {{calculateTotalFish('weight')}}\r\n                </h6>\r\n                <h6>\r\n                    <b>\r\n                        Total Pieces:\r\n                    </b>\r\n                    {{calculateTotalFish('pieces')}}\r\n                </h6>\r\n             </div>\r\n\r\n            \r\n            <div class=\"row add-item\" style=\"padding-top: 15px;\"\r\n                align=\"center\">\r\n                <div class=\"col-2\"></div>\r\n                <div class=\"col-8\">\r\n                <div class=\"row\">\r\n                    <button mat-raised-button\r\n                            class=\"fishing-button-red\"\r\n                            type=\"button\"\r\n                            (click)=\"addSpeciesDialog()\">\r\n                    Add New Species\r\n                    </button>\r\n                </div>\r\n                </div>\r\n                <div class=\"col-2\"></div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- Confirmation Page -->\r\n        <div *ngIf=\"currPage > numPages\"\r\n            class=\"container\">\r\n            <div class=\"row\" align=\"center\">\r\n                <h5 class=\"blue-heading-title\">\r\n                  Is all information complete and ready to be submitted to DFO?\r\n                </h5>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Offload Date:\r\n                  </b>\r\n                  {{ offloadDate | date }}\r\n                </h6>\r\n              </div>\r\n        \r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Offload Time:\r\n                  </b>\r\n                  {{ offloadDate | date:'h:mm a' }}\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Fish Slip Issued?:\r\n                  </b>\r\n                  <span *ngIf=\"offloadForm.get('fishSlipIssued')?.errors?.required\"\r\n                        class=\"invalid-field\">\r\n                    [Required]\r\n                  </span>\r\n                  <span *ngIf=\"!offloadForm.get('fishSlipIssued')?.errors?.required\">\r\n                    {{offloadForm.get('fishSlipIssued')?.value}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\" *ngIf=\"fishSlipVal()==='Yes'\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>\r\n                    Slip Number:\r\n                  </b>\r\n                  <span *ngIf=\"offloadForm.get('fishSlipNumber')?.errors?.required\"\r\n                        class=\"invalid-field\">\r\n                    [Required]\r\n                  </span>\r\n                  <span *ngIf=\"!offloadForm.get('fishSlipNumber')?.errors?.required\">\r\n                    {{offloadForm.get('fishSlipNumber')?.value}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n\r\n              <div class=\"row\" *ngIf=\"getCurrentGearType() === 'Seine'\">\r\n                <h6 class=\"blue-label\">\r\n                  <b>Total Weight <small>({{offloadForm.get('weightUnits')?.value}}): </small></b>\r\n                  <span>\r\n                    {{calculateTotalFish('weight')}}\r\n                  </span>\r\n                </h6>\r\n              </div>\r\n      \r\n              <div class=\"row\">\r\n                  <h6 class=\"blue-label\">\r\n                   <b>Total Pieces:</b> \r\n                    <span>\r\n                      {{calculateTotalFish('pieces')}}\r\n                    </span>\r\n                  </h6>\r\n                </div>\r\n\r\n        </div>\r\n    </form>\r\n\r\n\r\n\r\n    <!-- Page navigation buttons -->\r\n    <div class=\"row bottom-buttons\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-4\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-blue\"\r\n                    type=\"button\"\r\n                    (click)=\"toPreviousPage()\">\r\n            <span>\r\n                Back\r\n            </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-4\">\r\n        <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"submit\"\r\n                    (click)=\"toNextPage()\">\r\n            <span *ngIf=\"currPage <= numPages\">\r\n                Next\r\n            </span>\r\n            <span *ngIf=\"currPage > numPages\">\r\n                Send to DFO\r\n            </span>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { PauseReport } from 'src/app/data-models/report-models/pause-report.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\n\r\n@Component({\r\n  selector: 'app-pause-report',\r\n  templateUrl: './pause-report.component.html',\r\n  styleUrls: ['./pause-report.component.css']\r\n})\r\nexport class PauseReportComponent {\r\n\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  pauseReport: PauseReport = new PauseReport();\r\n\r\n  // report data\r\n  pauseForm: UntypedFormGroup = new UntypedFormGroup({\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 1\r\n    comments: new FormControl<string>('') // page 2\r\n  });\r\n  pauseDate: Date = new Date(); // page 1\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.ONLINE) {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n              return;\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    } else { // user is offline\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  initialize(): void {\r\n\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n\r\n    this.numPages = 2;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n\r\n  }\r\n\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n      this.incrementPage();\r\n    }\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    if (this.currPage === 1) {\r\n      this.toHome();\r\n      return;\r\n    }\r\n\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.pauseForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  saveReportData() { \r\n\r\n    // save relevant information gathered in the form\r\n    this.pauseReport.pauseDate = this.pauseDate;\r\n    this.pauseReport.managementArea = this.pauseForm.get('managementArea')?.value;\r\n    this.pauseReport.comments = this.pauseForm.get('comments')?.value;\r\n    this.pauseReport.submissionDate = new Date(); // get current date/time\r\n\r\n    // push the report to currTrip\r\n    this.currTrip.pauseFishingReports.push(this.pauseReport);\r\n    \r\n    // save currTrip to local storage\r\n     this.userDetails.currTrip = this.currTrip;\r\n     this.localStorageService.saveData(this.userDetails.userID, this.userDetails); \r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n    if (this.pauseForm.valid) {\r\n      this.saveReportData();\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Pause Fishing Report' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n  }\r\n\r\n  // go back to the active trip home screen\r\n  toHome(): void {\r\n    this.router.navigate(['active-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          End Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"pauseForm\">\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When did you not fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\"\r\n                    style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"pauseDate\"></mat-calendar>\r\n          </mat-card>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where did you last fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"pauseForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Pause Date:\r\n          </b>\r\n          {{ pauseDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{pauseForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{pauseForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Buttons to navigate between pages -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { FormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\nimport { Trip } from '../../data-models/trip-models/trip.model';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Gear } from '../../data-models/trip-models/gear-models/gear.model';\r\nimport { VesselData } from '../../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../../data-models/trip-models/license-area.model';\r\nimport { AddVesselDialogComponent } from '../../dialogs/add-vessel-dialog/add-vessel-dialog.component';\r\nimport { Tel, TelInputComponent } from '../../tel-input/tel-input.component';\r\nimport { generalValidator } from '../../data-models/validator.model';\r\nimport { DailyCatchReport } from 'src/app/data-models/report-models/daily-catch-report.model';\r\n\r\n@Component({\r\n  selector: 'app-start-report',\r\n  templateUrl: './start-report.component.html',\r\n  styleUrls: ['./start-report.component.css']\r\n})\r\nexport class StartReportComponent {\r\n\r\n  @ViewChild('telInput') telInput!: TelInputComponent;\r\n\r\n  // data preambles\r\n  currTrip: Trip = new Trip();\r\n  userDetails: UserData = new UserData('', '');\r\n  gears: Gear[] = [];\r\n  userVessels: VesselData[] = [];\r\n  licenseAreas: LicenseArea[] = [];\r\n  emptyGear: Gear = new Gear('', '');\r\n  emptyVessel: VesselData = new VesselData('', '');\r\n  emptyArea: LicenseArea = new LicenseArea('', '');\r\n  prevTrips: Trip[] = [];\r\n  \r\n  // report data\r\n  startForm: UntypedFormGroup = new UntypedFormGroup({\r\n    gear: new FormControl<Gear>(this.emptyGear, [Validators.required]), // page 1\r\n    vessel: new FormControl<VesselData>(this.emptyVessel, [Validators.required]), // page 2\r\n    licenseArea: new FormControl<LicenseArea>(this.emptyArea, [Validators.required]), // page 3\r\n    master: new FormControl<string>('', [Validators.required]), // page 4\r\n    fin: new FormControl<string>('', [Validators.required]), // page 4\r\n    managementArea: new FormControl<string>('', [Validators.required]), // page 5\r\n    name: new FormControl<string>('', [Validators.required]), // page 6\r\n    phoneNum: new FormControl<Tel>(new Tel('', '', ''), [Validators.required, generalValidator()]), // page 6\r\n    comments: new FormControl<string>('') // page 7\r\n  });\r\n  startDate: Date = new Date(); // page 5\r\n  startTime: { hour: number, minute: number } = { hour: 0, minute: 0 }; // page 5\r\n\r\n  // page to page\r\n  numPages: number = 0;\r\n  currPage: number = 0;\r\n  spinnerProgress: number = 0;\r\n  spinnerIncrement: number = 0;\r\n\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private toastr: ToastrService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n      this.initialize();\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n\r\n              // fill trip, net, license area, net and species lists\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n              this.initialize();\r\n\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // initialize the data\r\n  initialize(): void {\r\n\r\n    this.currTrip = this.localStorageService.validateCurrTrip(this.userDetails.currTrip);\r\n\r\n    // get all gears, vessels, license areas\r\n    this.gears = this.localStorageService.getGears();\r\n    this.userVessels = this.userDetails.vessels;\r\n    this.licenseAreas = this.localStorageService.getLicenseAreas();\r\n\r\n    // initialize form upon first entry, or populate with completed fishing report\r\n    let currGear: Gear = this.emptyGear;\r\n    let currVessel: VesselData = this.emptyVessel;\r\n    let currArea: LicenseArea = this.emptyArea;\r\n    let currMaster: string = this.currTrip.master;\r\n    let currFin: string = this.currTrip.fin;\r\n    let currManagementArea: string = this.currTrip.startFishingReport.managementArea;\r\n    let currName: string = this.currTrip.contactName;\r\n    let currPhoneNum: Tel = this.currTrip.phoneNum;\r\n    let currComments: string = this.currTrip.startFishingReport.comments;\r\n\r\n    // set the start time to the current time\r\n    this.startTime = {\r\n      hour: this.startDate.getHours(),\r\n      minute: this.startDate.getMinutes()\r\n    };\r\n\r\n    // fishing report already has gear, vessel and area data\r\n    if (this.currTrip.startFishingReport.isInProgress || this.currTrip.startFishingReport.isComplete) {\r\n\r\n      currGear = this.setSelectedGear(new Gear('', ''));\r\n      currVessel = this.setSelectedVessel(new VesselData('', ''));\r\n      currArea = this.setSelectedArea(new LicenseArea('', ''));\r\n\r\n    }\r\n\r\n    // fishing report does not yet have gear, vessel or area data\r\n    else {\r\n\r\n      this.currTrip.startFishingReport.isInProgress = true;\r\n      currGear = this.gears[0];\r\n      currVessel = this.userVessels[0];\r\n      currArea = this.licenseAreas[0];\r\n    }\r\n\r\n    // clear old data from the previous trip once the form fields are filled\r\n    this.clearTripData();\r\n\r\n    // populate report\r\n    this.startForm.patchValue({\r\n      gear: currGear,\r\n      vessel: currVessel,\r\n      licenseArea: currArea,\r\n      master: currMaster,\r\n      fin: currFin,\r\n      managementArea: currManagementArea,\r\n      name: currName,\r\n      phoneNum: currPhoneNum,\r\n      comments: currComments\r\n    });\r\n\r\n    // clear old data from the previous trip and save current trip\r\n    this.clearTripData();\r\n    this.saveCurrTrip();\r\n\r\n    this.numPages = 7;\r\n    this.spinnerIncrement = 100 / this.numPages;\r\n    this.toNextPage();\r\n\r\n  }\r\n\r\n  // set the radio buttons to the currently selected gear in the fishing report\r\n  setSelectedGear(currGear: Gear): Gear {\r\n    currGear = this.currTrip.gear;\r\n    for (let gear of this.gears) {\r\n      gear.isChecked = (gear.logbookID === currGear.logbookID);\r\n    }\r\n    return currGear;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected vessel in the fishing report\r\n  setSelectedVessel(currVessel: VesselData): VesselData {\r\n    currVessel = this.currTrip.vessel;\r\n    for (let vessel of this.userVessels) {\r\n      vessel.isChecked = (vessel.vesselCoastNumber === currVessel.vesselCoastNumber);\r\n    }\r\n    return currVessel;\r\n  }\r\n\r\n  // set the radio buttons to the currently selected license area in the fishing report\r\n  setSelectedArea(currArea: LicenseArea): LicenseArea {\r\n    currArea = this.currTrip.licenseArea;\r\n    for (let licenseArea of this.licenseAreas) {\r\n      licenseArea.isChecked = (licenseArea.licenseName === currArea.licenseName);\r\n    }\r\n    return currArea;\r\n  }\r\n\r\n  // check current page before going to the next one\r\n  toNextPage(): void {\r\n\r\n    if (this.currPage <= this.numPages) {\r\n\r\n      switch (this.currPage) {\r\n\r\n        // to vessel page\r\n        case 1:\r\n          let currVessel: VesselData = new VesselData('', '');\r\n          currVessel = this.setSelectedVessel(currVessel);\r\n          this.startForm.patchValue({\r\n            vessel: currVessel\r\n          });\r\n          break;\r\n\r\n        // to license area page\r\n        case 2:\r\n          let currArea: LicenseArea = new LicenseArea('', '');\r\n          currArea = this.setSelectedArea(currArea);\r\n          this.startForm.patchValue({\r\n            licenseArea: currArea\r\n          });\r\n          break;\r\n\r\n        // save date in date page\r\n        case 5:\r\n          this.setDateTime();\r\n          break;\r\n\r\n        // save phone number in contact details page\r\n        case 6:\r\n          this.telInput.touched = true;\r\n          this.telInput.stateChanges.next();\r\n          this.startForm.get('phoneNum')?.updateValueAndValidity();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n\r\n      }\r\n\r\n      this.saveCurrTrip();\r\n      this.incrementPage();\r\n    }\r\n\r\n    else {\r\n      this.sendToDFO();\r\n    }\r\n\r\n  }\r\n\r\n  // forward one page\r\n  incrementPage(): void {\r\n    this.currPage++;\r\n    this.spinnerProgress += this.spinnerIncrement;\r\n  }\r\n\r\n  // back one page\r\n  toPreviousPage(): void {\r\n\r\n    switch (this.currPage) {\r\n\r\n      // back to home if at beginning of report\r\n      case 1:\r\n        this.saveCurrTrip();\r\n        this.toHome();\r\n        return;\r\n\r\n      // to gear page\r\n      case 2:\r\n        let currGear: Gear = new Gear('', '');\r\n        currGear = this.setSelectedGear(currGear);\r\n        this.startForm.patchValue({\r\n          gear: currGear\r\n        });\r\n        break;\r\n\r\n      // to vessel page\r\n      case 3:\r\n        let currVessel: VesselData = new VesselData('', '');\r\n        currVessel = this.setSelectedVessel(currVessel);\r\n        this.startForm.patchValue({\r\n          vessel: currVessel\r\n        });\r\n        break;\r\n\r\n      // to license area page\r\n      case 4:\r\n        let currArea: LicenseArea = new LicenseArea('', '');\r\n        currArea = this.setSelectedArea(currArea);\r\n        this.startForm.patchValue({\r\n          licenseArea: currArea\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n\r\n    }\r\n\r\n    this.saveCurrTrip();\r\n    this.currPage--;\r\n    this.spinnerProgress -= this.spinnerIncrement;\r\n\r\n  }\r\n\r\n  // save the current trip & Start Fishing Report information\r\n  saveCurrTrip(): void {\r\n    this.currTrip.gear = this.startForm.get('gear')?.value;\r\n    this.currTrip.vessel = this.startForm.get('vessel')?.value;\r\n    this.currTrip.licenseArea = this.startForm.get('licenseArea')?.value;\r\n    this.currTrip.master = this.startForm.get('master')?.value;\r\n    this.currTrip.fin = this.startForm.get('fin')?.value;\r\n    this.currTrip.startFishingReport.startDate = this.startDate;\r\n    this.currTrip.startFishingReport.managementArea = this.startForm.get('managementArea')?.value;\r\n    this.currTrip.contactName = this.startForm.get('name')?.value;\r\n    this.currTrip.phoneNum = this.startForm.get('phoneNum')?.value;\r\n    this.currTrip.startFishingReport.comments = this.startForm.get('comments')?.value;\r\n    this.currTrip.startFishingReport.submissionDate = new Date(); // get the current date\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  clearTripData(): void { \r\n\r\n    this.currTrip = new Trip(); //create a new trip\r\n\r\n    // save changes to local storage\r\n    this.userDetails.currTrip = this.currTrip;\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // sets flag in trip data if this trip may need an offload report\r\n  determineOffloadReport(): void {\r\n    // we only need an offload report if the trip is Seine in Area B, or Gill Net in Area C, D, or, E\r\n    let licenseName: string = this.currTrip.licenseArea.licenseName;\r\n    let gearName: string = this.currTrip.gear.name;\r\n    let isSeineOffload: boolean = gearName === 'Seine' && licenseName === 'B';\r\n    let isGillOffload: boolean = gearName === 'Gill Net' && (licenseName === 'C' || licenseName === 'D' || licenseName === 'E');\r\n    this.currTrip.offloadNeeded = isSeineOffload || isGillOffload;\r\n    this.userDetails.currTrip = this.currTrip; // save flag changes\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n    return;\r\n  }\r\n  \r\n\r\n  // update the start date hour and minute, only needed on 'Next'\r\n  setDateTime(): void {\r\n\r\n    let startHours: number = this.startTime.hour;\r\n    let startMinutes: number = this.startTime.minute;\r\n\r\n    this.startDate.setHours(startHours ? startHours : this.startDate.getHours());\r\n    this.startDate.setMinutes(startMinutes ? startMinutes : this.startDate.getMinutes());\r\n    this.startDate.setSeconds(0);\r\n    this.startDate.setMilliseconds(0);\r\n\r\n  }\r\n\r\n  // add vessels\r\n  addVesselDialog(): void {\r\n\r\n    const dialogRef = this.dialog.open(AddVesselDialogComponent, {\r\n      width: '500px',\r\n      height: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n\r\n        // update selected vessel as new vessel added then go to next screen\r\n        if (result !== 'delete') {\r\n          for (let vessel of this.userVessels) {\r\n            vessel.isChecked = false;\r\n          }\r\n          let newVessel: VesselData = new VesselData(result.vesselName, result.vesselNumber, true);\r\n          this.startForm.patchValue({\r\n            vessel: newVessel\r\n          });\r\n          this.userDetails.vessels.push(newVessel);\r\n          this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n          this.toNextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // check if gear value is invalid\r\n  gearInvalid(): boolean {\r\n    let gear: Gear = this.startForm.get('gear')?.value;\r\n    return !gear.isValid();\r\n  }\r\n\r\n  // check if master values are invalid\r\n  masterInvalid(): boolean {\r\n    return this.startForm.get('master')?.errors?.required || this.startForm.get('fin')?.errors?.required;\r\n  }\r\n\r\n  // check if management area is invalid\r\n  vesselInvalid(): boolean {\r\n    let vessel: VesselData = this.startForm.get('vessel')?.value;\r\n    return !vessel.isValid();\r\n  }\r\n\r\n  // check if license area is invalid\r\n  licenseAreaInvalid(): boolean {\r\n    let licenseArea: LicenseArea = this.startForm.get('vessel')?.value;\r\n    return !licenseArea.isValid();\r\n  }\r\n\r\n  // check if management area is invalid\r\n  managementAreaInvalid(): boolean {\r\n    return this.startForm.get('managementArea')?.errors?.required;\r\n  }\r\n\r\n  // check if contact details are invalid\r\n  contactDetailsInvalid(): boolean {\r\n    return this.startForm.get('name')?.errors?.required || this.startForm.get('phoneNum')?.errors?.required;\r\n  }\r\n\r\n  // send start fishing report to DFO\r\n  sendToDFO(): void {\r\n\r\n    if (this.startForm.valid && !this.gearInvalid() && !this.vesselInvalid() && !this.licenseAreaInvalid()) {\r\n      this.currTrip.startFishingReport.isInProgress = false; \r\n      this.currTrip.startFishingReport.isComplete = true;\r\n      this.saveCurrTrip();\r\n      this.determineOffloadReport(); // check if we will need an offload report for this trip\r\n      this.updateHomepage(); // update the user's active homepage\r\n      this.router.navigate(['submitted-report'], { state: { name: 'Trip' } });\r\n      return;\r\n    }\r\n    this.toastr.error(\"Not all required fields filled\", \"Invalid form\");\r\n\r\n  }\r\n\r\n  updateHomepage(): void {\r\n    this.userDetails.currHomepage = 'active-trip-home';\r\n    this.localStorageService.saveData(this.userDetails.userID, this.userDetails);\r\n  }\r\n\r\n  // go back to the home screen with no active trip\r\n  toHome(): void {\r\n    this.router.navigate(['no-trip-home']);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"container\"\r\n       style=\"padding-top: 20px;\">\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <h6 *ngIf=\"currPage <= numPages\">\r\n        <small class=\"text-muted\">\r\n          Question {{currPage}} of {{numPages}}\r\n        </small>\r\n      </h6>\r\n      <h6 *ngIf=\"currPage > numPages\">\r\n        <small class=\"text-muted\">\r\n          Start Fishing Report\r\n        </small>\r\n      </h6>\r\n    </div>\r\n\r\n    <div class=\"row\"\r\n         align=\"center\">\r\n      <div class=\"col-5\"></div>\r\n      <div class=\"col-2\">\r\n        <mat-spinner *ngIf=\"currPage <= numPages\"\r\n                     mode=\"determinate\"\r\n                     [diameter]=\"50\"\r\n                     [strokeWidth]=\"6\"\r\n                     [value]=\"spinnerProgress\">\r\n        </mat-spinner>\r\n\r\n        <mat-icon *ngIf=\"currPage > numPages\"\r\n                  style=\"color: #3ebfb9\">\r\n          check_circle_outline\r\n        </mat-icon>\r\n      </div>\r\n      <div class=\"col-5\"></div>\r\n    </div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"startForm\">\r\n\r\n    <!-- Choose gear -->\r\n    <div *ngIf=\"currPage === 1\"\r\n         class=\"container details\">\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What type of gear are you using?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h5 class=\"blue-heading-subtitle\">\r\n          My available logbooks:\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"gear\">\r\n            <mat-radio-button *ngFor=\"let gear of gears\"\r\n                              [value]=\"gear\"\r\n                              [checked]=\"gear.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{gear}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose or add vessel -->\r\n    <div *ngIf=\"currPage === 2\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Choose or add your vessel\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"vessel\">\r\n            <mat-radio-button *ngFor=\"let vessel of userVessels\"\r\n                              [value]=\"vessel\"\r\n                              [checked]=\"vessel.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{vessel}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n\r\n      <div class=\"row add-item\"\r\n           align=\"center\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <div class=\"row\">\r\n            <button mat-raised-button\r\n                    class=\"fishing-button-red\"\r\n                    type=\"button\"\r\n                    (click)=\"addVesselDialog()\">\r\n              Add New Vessel\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose license area -->\r\n    <div *ngIf=\"currPage === 3\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          What is your License Area?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-1\"></div>\r\n        <div class=\"col-10\">\r\n          <mat-radio-group class=\"radio\"\r\n                           formControlName=\"licenseArea\">\r\n            <mat-radio-button *ngFor=\"let area of licenseAreas\"\r\n                              [value]=\"area\"\r\n                              [checked]=\"area.isChecked\">\r\n              <h6>\r\n                <small class=\"text-muted font-list\">\r\n                  {{area}}\r\n                </small>\r\n              </h6>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 4\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Who is the vessel master?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"master\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          FIN (Fisher Identification Number)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Fisher Identification Number\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"fin\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Choose date and enter area to start fishing -->\r\n    <div *ngIf=\"currPage === 5\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          When will you start fishing?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <div class=\"col-2\"></div>\r\n        <div class=\"col-8\">\r\n          <mat-card class=\"demo-inline-calendar-card\" style=\"margin-top: 10%\">\r\n            <mat-calendar [(selected)]=\"startDate\"></mat-calendar>\r\n          </mat-card>\r\n          <ngb-timepicker class=\"time-picker\"\r\n                          [meridian]=\"true\"\r\n                          [ngModelOptions]=\"{ standalone: true }\"\r\n                          [(ngModel)]=\"startTime\">\r\n\r\n          </ngb-timepicker>\r\n        </div>\r\n        <div class=\"col-2\"></div>\r\n      </div>\r\n\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Where will you fish?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Management Area(s) <br>\r\n          (Do not include sub-area)\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <input matInput\r\n                 placeholder=\"e.g. Area1, Area2\"\r\n                 formControlName=\"managementArea\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <!-- Vessel master name and FIN -->\r\n    <div *ngIf=\"currPage === 6\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Please provide onboard contact details.\r\n        </h5>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Contact Name\r\n        </h6>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>\r\n            Name\r\n          </mat-label>\r\n          <input matInput\r\n                 formControlName=\"name\">\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Phone Number\r\n        </h6>\r\n        <mat-form-field #telField\r\n                        appearance=\"outline\">\r\n          <mat-label>\r\n            Phone Number\r\n          </mat-label>\r\n          <app-tel-input #telInput\r\n                         formControlName=\"phoneNum\">\r\n\r\n          </app-tel-input>\r\n          <mat-icon matSuffix>\r\n            phone\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"startForm.invalid\">\r\n            Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Add optional comment -->\r\n    <div *ngIf=\"currPage === 7\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Would you like to add a comment?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          Comments (optional)\r\n        </h6>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>\r\n            Comments...\r\n          </mat-label>\r\n          <textarea matInput\r\n                    rows=\"9\"\r\n                    formControlName=\"comments\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <!-- Summary page -->\r\n    <div *ngIf=\"currPage === 8\"\r\n         class=\"container details\">\r\n      <div class=\"row\"\r\n           align=\"center\">\r\n        <h5 class=\"blue-heading-title\">\r\n          Is all information complete and ready to be submitted to DFO?\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Gear Type:\r\n          </b>\r\n          <span *ngIf=\"gearInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!gearInvalid()\">\r\n            {{startForm.get('gear')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel Master:\r\n          </b>\r\n          <span *ngIf=\"masterInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!masterInvalid()\">\r\n            {{startForm.get('master')?.value}} (FIN: {{startForm.get('fin')?.value}})\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Vessel:\r\n          </b>\r\n          <span *ngIf=\"vesselInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!vesselInvalid()\">\r\n            {{startForm.get('vessel')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            License Area:\r\n          </b>\r\n          <span *ngIf=\"licenseAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!licenseAreaInvalid()\">\r\n            {{startForm.get('licenseArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Date:\r\n          </b>\r\n          {{ startDate | date }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Start Time:\r\n          </b>\r\n          {{ startDate | date:'h:mm a' }}\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Management Area:\r\n          </b>\r\n          <span *ngIf=\"managementAreaInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!managementAreaInvalid()\">\r\n            {{startForm.get('managementArea')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Contact Details:\r\n          </b>\r\n          <span *ngIf=\"contactDetailsInvalid()\"\r\n                class=\"invalid-field\">\r\n            [Required]\r\n          </span>\r\n          <span *ngIf=\"!contactDetailsInvalid()\">\r\n            {{startForm.get('name')?.value}}, {{startForm.get('phoneNum')?.value}}\r\n          </span>\r\n        </h6>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <h6 class=\"blue-label\">\r\n          <b>\r\n            Comments:\r\n          </b>\r\n          {{startForm.get('comments')?.value}}\r\n        </h6>\r\n      </div>\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n  <!-- Page navigation buttons -->\r\n  <div class=\"row bottom-buttons\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-blue\"\r\n                type=\"button\"\r\n                (click)=\"toPreviousPage()\">\r\n          <span>\r\n            Back\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-2\"></div>\r\n    <div class=\"col-4\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toNextPage()\">\r\n          <span *ngIf=\"currPage <= numPages\">\r\n            Next\r\n          </span>\r\n          <span *ngIf=\"currPage > numPages\">\r\n            Send to DFO\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-1\"></div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../../data-models/user-models/user-data.model';\r\nimport { Trip } from 'src/app/data-models/trip-models/trip.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { LocalStorageService } from '../../services/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-submitted-report',\r\n  templateUrl: './submitted-report.component.html',\r\n  styleUrls: ['./submitted-report.component.css']\r\n})\r\nexport class SubmittedReportComponent {\r\n\r\n  //data preambles\r\n  reportName: string = \"\";\r\n  userDetails: UserData = new UserData('', '');\r\n  currTrip: Trip = new Trip();\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    this.reportName = this.router.getCurrentNavigation()?.extras.state?.name;\r\n\r\n     // get current fishing report information\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      let currID: string = this.localStorageService.getCurrID();\r\n      this.userDetails = this.localStorageService.getUserByID(currID);\r\n    }\r\n\r\n    else {\r\n      this.auth.isAuthenticated$.subscribe((authd: boolean) => {\r\n        if (authd) {\r\n          this.auth.user$.subscribe((user: User | null | undefined) => {\r\n            if (user) {\r\n              this.userDetails = this.localStorageService.getUser(user);\r\n            }\r\n            else {\r\n              this.toastr.error(\"Please authenticate again\", \"Cannot get user data\");\r\n              this.localStorageService.logout();\r\n              return;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.toastr.error(\"Please authenticate again\", \"Not authenticated\");\r\n          this.localStorageService.logout();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // go back to the home screen\r\n  toHome(): void {\r\n    this.router.navigate([this.userDetails.currHomepage]);\r\n  }\r\n\r\n}\r\n","<div class=\"container report-container\">\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <h5 class=\"blue-heading-title\">\r\n      Report Submitted!\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\"\r\n       align=\"center\">\r\n    <p>\r\n      Please refer to the\r\n      <b>\r\n        Records\r\n      </b>\r\n      page to ensure the report has been received and to view your\r\n      <i>\r\n        {{reportName}} Confirmation Number.\r\n      </i>\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"row bottom-buttons\">\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n    <div class=\"col-2\">\r\n      <div class=\"row\">\r\n        <button mat-raised-button\r\n                class=\"fishing-button-red\"\r\n                type=\"submit\"\r\n                (click)=\"toHome()\">\r\n          <span>\r\n            OK\r\n          </span>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-5\"></div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { AuthService } from '@auth0/auth0-angular';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '@auth0/auth0-angular';\r\nimport { UserData } from '../data-models/user-models/user-data.model';\r\nimport { VesselData } from '../data-models/user-models/vessel-data.model';\r\nimport { LicenseArea } from '../data-models/trip-models/license-area.model';\r\nimport { SpeciesData } from '../data-models/catch-table-models/species-data.model';\r\nimport { Gear } from '../data-models/trip-models/gear-models/gear.model';\r\nimport { Trip } from '../data-models/trip-models/trip.model';\r\nimport { Tel } from '../tel-input/tel-input.component';\r\nimport { Net } from '../data-models/trip-models/gear-models/net.model';\r\nimport { TableRules } from '../data-models/catch-table-models/table-rules.model';\r\nimport { StartReport } from '../data-models/report-models/start-report.model';\r\nimport { OnlineStatusService, OnlineStatusType } from 'ngx-online-status';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private onlineStatusService: OnlineStatusService,\r\n    @Inject(DOCUMENT) public document: Document\r\n  ) {\r\n\r\n    // initialize default lists\r\n    this.setLists();\r\n\r\n  }\r\n\r\n  // save data to local storage through [key, value] pair\r\n  public saveData(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  // get data from key\r\n  public getData(key: string): any {\r\n    let item: string | null = localStorage.getItem(key);\r\n    if (item) {\r\n      return JSON.parse(item);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // remove data given key\r\n  public removeData(key: string): void {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  // new user after sign up\r\n  public createNewUser(user: User | null | undefined): UserData {\r\n\r\n    let id: string | undefined = user?.sub;\r\n    let email: string | undefined = user?.email;\r\n\r\n    if (!id || !email) {\r\n      return new UserData('', '');\r\n    }\r\n\r\n    let newUser: UserData = new UserData(id, email);\r\n    newUser.vessels = this.setVessels();\r\n    newUser.currTrip = this.setCurrTrip();\r\n    newUser.nets = this.setNets();\r\n    newUser.currHomepage = this.setHomepage();\r\n\r\n    this.saveData(id, newUser);\r\n    let userIDs: string[] = this.getAllUserIDs();\r\n    userIDs.push(id);\r\n    this.saveData('userIDs', userIDs);\r\n\r\n    return newUser;\r\n\r\n  }\r\n\r\n  // get the current user ID for offline data retrieval\r\n  public getCurrID(): string {\r\n    return this.getData('currID');\r\n  }\r\n\r\n  // get all the user ids in local storage\r\n  public getAllUserIDs(): string[] {\r\n    return this.getStringList('userIDs');\r\n  }\r\n\r\n  // check if homepage is defined\r\n  private validateHomepage(homepage: string | null): string {\r\n    if (!homepage) {\r\n      return this.setHomepage();\r\n    }\r\n    return homepage;\r\n  }\r\n\r\n  // check if user vessels are defined\r\n  private validateVessels(vessels: any): VesselData[] {\r\n\r\n    // if vessels do not exist, set the default ones\r\n    if (!vessels) {\r\n      return this.setVessels();\r\n    }\r\n\r\n    let userVessels: VesselData[] = [];\r\n    for (let vessel of vessels) {\r\n      userVessels.push(new VesselData(vessel.vesselName, vessel.vesselCoastNumber, vessel.isChecked));\r\n    }\r\n    return userVessels;\r\n  }\r\n\r\n  private validateStartFishingReport(startReport: any): StartReport {\r\n    if(!startReport){\r\n      return this.setStartReport();\r\n    }\r\n    return startReport;\r\n  }\r\n\r\n  public validatePrevTrips(prevTrips: any): Trip[] {\r\n\r\n    if(!prevTrips){\r\n      return this.setPrevTrips();\r\n    }\r\n\r\n    let prevTripList: Trip[] = [];\r\n    for (let trip of prevTrips) {\r\n      let userPrevTrip: Trip = new Trip();\r\n      userPrevTrip.tripID = trip.tripID;\r\n      userPrevTrip.gear = trip.gear;\r\n      userPrevTrip.vessel = trip.vessel;\r\n      userPrevTrip.licenseArea = trip.licenseArea;\r\n      userPrevTrip.master = trip.master;\r\n      userPrevTrip.fin = trip.fin;\r\n      userPrevTrip.contactName = trip.contactName;\r\n      userPrevTrip.phoneNum = trip.phoneNum;\r\n      userPrevTrip.offloadNeeded = trip.offloadNeeded;\r\n      userPrevTrip.isSaved = trip.isSaved;\r\n      userPrevTrip.startFishingReport = trip.startFishingReport;\r\n      userPrevTrip.endFishingReport = trip.endFishingReport;\r\n      userPrevTrip.cancelFishingReport = trip.cancelFishingReport;\r\n      userPrevTrip.pauseFishingReports = trip.pauseFishingReports;\r\n      userPrevTrip.dailyCatchReports = trip.dailyCatchReports;\r\n      userPrevTrip.offloadReports = trip.offloadReports;\r\n      prevTripList.push(userPrevTrip);\r\n    }\r\n\r\n    return prevTrips;\r\n  }\r\n\r\n  // check if user fishing report is defined\r\n  public validateCurrTrip(currTrip: any): Trip {\r\n\r\n    if (!currTrip) {\r\n      return this.setCurrTrip();\r\n    }\r\n\r\n    let usercurrTrip: Trip = new Trip(); \r\n\r\n    usercurrTrip.tripID = currTrip.tripID;\r\n    usercurrTrip.master = currTrip.master;\r\n    usercurrTrip.fin = currTrip.fin;\r\n    usercurrTrip.contactName = currTrip.contactName;\r\n    usercurrTrip.phoneNum = this.getPhoneNum(currTrip.phoneNum);\r\n    let userGear: any = currTrip.gear;\r\n    let userVessel: any = currTrip.vessel;\r\n    let userLicenseArea: any = currTrip.licenseArea;\r\n    usercurrTrip.gear = new Gear(userGear.name, userGear.logbookID, userGear.isChecked);\r\n    usercurrTrip.vessel = new VesselData(userVessel.vesselName, userVessel.vesselCoastNumber, userVessel.isChecked);\r\n    usercurrTrip.licenseArea = new LicenseArea(userLicenseArea.licenseName, userLicenseArea.licenseLocation, userLicenseArea.isChecked);\r\n    usercurrTrip.offloadNeeded = currTrip.offloadNeeded; \r\n    usercurrTrip.isSaved = currTrip.isSaved;\r\n    usercurrTrip.startFishingReport = currTrip.startFishingReport;\r\n    usercurrTrip.endFishingReport = currTrip.endFishingReport;\r\n    usercurrTrip.pauseFishingReports = currTrip.pauseFishingReports;\r\n    usercurrTrip.cancelFishingReport = currTrip.cancelFishingReport;\r\n    usercurrTrip.dailyCatchReports = currTrip.dailyCatchReports;\r\n    usercurrTrip.offloadReports = currTrip.offloadReports;\r\n    return usercurrTrip;\r\n\r\n  }\r\n\r\n  // check if user nets are defined\r\n  private validateNets(nets: any): Net[] {\r\n\r\n    // if nets do not exist, set the default ones\r\n    if (!nets) {\r\n      return this.setNets();\r\n    }\r\n\r\n    let userNets: Net[] = [];\r\n    for (let net of nets) {\r\n      userNets.push(new Net(net.netType, net.netName, net.numStrands, net.length, net.weedlineDepth,\r\n        net.weedlineDepthUnits, net.hangRatio, net.meshSize, net.meshSizeUnits,\r\n        net.numMeshes, net.isChecked));\r\n    }\r\n    return userNets;\r\n  }\r\n\r\n\r\n  // get current user data in local storage\r\n  public getUserByID(id: string): UserData {\r\n\r\n    let user: UserData = new UserData('', '');\r\n    let userString: any = this.getData(id);\r\n\r\n    if (userString) {\r\n      user.userID = userString.userID;\r\n      user.userEmail = userString.userEmail;\r\n      user.vessels = this.validateVessels(userString.vessels);\r\n      user.currTrip = this.validateCurrTrip(userString.currTrip);\r\n      user.currTrip.startFishingReport = this.validateStartFishingReport(userString.currTrip.startFishingReport);\r\n      user.prevTrips = this.validatePrevTrips(userString.prevTrips);\r\n      user.nets = this.validateNets(userString.nets);\r\n      user.currHomepage = this.validateHomepage(userString.currHomepage);\r\n      this.saveData(user.userID, user);\r\n    }\r\n    else {\r\n      this.toastr.error(\"Cannot get user data\", \"Data error\");\r\n    }\r\n    \r\n    return user;\r\n\r\n  }\r\n\r\n  // get current user in local storage if online (will use database to sync storage once implemented)\r\n  public getUser(user: User): UserData {\r\n\r\n    let thisUser: UserData = new UserData('', '');\r\n    let id: string | undefined = user.sub;\r\n\r\n    // if ID does not exist, return an empty user\r\n    if (!id) {\r\n      return thisUser;\r\n    }\r\n\r\n    let userString: any = this.getData(id);\r\n\r\n    if (userString) {\r\n      thisUser.userID = userString.userID;\r\n      thisUser.userEmail = userString.userEmail;\r\n      thisUser.vessels = this.validateVessels(userString.vessels);\r\n      thisUser.currTrip = this.validateCurrTrip(userString.currTrip);\r\n      thisUser.currTrip.startFishingReport = this.validateStartFishingReport(userString.currTrip.startFishingReport);\r\n      thisUser.prevTrips = this.validatePrevTrips(userString.prevTrips);\r\n      thisUser.nets = this.validateNets(userString.nets);\r\n      thisUser.currHomepage = this.validateHomepage(userString.currHomepage);\r\n      this.saveData(id, thisUser);\r\n    }\r\n    else {\r\n      this.toastr.error(\"Try logging in again\", \"Data error\");\r\n    }\r\n\r\n    return thisUser;\r\n\r\n  }\r\n\r\n\r\n  // get license areas stored in local storage\r\n  public getLicenseAreas(): LicenseArea[] {\r\n\r\n    let licenseAreas: any = this.getData('licenseAreaList');\r\n\r\n    // if license areas do not exist, set them again\r\n    if (!licenseAreas) {\r\n      this.setLicenseAreas();\r\n      licenseAreas = this.getData('licenseAreaList');\r\n    }\r\n\r\n    let licenseAreaArray: LicenseArea[] = [];\r\n    for (let licenseArea of licenseAreas) {\r\n      licenseAreaArray.push(new LicenseArea(licenseArea.licenseName, licenseArea.licenseLocation, licenseArea.isChecked));\r\n    }\r\n\r\n    return licenseAreaArray;\r\n\r\n  }\r\n\r\n  // get species stored in local storage\r\n  public getSpeciesList(name: string): SpeciesData[] {\r\n\r\n    let speciesList: any = this.getData(name);\r\n\r\n    // if species list does not exist, set it again\r\n    if (!speciesList) {\r\n      this.setSpeciesList();\r\n      speciesList = this.getData(name);\r\n    }\r\n\r\n    let speciesArray: SpeciesData[] = [];\r\n    for (let species of speciesList) {\r\n      speciesArray.push(new SpeciesData(species.speciesName));\r\n    }\r\n\r\n    return speciesArray;\r\n\r\n  }\r\n\r\n  // get gears stored in local storage\r\n  public getGears(): Gear[] {\r\n    let gearList: any = this.getData('gearList');\r\n\r\n    // if gear list does not exist, set it again\r\n    if (!gearList) {\r\n      this.setGears();\r\n      gearList = this.getData('gearList');\r\n    }\r\n\r\n    let gearArray: Gear[] = [];\r\n    for (let gear of gearList) {\r\n      gearArray.push(new Gear(gear.name, gear.logbookID, gear.isChecked));\r\n    }\r\n\r\n    return gearArray;\r\n\r\n  }\r\n\r\n  // get table rules for catch table data in local storage\r\n  public getTableRules(gearName: string): TableRules {\r\n\r\n    let newTable: TableRules = new TableRules();\r\n    let tableList: any = this.getData('tableRulesList');\r\n\r\n    // if table list does not exist, set it again\r\n    if (!tableList) {\r\n      this.setTableRules();\r\n      tableList = this.getData('tableRulesList');\r\n    }\r\n\r\n    for(let table of tableList) {\r\n        if(table.gearName === gearName){\r\n          newTable = table;\r\n        }\r\n    }\r\n\r\n    return newTable;\r\n\r\n  }\r\n\r\n\r\n  // get phone number from local storage\r\n  private getPhoneNum(phoneNum: any): Tel {\r\n    return new Tel(phoneNum.area, phoneNum.exchange, phoneNum.subscriber);\r\n  }\r\n\r\n  // get list of strings stored in local storage\r\n  public getStringList(name: string): string[] {\r\n\r\n    let stringList: any = this.getData(name);\r\n\r\n    // if string list does not exist, set it again\r\n    if (!stringList) {\r\n      this.saveData(name, []);\r\n      return this.getData(name);\r\n    }\r\n\r\n    let stringArray: string[] = [];\r\n    for (let currString of stringList) {\r\n      stringArray.push(currString.toString());\r\n    }\r\n\r\n    return stringArray;\r\n\r\n  }\r\n\r\n  // set the default list of vessels\r\n  private setVessels(): VesselData[] {\r\n    let vessels: VesselData[] = [\r\n      new VesselData(\"My Vessel 1\", \"872357\", true),\r\n      new VesselData(\"My Vessel 2\", \"584317\"),\r\n      new VesselData(\"My Vessel 3\", \"872358\"),\r\n      new VesselData(\"My Vessel 4\", \"584318\"),\r\n    ];\r\n    return vessels;\r\n  }\r\n\r\n  private setPrevTrips(): Trip[] {\r\n    let prevTrips: Trip[] = [];\r\n    return prevTrips;\r\n  }\r\n\r\n  // set the no active trip homepage to a new user\r\n  private setHomepage(): string {\r\n    return 'no-trip-home';\r\n  }\r\n\r\n  // set a start fishing report to a new user \r\n  private setStartReport(): StartReport {\r\n    let newStartReport: StartReport = new StartReport();\r\n    return newStartReport;\r\n  }\r\n\r\n  // set the default data for the current trip\r\n  private setCurrTrip(): Trip {\r\n    return new Trip();\r\n  }\r\n\r\n  //set the default list of nets (remove later)\r\n  private setNets(): Net[] {\r\n    let nets: Net[] = [\r\n      new Net(\"Alaska Twist\", \"My Net 1\", \"10\", \"10\", \"cm\", \"2\", \"15\", \"cm\", \"30\", \"50\", true),\r\n      new Net(\"Multi Strand\", \"My Net 2\", \"3\", \"60\", \"in\", \"7\", \"10\", \"in\", \"20\"),\r\n      new Net(\"Combination\", \"My Net 3\", \"8\", \"60\", \"mm\", \"7\", \"8\", \"mm\", \"100\")\r\n    ];\r\n    return nets;\r\n  }\r\n\r\n  // set gears to local storage (remove later)\r\n  private setGears(): void {\r\n\r\n    let gearList: Gear[] = [\r\n      new Gear('Gill Net', '1111', true),\r\n      new Gear('Seine', '2222'),\r\n      new Gear('Troll', '3333')\r\n    ];\r\n    \r\n    this.saveData('gearList', gearList);\r\n  }\r\n\r\n  // set table rules for what species should show up in the catch table for different gear types\r\n  private setTableRules(): void {\r\n\r\n    let gillNetTable = new TableRules('daily-catch', 'Gill Net');\r\n    gillNetTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Chinook', 'Steelhead', 'Atlantic', 'Dogfish', 'Green Sturgeon', 'White Sturgeon'];\r\n    gillNetTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n    gillNetTable.releaseOnlySpecies =['Steelhead', 'White Sturgeon', 'Green Sturgeon'];\r\n\r\n    let seineTable = new TableRules('daily-catch', 'Seine');\r\n    seineTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Steelhead', 'Atlantic', 'Jack Chinook', 'Adult Chinook'];\r\n    seineTable.excludesSpecies = ['Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n\r\n    let trollTable = new TableRules('daily-catch', 'Troll');\r\n    trollTable.containsSpecies = ['Sockeye', 'Coho', 'Pink', 'Chum', 'Atlantic', 'Grilse', 'Legal Sized Chinook', 'Sublegal Sized Chinook'];\r\n    trollTable.excludesSpecies = ['Jack Chinook'];\r\n    trollTable.releaseOnlySpecies = ['Sublegal Sized Chinook', 'Grilse'];\r\n\r\n    let tableRulesList: TableRules[] = [gillNetTable, seineTable, trollTable];\r\n\r\n    this.saveData('tableRulesList', tableRulesList);\r\n\r\n  }\r\n\r\n  // set license areas to local storage\r\n  private setLicenseAreas(): void {\r\n    let licenseAreaList: LicenseArea[] = [\r\n      new LicenseArea(\"A\", \"Seine North\", true),\r\n      new LicenseArea(\"B\", \"Seine South\"),\r\n      new LicenseArea(\"C\", \"Gillnet North\"),\r\n      new LicenseArea(\"D\", \"Gillnet Vancouver Island\"),\r\n      new LicenseArea(\"E\", \"Gillnet Fraser + VI\"),\r\n      new LicenseArea(\"F\", \"Troll North\"),\r\n      new LicenseArea(\"G\", \"Troll WCVI\"),\r\n      new LicenseArea(\"H\", \"Troll Fraser\")\r\n    ];\r\n    this.saveData('licenseAreaList', licenseAreaList);\r\n  }\r\n\r\n  // set fish to local storage\r\n  // Note: we will eventually get this list from the DFO database, then will have to copy the names over into SpeciesData\r\n  private setSpeciesList(): void {\r\n    let fishList: SpeciesData[] = [\r\n      new SpeciesData(\"Sockeye\"),\r\n      new SpeciesData(\"Coho\"),\r\n      new SpeciesData(\"Pink\"),\r\n      new SpeciesData(\"Chum\"),\r\n      new SpeciesData('Chinook'),\r\n      new SpeciesData('Steelhead'),\r\n      new SpeciesData('Atlantic'),\r\n      new SpeciesData('Dogfish'),\r\n      new SpeciesData('Green Sturgeon'),\r\n      new SpeciesData('Grilse'), \r\n      new SpeciesData('Jack Chinook'),\r\n      new SpeciesData('Adult Chinook'),\r\n      new SpeciesData('Legal Sized Chinook'),\r\n      new SpeciesData('Sublegal Sized Chinook'),\r\n      new SpeciesData('White Sturgeon'),\r\n      new SpeciesData('Mackerel'),\r\n      new SpeciesData('Lingcod'),\r\n      new SpeciesData('Halibut'),\r\n      new SpeciesData('Aurora Rockfish'),\r\n      new SpeciesData('Canary Rockfish'),\r\n      new SpeciesData('China Rockfish'),\r\n      new SpeciesData('Tiger Rockfish'),\r\n      new SpeciesData('Redbanded Rockfish'),\r\n      new SpeciesData('Unknown Rockfish')\r\n    ];\r\n    this.saveData('fishList', fishList);\r\n  }\r\n\r\n  // set nets to local storage\r\n  private setNetTypes(): void {\r\n    let netTypes: string[] = [\r\n      'Alaska Twist',\r\n      'Multi Strand',\r\n      'Combination'\r\n    ];\r\n    this.saveData('netTypes', netTypes);\r\n  }\r\n\r\n  // data that all users receive, put into local storage\r\n  private setLists(): void {\r\n    this.setTableRules();\r\n    this.setGears();\r\n    this.setLicenseAreas();\r\n    this.setSpeciesList();\r\n    this.setNetTypes();\r\n  }\r\n\r\n  // log out of account and go back to login screen\r\n  logout(): void {\r\n    this.removeData('currID');\r\n    if (this.onlineStatusService.getStatus() === OnlineStatusType.OFFLINE) {\r\n      this.router.navigate(['login']);\r\n      return;\r\n    }\r\n    this.auth.logout({\r\n      logoutParams: {\r\n        returnTo: this.document.location.origin\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Component, ElementRef, Inject, Input, OnDestroy, Optional, Self, ViewChild } from '@angular/core';\r\nimport { FormBuilder, NgControl, AbstractControl, ControlValueAccessor, Validators } from '@angular/forms';\r\nimport { MatFormField, MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\n\r\n/*\r\n  Much thanks to https://material.angular.io/guide/creating-a-custom-form-field-control for the entirety of this component\r\n*/\r\n\r\nexport class Tel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) { }\r\n\r\n  public toString() {\r\n    return this.area + this.exchange + this.subscriber;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-tel-input',\r\n  templateUrl: './tel-input.component.html',\r\n  styleUrls: ['./tel-input.component.css'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: TelInputComponent }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  },\r\n})\r\nexport class TelInputComponent implements ControlValueAccessor, MatFormFieldControl<Tel>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('area') areaInput!: HTMLInputElement;\r\n  @ViewChild('exchange') exchangeInput!: HTMLInputElement;\r\n  @ViewChild('subscriber') subscriberInput!: HTMLInputElement;\r\n\r\n  parts = this._formBuilder.group({\r\n    area: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    exchange: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\r\n    subscriber: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\r\n  });\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  touched = false;\r\n  controlType = 'example-tel-input';\r\n  id = `example-tel-input-${TelInputComponent.nextId++}`;\r\n  onChange = (_: any) => { };\r\n  onTouched = () => { };\r\n\r\n  get empty() {\r\n    const {\r\n      value: { area, exchange, subscriber },\r\n    } = this.parts;\r\n\r\n    return !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy!: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string = '';\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: BooleanInput) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: BooleanInput) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): Tel | null {\r\n    if (this.parts.valid) {\r\n      const {\r\n        value: { area, exchange, subscriber },\r\n      } = this.parts;\r\n      return new Tel(area!, exchange!, subscriber!);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: Tel | null) {\r\n    const { area, exchange, subscriber } = tel || new Tel('', '', '');\r\n    this.parts.setValue({ area, exchange, subscriber });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.touched;\r\n  }\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl,\r\n  ) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  onFocusIn(event: FocusEvent) {\r\n    if (!this.focused) {\r\n      this.focused = true;\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  onFocusOut(event: FocusEvent) {\r\n    if (!this._elementRef.nativeElement.contains(event.relatedTarget as Element)) {\r\n      this.touched = true;\r\n      this.focused = false;\r\n      this.onTouched();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program');\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement.querySelector(\r\n      '.example-tel-input-container',\r\n    )!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    if (this.parts.controls.subscriber.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.exchange.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.area.valid) {\r\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\r\n    } else {\r\n      this._focusMonitor.focusVia(this.areaInput, 'program');\r\n    }\r\n  }\r\n\r\n  writeValue(tel: Tel | null): void {\r\n    this.value = tel;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    control.setValue(control.value.replace(/[^0-9]/g, ''), { onlySelf: true, emitEvent: false });\r\n    this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n}\r\n","<div role=\"group\" class=\"example-tel-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField.getLabelId()\"\r\n     (focusin)=\"onFocusIn($event)\"\r\n     (focusout)=\"onFocusOut($event)\">\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"area\" size=\"3\"\r\n         maxLength=\"3\"\r\n         aria-label=\"Area code\"\r\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\r\n         #area>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"exchange\"\r\n         maxLength=\"3\"\r\n         size=\"3\"\r\n         aria-label=\"Exchange code\"\r\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\r\n         #exchange>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         type=\"text\"\r\n         inputmode=\"decimal\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (input)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` or `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  auth0: {\r\n    domain: 'dev-5eiy2cesgxurrngi.us.auth0.com',\r\n    clientId: 'JLatVELLRM16M3zBNhUZi27hZXGe5jci',\r\n    redirect_uri: window.location.origin,\r\n    audience: 'https://dev-5eiy2cesgxurrngi.us.auth0.com/userinfo'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","StartReportComponent","EndReportComponent","PauseReportComponent","CancelReportComponent","OffloadReportComponent","SubmittedReportComponent","LoginComponent","SignUpComponent","GillNetReportComponent","SeineReportComponent","TrollReportComponent","NoTripHomeComponent","ActiveTripHomeComponent","OffloadHomeComponent","RecordsPageComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","isDevMode","BrowserModule","MaterialModule","FormsModule","ReactiveFormsModule","ToastrModule","AuthModule","ServiceWorkerModule","BrowserAnimationsModule","AddVesselDialogComponent","NgbTimepickerModule","AddSpeciesDialogComponent","OnlineStatusModule","TelInputComponent","environment","env","AddNetDialogComponent","MenuComponent","MatIconModule","DatePipe","AppModule","bootstrap","domain","auth0","clientId","authorizationParams","redirect_uri","audience","cacheLocation","register","enabled","registrationStrategy","declarations","UntypedFormGroup","FormControl","Validators","OnlineStatusType","DOCUMENT","auth","router","localStorageService","onlineStatusService","toastr","document","email","required","getStatus","ONLINE","isOnline","onlineStatus","loginButton","ngOnInit","form","get","valueChanges","subscribe","emailErrors","errors","emailError","attemptLogin","window","location","reload","isAuthenticated$","value","query","search","shouldParseResult","includes","handleRedirectCallback","console","log","err","history","replaceState","title","loginWithPopup","user$","user","id","sub","isNewUser","createNewUser","saveData","currHomepage","getUser","navigate","error","valid","userIDs","getAllUserIDs","thisUser","getUserByID","userEmail","ids","existingID","consts","ctx","generalValidator","Tel","firstName","lastName","phoneNum","fin","minLength","maxLength","pattern","regex","signupForm","finErrors","minlength","maxlength","finError","toHome","toLogin","OFFLINE","logout","logoutParams","returnTo","origin","attemptSignUp","sending","telInput","touched","stateChanges","next","updateValueAndValidity","viewQuery","MatTable","UserData","SpeciesData","Net","TableRules","DailyCatchReport","Trip","dialog","net","emptyNet","hoursFished","mgmtArea","zoneArea","numSets","comments","nonFish","Date","currID","getCurrID","userDetails","initialize","authd","onNonFishChange","commentControl","setValidators","clearValidators","currTrip","validateCurrTrip","userNets","nets","unfilteredFishList","getSpeciesList","gillNetTable","getTableRules","filterTableData","populateReport","pages","numPages","spinnerIncrement","displayedColumns","toNextPage","currNet","getSelectedNet","patchValue","numReports","dailyCatchReports","length","prevReport","managementArea","subArea","species","containsSpecies","speciesName","fishListDetails","push","excludesSpecies","fishList","determineCellStyling","name","isReleaseOnly","releaseOnlySpecies","saveUserDetails","userID","isChecked","setSelectedNet","netName","saveUserNets","currPage","incrementPage","sendToDFO","spinnerProgress","toPreviousPage","addNetDialog","dialogRef","open","width","height","afterClosed","result","newNet","netType","netLength","netDepth","netUnits","hangRatio","meshSize","meshUnits","numMeshes","numStrands","updateTable","table","renderRows","calculateTotalFish","type","totalFish","i","kept","released","getNewSpecies","newSpeciesData","addSpecies","data","identifier","currentFishList","filteredFishList","tableInfo","editSpecies","index","splice","addSpeciesDialog","saveCatchReport","state","forbidNonNumeric","controlName","control","setValue","replace","validateHoursFished","test","determineSpeciesData","tempFishArray","fish","catchReport","netUsed","dateFished","catchDate","speciesDataList","submissionDate","seineTable","frozenOrIced","trollTable","toString","isValid","gearName","tableType","CancelReport","confirmationNumber","EndReport","endDate","OffloadReport","offloadDate","PauseReport","pauseDate","StartReport","isComplete","startDate","Gear","checked","logbookID","depth","depthUnits","ratio","mesh","strands","weedlineDepth","weedlineDepthUnits","meshSizeUnits","transformAnonymous","anon","list","forEach","item","LicenseArea","licenseName","licenseLocation","VesselData","gear","vessel","licenseArea","vname","vcoastNum","vesselName","vesselCoastNumber","Validator","invalid","speciesValidator","speciesList","toLowerCase","MAT_DIALOG_DATA","netTypes","getStringList","netTypeVal","onNetTypeChange","strandControl","addNet","clearInputs","close","markAllAsTouched","deleteNet","controls","reset","stringList","offloadWeight","offloadPieces","speciesData","fillSpecies","setDialogConfig","speciesChange","filteredSpecies","displayedTitle","speciesIsReadOnly","currentSpeciesList","checkSpecies","getCurrentFormSpecies","deleteSpecies","vesselNumber","addVessel","deleteVessel","onNoClick","getGearName","getDate","date","toCatchReport","gearType","toEndReport","toPauseReport","toCancelReport","toOffloadReport","saveDailyCatchReports","tempTrip","report","tempReport","saveOldReport","isSaved","startFishingReport","master","contactName","offloadNeeded","endFishingReport","cancelFishingReport","pauseFishingReports","offloadReports","prevTrips","validatePrevTrips","toStartReport","setNewTripFlag","requestToStartNewTrip","clearNewTripFlag","toNoTripHome","updateHomepage","A11yModule","ClipboardModule","DragDropModule","PortalModule","ScrollingModule","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatRippleModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","OverlayModule","datePipe","formatDate","formattedDate","transform","getGear","toCurrentHome","toProfile","toRecords","toResources","toFisheryNotices","saveReportData","cancelReport","site","hour","minute","arrivalTime","getHours","getMinutes","managementAreaInvalid","endForm","setDateTime","arrivalSite","arrivalForm","newDate","toSubmittedReport","homeName","arrivalHours","arrivalMinutes","setHours","setMinutes","setSeconds","setMilliseconds","fishSlipIssued","fishSlipNumber","weightUnits","onFishSlipChange","offloadForm","fishSlipControl","setTableRules","filterSpeciesData","getTableData","setDisplayedColumns","offloadTime","offloadTable","speciesNamesList","tempSpecies","tableDataSource","startHours","startMinutes","getCurrentGearType","fishSlipVal","getWeightUnits","excludeFlag","tableSpecies","weight","pieces","offloadReport","fishSlip","catchWeightUnits","pauseForm","pauseReport","emptyGear","emptyVessel","emptyArea","gears","getGears","userVessels","vessels","licenseAreas","getLicenseAreas","currGear","currVessel","currArea","currMaster","currFin","currManagementArea","currName","currPhoneNum","currComments","startTime","isInProgress","setSelectedGear","setSelectedVessel","setSelectedArea","clearTripData","startForm","saveCurrTrip","determineOffloadReport","isSeineOffload","isGillOffload","addVesselDialog","newVessel","gearInvalid","masterInvalid","vesselInvalid","licenseAreaInvalid","contactDetailsInvalid","reportName","getCurrentNavigation","extras","LocalStorageService","setLists","key","localStorage","setItem","JSON","stringify","getData","getItem","parse","removeData","removeItem","newUser","setVessels","setCurrTrip","setNets","setHomepage","validateHomepage","homepage","validateVessels","validateStartFishingReport","startReport","setStartReport","setPrevTrips","prevTripList","trip","userPrevTrip","tripID","usercurrTrip","getPhoneNum","userGear","userVessel","userLicenseArea","validateNets","userString","setLicenseAreas","licenseAreaArray","setSpeciesList","speciesArray","gearList","setGears","gearArray","newTable","tableList","area","exchange","subscriber","stringArray","currString","newStartReport","tableRulesList","licenseAreaList","setNetTypes","factory","providedIn","coerceBooleanProperty","MatFormFieldControl","MAT_FORM_FIELD","Subject","_formBuilder","_focusMonitor","_elementRef","_formField","ngControl","group","nextId","_","valueAccessor","empty","parts","shouldLabelFloat","focused","placeholder","_placeholder","_required","disabled","_disabled","disable","enable","tel","errorState","ngOnDestroy","complete","stopMonitoring","onFocusIn","event","onFocusOut","nativeElement","contains","relatedTarget","onTouched","autoFocusNext","nextElement","focusVia","autoFocusPrev","prevElement","setDescribedByIds","controlElement","querySelector","setAttribute","join","onContainerClick","subscriberInput","exchangeInput","areaInput","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","_handleInput","onlySelf","emitEvent","provide","useExisting","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}